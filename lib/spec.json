{
    "openapi": "3.0.0",
    "servers": [
        {
            "url": "https://rds.amazonaws.com/"
        },
        {
            "url": "http://rds.amazonaws.com/"
        }
    ],
    "x-hasEquivalentPaths": true,
    "info": {
        "contact": {
            "email": "mike.ralphson@gmail.com",
            "name": "Mike Ralphson",
            "url": "https://github.com/mermade/aws2openapi",
            "x-twitter": "PermittedSoc"
        },
        "description": "<fullname>Amazon Neptune</fullname> <p> </p> <p> Amazon Neptune is a fast, reliable, fully-managed graph database service that makes it easy to build and run applications that work with highly connected datasets. The core of Amazon Neptune is a purpose-built, high-performance graph database engine optimized for storing billions of relationships and querying the graph with milliseconds latency. Amazon Neptune supports popular graph models Property Graph and W3C's RDF, and their respective query languages Apache TinkerPop Gremlin and SPARQL, allowing you to easily build queries that efficiently navigate highly connected datasets. Neptune powers graph use cases such as recommendation engines, fraud detection, knowledge graphs, drug discovery, and network security. </p> <p>This interface reference for Amazon Neptune contains documentation for a programming or command line interface you can use to manage Amazon Neptune. Note that Amazon Neptune is asynchronous, which means that some interfaces might require techniques such as polling or callback functions to determine when a command has been applied. In this reference, the parameter descriptions indicate whether a command is applied immediately, on the next instance reboot, or during the maintenance window. The reference structure is as follows, and we list following some related topics from the user guide.</p> <p> <b>Amazon Neptune API Reference</b> </p>",
        "license": {
            "name": "Apache 2.0 License",
            "url": "http://www.apache.org/licenses/"
        },
        "termsOfService": "https://aws.amazon.com/service-terms/",
        "title": "Amazon Neptune",
        "version": "2014-10-31",
        "x-apiClientRegistration": {
            "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
        },
        "x-apisguru-categories": [
            "cloud"
        ],
        "x-logo": {
            "backgroundColor": "#FFFFFF",
            "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.jpeg"
        },
        "x-origin": [
            {
                "contentType": "application/json",
                "converter": {
                    "url": "https://github.com/mermade/aws2openapi",
                    "version": "1.0.0"
                },
                "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/neptune-2014-10-31.normal.json",
                "x-apisguru-direct": true
            }
        ],
        "x-preferred": true,
        "x-providerName": "amazonaws.com",
        "x-release": "v4",
        "x-serviceName": "neptune"
    },
    "externalDocs": {
        "description": "Amazon Web Services documentation",
        "url": "https://docs.aws.amazon.com/rds/"
    },
    "security": [
        {
            "hmac": []
        }
    ],
    "paths": {
        "/": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Associates an Identity and Access Management (IAM) role from an Neptune DB cluster. ",
                "operationId": "AddRoleToDBCluster",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "DBClusterNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBClusterIdentifier</i> does not refer to an existing DB cluster. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "DBClusterRoleAlreadyExistsFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The specified IAM role Amazon Resource Name (ARN) is already associated with the specified DB cluster.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidDBClusterStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The DB cluster is not in a valid state.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "483": {
                        "description": "DBClusterRoleQuotaExceededFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "You have exceeded the maximum number of IAM roles that can be associated with the specified DB cluster.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "DBClusterIdentifier": {
                                        "description": "The name of the DB cluster to associate the IAM role with.",
                                        "type": "string"
                                    },
                                    "RoleArn": {
                                        "description": "The Amazon Resource Name (ARN) of the IAM role to associate with the Neptune DB cluster, for example <code>arn:aws:iam::123456789012:role/NeptuneAccessRole</code>.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "DBClusterIdentifier",
                                    "RoleArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#AddSourceIdentifierToSubscription": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Adds a source identifier to an existing event notification subscription.",
                "operationId": "AddSourceIdentifierToSubscription",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "EventSubscription": {
                                            "description": "Contains the results of a successful invocation of the <a>DescribeEventSubscriptions</a> action.",
                                            "properties": {
                                                "CustSubscriptionId": {
                                                    "description": "The event notification subscription Id.",
                                                    "type": "string"
                                                },
                                                "CustomerAwsId": {
                                                    "description": "The AWS customer account associated with the event notification subscription.",
                                                    "type": "string"
                                                },
                                                "Enabled": {
                                                    "description": "A Boolean value indicating if the subscription is enabled. True indicates the subscription is enabled.",
                                                    "type": "boolean"
                                                },
                                                "EventCategoriesList": {
                                                    "description": "A list of event categories for the event notification subscription.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "EventSubscriptionArn": {
                                                    "description": "The Amazon Resource Name (ARN) for the event subscription.",
                                                    "type": "string"
                                                },
                                                "SnsTopicArn": {
                                                    "description": "The topic ARN of the event notification subscription.",
                                                    "type": "string"
                                                },
                                                "SourceIdsList": {
                                                    "description": "A list of source IDs for the event notification subscription.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "SourceType": {
                                                    "description": "The source type for the event notification subscription.",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "<p>The status of the event notification subscription.</p> <p>Constraints:</p> <p>Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist</p> <p>The status \"no-permission\" indicates that Neptune no longer has permission to post to the SNS topic. The status \"topic-not-exist\" indicates that the topic was deleted after the subscription was created.</p>",
                                                    "type": "string"
                                                },
                                                "SubscriptionCreationTime": {
                                                    "description": "The time the event notification subscription was created.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "SubscriptionNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "SourceNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "SourceIdentifier": {
                                        "description": "<p>The identifier of the event source to be added.</p> <p>Constraints:</p> <ul> <li> <p>If the source type is a DB instance, then a <code>DBInstanceIdentifier</code> must be supplied.</p> </li> <li> <p>If the source type is a DB security group, a <code>DBSecurityGroupName</code> must be supplied.</p> </li> <li> <p>If the source type is a DB parameter group, a <code>DBParameterGroupName</code> must be supplied.</p> </li> <li> <p>If the source type is a DB snapshot, a <code>DBSnapshotIdentifier</code> must be supplied.</p> </li> </ul>",
                                        "type": "string"
                                    },
                                    "SubscriptionName": {
                                        "description": "The name of the event notification subscription you want to add a source identifier to.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SubscriptionName",
                                    "SourceIdentifier"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#AddTagsToResource": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Adds metadata tags to an Amazon Neptune resource. These tags can also be used with cost allocation reporting to track cost associated with Amazon Neptune resources, or used in a Condition statement in an IAM policy for Amazon Neptune.",
                "operationId": "AddTagsToResource",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "DBInstanceNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBInstanceIdentifier</i> does not refer to an existing DB instance. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "DBSnapshotNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBSnapshotIdentifier</i> does not refer to an existing DB snapshot. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "482": {
                        "description": "DBClusterNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBClusterIdentifier</i> does not refer to an existing DB cluster. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "ResourceName": {
                                        "description": "The Amazon Neptune resource that the tags are added to. This value is an Amazon Resource Name (ARN). For information about creating an ARN, see <a href=\"http://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing\"> Constructing an Amazon Resource Name (ARN)</a>.",
                                        "type": "string"
                                    },
                                    "Tags": {
                                        "description": "The tags to be assigned to the Amazon Neptune resource.",
                                        "items": {
                                            "description": "Metadata assigned to an Amazon Neptune resource consisting of a key-value pair.",
                                            "properties": {
                                                "Key": {
                                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "ResourceName",
                                    "Tags"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ApplyPendingMaintenanceAction": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Applies a pending maintenance action to a resource (for example, to a DB instance).",
                "operationId": "ApplyPendingMaintenanceAction",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "ResourcePendingMaintenanceActions": {
                                            "description": "Describes the pending maintenance actions for a resource.",
                                            "properties": {
                                                "PendingMaintenanceActionDetails": {
                                                    "description": "A list that provides details about the pending maintenance actions for the resource.",
                                                    "items": {
                                                        "description": "Provides information about a pending maintenance action for a resource.",
                                                        "properties": {
                                                            "Action": {
                                                                "description": "The type of pending maintenance action that is available for the resource.",
                                                                "type": "string"
                                                            },
                                                            "AutoAppliedAfterDate": {
                                                                "description": "The date of the maintenance window when the action is applied. The maintenance action is applied to the resource during its first maintenance window after this date. If this date is specified, any <code>next-maintenance</code> opt-in requests are ignored.",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "CurrentApplyDate": {
                                                                "description": "The effective date when the pending maintenance action is applied to the resource. This date takes into account opt-in requests received from the <a>ApplyPendingMaintenanceAction</a> API, the <code>AutoAppliedAfterDate</code>, and the <code>ForcedApplyDate</code>. This value is blank if an opt-in request has not been received and nothing has been specified as <code>AutoAppliedAfterDate</code> or <code>ForcedApplyDate</code>.",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "Description": {
                                                                "description": "A description providing more detail about the maintenance action.",
                                                                "type": "string"
                                                            },
                                                            "ForcedApplyDate": {
                                                                "description": "The date when the maintenance action is automatically applied. The maintenance action is applied to the resource on this date regardless of the maintenance window for the resource. If this date is specified, any <code>immediate</code> opt-in requests are ignored.",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "OptInStatus": {
                                                                "description": "Indicates the type of opt-in request that has been received for the resource.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "ResourceIdentifier": {
                                                    "description": "The ARN of the resource that has pending maintenance actions.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The specified resource ID was not found.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "ApplyAction": {
                                        "description": "<p>The pending maintenance action to apply to this resource.</p> <p>Valid values: <code>system-update</code>, <code>db-upgrade</code> </p>",
                                        "type": "string"
                                    },
                                    "OptInType": {
                                        "description": "<p>A value that specifies the type of opt-in request, or undoes an opt-in request. An opt-in request of type <code>immediate</code> can't be undone.</p> <p>Valid values:</p> <ul> <li> <p> <code>immediate</code> - Apply the maintenance action immediately.</p> </li> <li> <p> <code>next-maintenance</code> - Apply the maintenance action during the next maintenance window for the resource.</p> </li> <li> <p> <code>undo-opt-in</code> - Cancel any existing <code>next-maintenance</code> opt-in requests.</p> </li> </ul>",
                                        "type": "string"
                                    },
                                    "ResourceIdentifier": {
                                        "description": "The Amazon Resource Name (ARN) of the resource that the pending maintenance action applies to. For information about creating an ARN, see <a href=\"http://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing\"> Constructing an Amazon Resource Name (ARN)</a>.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ResourceIdentifier",
                                    "ApplyAction",
                                    "OptInType"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CopyDBClusterParameterGroup": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Copies the specified DB cluster parameter group.",
                "operationId": "CopyDBClusterParameterGroup",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DBClusterParameterGroup": {
                                            "description": "<p>Contains the details of an Amazon Neptune DB cluster parameter group. </p> <p>This data type is used as a response element in the <a>DescribeDBClusterParameterGroups</a> action. </p>",
                                            "properties": {
                                                "DBClusterParameterGroupArn": {
                                                    "description": "The Amazon Resource Name (ARN) for the DB cluster parameter group.",
                                                    "type": "string"
                                                },
                                                "DBClusterParameterGroupName": {
                                                    "description": "Provides the name of the DB cluster parameter group.",
                                                    "type": "string"
                                                },
                                                "DBParameterGroupFamily": {
                                                    "description": "Provides the name of the DB parameter group family that this DB cluster parameter group is compatible with.",
                                                    "type": "string"
                                                },
                                                "Description": {
                                                    "description": "Provides the customer-specified description for this DB cluster parameter group.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DBParameterGroupNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBParameterGroupName</i> does not refer to an existing DB parameter group. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "DBParameterGroupQuotaExceededFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Request would result in user exceeding the allowed number of DB parameter groups.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "482": {
                        "description": "DBParameterGroupAlreadyExistsFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "A DB parameter group with the same name exists.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "SourceDBClusterParameterGroupIdentifier": {
                                        "description": "<p>The identifier or Amazon Resource Name (ARN) for the source DB cluster parameter group. For information about creating an ARN, see <a href=\"http://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing\"> Constructing an Amazon Resource Name (ARN)</a>. </p> <p>Constraints:</p> <ul> <li> <p>Must specify a valid DB cluster parameter group.</p> </li> <li> <p>If the source DB cluster parameter group is in the same AWS Region as the copy, specify a valid DB parameter group identifier, for example <code>my-db-cluster-param-group</code>, or a valid ARN.</p> </li> <li> <p>If the source DB parameter group is in a different AWS Region than the copy, specify a valid DB cluster parameter group ARN, for example <code>arn:aws:rds:us-east-1:123456789012:cluster-pg:custom-cluster-group1</code>.</p> </li> </ul>",
                                        "type": "string"
                                    },
                                    "Tags": {
                                        "description": "A list of tags. For more information, see <a href=\"http://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html\">Tagging Amazon Neptune Resources</a>. ",
                                        "items": {
                                            "description": "Metadata assigned to an Amazon Neptune resource consisting of a key-value pair.",
                                            "properties": {
                                                "Key": {
                                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "TargetDBClusterParameterGroupDescription": {
                                        "description": "A description for the copied DB cluster parameter group.",
                                        "type": "string"
                                    },
                                    "TargetDBClusterParameterGroupIdentifier": {
                                        "description": "<p>The identifier for the copied DB cluster parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Cannot be null, empty, or blank</p> </li> <li> <p>Must contain from 1 to 255 letters, numbers, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-cluster-param-group1</code> </p>",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SourceDBClusterParameterGroupIdentifier",
                                    "TargetDBClusterParameterGroupIdentifier",
                                    "TargetDBClusterParameterGroupDescription"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CopyDBClusterSnapshot": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Copies a snapshot of a DB cluster.</p> <p>To copy a DB cluster snapshot from a shared manual DB cluster snapshot, <code>SourceDBClusterSnapshotIdentifier</code> must be the Amazon Resource Name (ARN) of the shared DB cluster snapshot.</p> <p>You can copy an encrypted DB cluster snapshot from another AWS Region. In that case, the AWS Region where you call the <code>CopyDBClusterSnapshot</code> action is the destination AWS Region for the encrypted DB cluster snapshot to be copied to. To copy an encrypted DB cluster snapshot from another AWS Region, you must provide the following values:</p> <ul> <li> <p> <code>KmsKeyId</code> - The AWS Key Management System (AWS KMS) key identifier for the key to use to encrypt the copy of the DB cluster snapshot in the destination AWS Region.</p> </li> <li> <p> <code>PreSignedUrl</code> - A URL that contains a Signature Version 4 signed request for the <code>CopyDBClusterSnapshot</code> action to be called in the source AWS Region where the DB cluster snapshot is copied from. The pre-signed URL must be a valid request for the <code>CopyDBClusterSnapshot</code> API action that can be executed in the source AWS Region that contains the encrypted DB cluster snapshot to be copied.</p> <p>The pre-signed URL request must contain the following parameter values:</p> <ul> <li> <p> <code>KmsKeyId</code> - The KMS key identifier for the key to use to encrypt the copy of the DB cluster snapshot in the destination AWS Region. This is the same identifier for both the <code>CopyDBClusterSnapshot</code> action that is called in the destination AWS Region, and the action contained in the pre-signed URL.</p> </li> <li> <p> <code>DestinationRegion</code> - The name of the AWS Region that the DB cluster snapshot will be created in.</p> </li> <li> <p> <code>SourceDBClusterSnapshotIdentifier</code> - The DB cluster snapshot identifier for the encrypted DB cluster snapshot to be copied. This identifier must be in the Amazon Resource Name (ARN) format for the source AWS Region. For example, if you are copying an encrypted DB cluster snapshot from the us-west-2 AWS Region, then your <code>SourceDBClusterSnapshotIdentifier</code> looks like the following example: <code>arn:aws:rds:us-west-2:123456789012:cluster-snapshot:neptune-cluster1-snapshot-20161115</code>.</p> </li> </ul> <p>To learn how to generate a Signature Version 4 signed request, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html\"> Authenticating Requests: Using Query Parameters (AWS Signature Version 4)</a> and <a href=\"http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\"> Signature Version 4 Signing Process</a>.</p> </li> <li> <p> <code>TargetDBClusterSnapshotIdentifier</code> - The identifier for the new copy of the DB cluster snapshot in the destination AWS Region.</p> </li> <li> <p> <code>SourceDBClusterSnapshotIdentifier</code> - The DB cluster snapshot identifier for the encrypted DB cluster snapshot to be copied. This identifier must be in the ARN format for the source AWS Region and is the same value as the <code>SourceDBClusterSnapshotIdentifier</code> in the pre-signed URL. </p> </li> </ul> <p>To cancel the copy operation once it is in progress, delete the target DB cluster snapshot identified by <code>TargetDBClusterSnapshotIdentifier</code> while that DB cluster snapshot is in \"copying\" status.</p>",
                "operationId": "CopyDBClusterSnapshot",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DBClusterSnapshot": {
                                            "description": "<p>Contains the details for an Amazon Neptune DB cluster snapshot </p> <p>This data type is used as a response element in the <a>DescribeDBClusterSnapshots</a> action. </p>",
                                            "properties": {
                                                "AllocatedStorage": {
                                                    "description": "Specifies the allocated storage size in gibibytes (GiB).",
                                                    "type": "integer"
                                                },
                                                "AvailabilityZones": {
                                                    "description": "Provides the list of EC2 Availability Zones that instances in the DB cluster snapshot can be restored in.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "ClusterCreateTime": {
                                                    "description": "Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "DBClusterIdentifier": {
                                                    "description": "Specifies the DB cluster identifier of the DB cluster that this DB cluster snapshot was created from.",
                                                    "type": "string"
                                                },
                                                "DBClusterSnapshotArn": {
                                                    "description": "The Amazon Resource Name (ARN) for the DB cluster snapshot.",
                                                    "type": "string"
                                                },
                                                "DBClusterSnapshotIdentifier": {
                                                    "description": "Specifies the identifier for the DB cluster snapshot.",
                                                    "type": "string"
                                                },
                                                "Engine": {
                                                    "description": "Specifies the name of the database engine.",
                                                    "type": "string"
                                                },
                                                "EngineVersion": {
                                                    "description": "Provides the version of the database engine for this DB cluster snapshot.",
                                                    "type": "string"
                                                },
                                                "IAMDatabaseAuthenticationEnabled": {
                                                    "description": "True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.",
                                                    "type": "boolean"
                                                },
                                                "KmsKeyId": {
                                                    "description": "If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB cluster snapshot.",
                                                    "type": "string"
                                                },
                                                "LicenseModel": {
                                                    "description": "Provides the license model information for this DB cluster snapshot.",
                                                    "type": "string"
                                                },
                                                "MasterUsername": {
                                                    "description": "Provides the master username for the DB cluster snapshot.",
                                                    "type": "string"
                                                },
                                                "PercentProgress": {
                                                    "description": "Specifies the percentage of the estimated data that has been transferred.",
                                                    "type": "integer"
                                                },
                                                "Port": {
                                                    "description": "Specifies the port that the DB cluster was listening on at the time of the snapshot.",
                                                    "type": "integer"
                                                },
                                                "SnapshotCreateTime": {
                                                    "description": "Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "SnapshotType": {
                                                    "description": "Provides the type of the DB cluster snapshot.",
                                                    "type": "string"
                                                },
                                                "SourceDBClusterSnapshotArn": {
                                                    "description": "If the DB cluster snapshot was copied from a source DB cluster snapshot, the Amazon Resource Name (ARN) for the source DB cluster snapshot, otherwise, a null value.",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "Specifies the status of this DB cluster snapshot.",
                                                    "type": "string"
                                                },
                                                "StorageEncrypted": {
                                                    "description": "Specifies whether the DB cluster snapshot is encrypted.",
                                                    "type": "boolean"
                                                },
                                                "VpcId": {
                                                    "description": "Provides the VPC ID associated with the DB cluster snapshot.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DBClusterSnapshotAlreadyExistsFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "User already has a DB cluster snapshot with the given identifier.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "DBClusterSnapshotNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidDBClusterStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The DB cluster is not in a valid state.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidDBClusterSnapshotStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The supplied value is not a valid DB cluster snapshot state.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "484": {
                        "description": "SnapshotQuotaExceededFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Request would result in user exceeding the allowed number of DB snapshots.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "485": {
                        "description": "KMSKeyNotAccessibleFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Error accessing KMS key.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "CopyTags": {
                                        "description": "True to copy all tags from the source DB cluster snapshot to the target DB cluster snapshot, and otherwise false. The default is false.",
                                        "type": "boolean"
                                    },
                                    "KmsKeyId": {
                                        "description": "<p>The AWS AWS KMS key ID for an encrypted DB cluster snapshot. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key. </p> <p>If you copy an unencrypted DB cluster snapshot and specify a value for the <code>KmsKeyId</code> parameter, Amazon Neptune encrypts the target DB cluster snapshot using the specified KMS encryption key. </p> <p>If you copy an encrypted DB cluster snapshot from your AWS account, you can specify a value for <code>KmsKeyId</code> to encrypt the copy with a new KMS encryption key. If you don't specify a value for <code>KmsKeyId</code>, then the copy of the DB cluster snapshot is encrypted with the same KMS key as the source DB cluster snapshot. </p> <p>If you copy an encrypted DB cluster snapshot that is shared from another AWS account, then you must specify a value for <code>KmsKeyId</code>. </p> <p>To copy an encrypted DB cluster snapshot to another AWS Region, you must set <code>KmsKeyId</code> to the KMS key ID you want to use to encrypt the copy of the DB cluster snapshot in the destination AWS Region. KMS encryption keys are specific to the AWS Region that they are created in, and you can't use encryption keys from one AWS Region in another AWS Region.</p>",
                                        "type": "string"
                                    },
                                    "PreSignedUrl": {
                                        "description": "<p>The URL that contains a Signature Version 4 signed request for the <code>CopyDBClusterSnapshot</code> API action in the AWS Region that contains the source DB cluster snapshot to copy. The <code>PreSignedUrl</code> parameter must be used when copying an encrypted DB cluster snapshot from another AWS Region.</p> <p>The pre-signed URL must be a valid request for the <code>CopyDBSClusterSnapshot</code> API action that can be executed in the source AWS Region that contains the encrypted DB cluster snapshot to be copied. The pre-signed URL request must contain the following parameter values:</p> <ul> <li> <p> <code>KmsKeyId</code> - The AWS KMS key identifier for the key to use to encrypt the copy of the DB cluster snapshot in the destination AWS Region. This is the same identifier for both the <code>CopyDBClusterSnapshot</code> action that is called in the destination AWS Region, and the action contained in the pre-signed URL.</p> </li> <li> <p> <code>DestinationRegion</code> - The name of the AWS Region that the DB cluster snapshot will be created in.</p> </li> <li> <p> <code>SourceDBClusterSnapshotIdentifier</code> - The DB cluster snapshot identifier for the encrypted DB cluster snapshot to be copied. This identifier must be in the Amazon Resource Name (ARN) format for the source AWS Region. For example, if you are copying an encrypted DB cluster snapshot from the us-west-2 AWS Region, then your <code>SourceDBClusterSnapshotIdentifier</code> looks like the following example: <code>arn:aws:rds:us-west-2:123456789012:cluster-snapshot:neptune-cluster1-snapshot-20161115</code>.</p> </li> </ul> <p>To learn how to generate a Signature Version 4 signed request, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html\"> Authenticating Requests: Using Query Parameters (AWS Signature Version 4)</a> and <a href=\"http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\"> Signature Version 4 Signing Process</a>.</p>",
                                        "type": "string"
                                    },
                                    "SourceDBClusterSnapshotIdentifier": {
                                        "description": "<p>The identifier of the DB cluster snapshot to copy. This parameter is not case-sensitive.</p> <p>You can't copy an encrypted, shared DB cluster snapshot from one AWS Region to another.</p> <p>Constraints:</p> <ul> <li> <p>Must specify a valid system snapshot in the \"available\" state.</p> </li> <li> <p>If the source snapshot is in the same AWS Region as the copy, specify a valid DB snapshot identifier.</p> </li> <li> <p>If the source snapshot is in a different AWS Region than the copy, specify a valid DB cluster snapshot ARN. </p> </li> </ul> <p>Example: <code>my-cluster-snapshot1</code> </p>",
                                        "type": "string"
                                    },
                                    "Tags": {
                                        "description": "A list of tags. For more information, see <a href=\"http://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html\">Tagging Amazon Neptune Resources</a>. ",
                                        "items": {
                                            "description": "Metadata assigned to an Amazon Neptune resource consisting of a key-value pair.",
                                            "properties": {
                                                "Key": {
                                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "TargetDBClusterSnapshotIdentifier": {
                                        "description": "<p>The identifier of the new DB cluster snapshot to create from the source DB cluster snapshot. This parameter is not case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster-snapshot2</code> </p>",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SourceDBClusterSnapshotIdentifier",
                                    "TargetDBClusterSnapshotIdentifier"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CopyDBParameterGroup": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Copies the specified DB parameter group.",
                "operationId": "CopyDBParameterGroup",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DBParameterGroup": {
                                            "description": "<p>Contains the details of an Amazon Neptune DB parameter group. </p> <p>This data type is used as a response element in the <a>DescribeDBParameterGroups</a> action. </p>",
                                            "properties": {
                                                "DBParameterGroupArn": {
                                                    "description": "The Amazon Resource Name (ARN) for the DB parameter group.",
                                                    "type": "string"
                                                },
                                                "DBParameterGroupFamily": {
                                                    "description": "Provides the name of the DB parameter group family that this DB parameter group is compatible with.",
                                                    "type": "string"
                                                },
                                                "DBParameterGroupName": {
                                                    "description": "Provides the name of the DB parameter group.",
                                                    "type": "string"
                                                },
                                                "Description": {
                                                    "description": "Provides the customer-specified description for this DB parameter group.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DBParameterGroupNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBParameterGroupName</i> does not refer to an existing DB parameter group. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "DBParameterGroupAlreadyExistsFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "A DB parameter group with the same name exists.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "482": {
                        "description": "DBParameterGroupQuotaExceededFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Request would result in user exceeding the allowed number of DB parameter groups.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "SourceDBParameterGroupIdentifier": {
                                        "description": "<p> The identifier or ARN for the source DB parameter group. For information about creating an ARN, see <a href=\"http://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing\"> Constructing an Amazon Resource Name (ARN)</a>. </p> <p>Constraints:</p> <ul> <li> <p>Must specify a valid DB parameter group.</p> </li> <li> <p>Must specify a valid DB parameter group identifier, for example <code>my-db-param-group</code>, or a valid ARN.</p> </li> </ul>",
                                        "type": "string"
                                    },
                                    "Tags": {
                                        "description": "A list of tags. For more information, see <a href=\"http://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html\">Tagging Amazon Neptune Resources</a>. ",
                                        "items": {
                                            "description": "Metadata assigned to an Amazon Neptune resource consisting of a key-value pair.",
                                            "properties": {
                                                "Key": {
                                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "TargetDBParameterGroupDescription": {
                                        "description": "A description for the copied DB parameter group.",
                                        "type": "string"
                                    },
                                    "TargetDBParameterGroupIdentifier": {
                                        "description": "<p>The identifier for the copied DB parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Cannot be null, empty, or blank</p> </li> <li> <p>Must contain from 1 to 255 letters, numbers, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-db-parameter-group</code> </p>",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SourceDBParameterGroupIdentifier",
                                    "TargetDBParameterGroupIdentifier",
                                    "TargetDBParameterGroupDescription"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CreateDBCluster": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Creates a new Amazon Neptune DB cluster.</p> <p>You can use the <code>ReplicationSourceIdentifier</code> parameter to create the DB cluster as a Read Replica of another DB cluster or Amazon Neptune DB instance. For cross-region replication where the DB cluster identified by <code>ReplicationSourceIdentifier</code> is encrypted, you must also specify the <code>PreSignedUrl</code> parameter.</p>",
                "operationId": "CreateDBCluster",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DBCluster": {
                                            "description": "<p>Contains the details of an Amazon Neptune DB cluster. </p> <p>This data type is used as a response element in the <a>DescribeDBClusters</a> action. </p>",
                                            "properties": {
                                                "AllocatedStorage": {
                                                    "description": " <code>AllocatedStorage</code> always returns 1, because Neptune DB cluster storage size is not fixed, but instead automatically adjusts as needed.",
                                                    "type": "integer"
                                                },
                                                "AssociatedRoles": {
                                                    "description": "Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.",
                                                    "items": {
                                                        "description": "Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.",
                                                        "properties": {
                                                            "RoleArn": {
                                                                "description": "The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.",
                                                                "type": "string"
                                                            },
                                                            "Status": {
                                                                "description": "<p>Describes the state of association between the IAM role and the DB cluster. The Status property returns one of the following values:</p> <ul> <li> <p> <code>ACTIVE</code> - the IAM role ARN is associated with the DB cluster and can be used to access other AWS services on your behalf.</p> </li> <li> <p> <code>PENDING</code> - the IAM role ARN is being associated with the DB cluster.</p> </li> <li> <p> <code>INVALID</code> - the IAM role ARN is associated with the DB cluster, but the DB cluster is unable to assume the IAM role in order to access other AWS services on your behalf.</p> </li> </ul>",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "AvailabilityZones": {
                                                    "description": "Provides the list of EC2 Availability Zones that instances in the DB cluster can be created in.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "BackupRetentionPeriod": {
                                                    "description": "Specifies the number of days for which automatic DB snapshots are retained.",
                                                    "type": "integer"
                                                },
                                                "CharacterSetName": {
                                                    "description": "If present, specifies the name of the character set that this cluster is associated with.",
                                                    "type": "string"
                                                },
                                                "CloneGroupId": {
                                                    "description": "Identifies the clone group to which the DB cluster is associated.",
                                                    "type": "string"
                                                },
                                                "ClusterCreateTime": {
                                                    "description": "Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "DBClusterArn": {
                                                    "description": "The Amazon Resource Name (ARN) for the DB cluster.",
                                                    "type": "string"
                                                },
                                                "DBClusterIdentifier": {
                                                    "description": "Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.",
                                                    "type": "string"
                                                },
                                                "DBClusterMembers": {
                                                    "description": "Provides the list of instances that make up the DB cluster.",
                                                    "items": {
                                                        "description": "Contains information about an instance that is part of a DB cluster.",
                                                        "properties": {
                                                            "DBClusterParameterGroupStatus": {
                                                                "description": "Specifies the status of the DB cluster parameter group for this member of the DB cluster.",
                                                                "type": "string"
                                                            },
                                                            "DBInstanceIdentifier": {
                                                                "description": "Specifies the instance identifier for this member of the DB cluster.",
                                                                "type": "string"
                                                            },
                                                            "IsClusterWriter": {
                                                                "description": "Value that is <code>true</code> if the cluster member is the primary instance for the DB cluster and <code>false</code> otherwise.",
                                                                "type": "boolean"
                                                            },
                                                            "PromotionTier": {
                                                                "description": "A value that specifies the order in which a Read Replica is promoted to the primary instance after a failure of the existing primary instance. ",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "DBClusterOptionGroupMemberships": {
                                                    "description": "Provides the list of option group memberships for this DB cluster.",
                                                    "items": {
                                                        "description": "Contains status information for a DB cluster option group.",
                                                        "properties": {
                                                            "DBClusterOptionGroupName": {
                                                                "description": "Specifies the name of the DB cluster option group.",
                                                                "type": "string"
                                                            },
                                                            "Status": {
                                                                "description": "Specifies the status of the DB cluster option group.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "DBClusterParameterGroup": {
                                                    "description": "Specifies the name of the DB cluster parameter group for the DB cluster.",
                                                    "type": "string"
                                                },
                                                "DBSubnetGroup": {
                                                    "description": "Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group.",
                                                    "type": "string"
                                                },
                                                "DatabaseName": {
                                                    "description": "Contains the name of the initial database of this DB cluster that was provided at create time, if one was specified when the DB cluster was created. This same name is returned for the life of the DB cluster.",
                                                    "type": "string"
                                                },
                                                "DbClusterResourceId": {
                                                    "description": "The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.",
                                                    "type": "string"
                                                },
                                                "EarliestRestorableTime": {
                                                    "description": "Specifies the earliest time to which a database can be restored with point-in-time restore.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Endpoint": {
                                                    "description": "Specifies the connection endpoint for the primary instance of the DB cluster.",
                                                    "type": "string"
                                                },
                                                "Engine": {
                                                    "description": "Provides the name of the database engine to be used for this DB cluster.",
                                                    "type": "string"
                                                },
                                                "EngineVersion": {
                                                    "description": "Indicates the database engine version.",
                                                    "type": "string"
                                                },
                                                "HostedZoneId": {
                                                    "description": "Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.",
                                                    "type": "string"
                                                },
                                                "IAMDatabaseAuthenticationEnabled": {
                                                    "description": "True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.",
                                                    "type": "boolean"
                                                },
                                                "KmsKeyId": {
                                                    "description": "If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB cluster.",
                                                    "type": "string"
                                                },
                                                "LatestRestorableTime": {
                                                    "description": "Specifies the latest time to which a database can be restored with point-in-time restore.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "MasterUsername": {
                                                    "description": "Contains the master username for the DB cluster.",
                                                    "type": "string"
                                                },
                                                "MultiAZ": {
                                                    "description": "Specifies whether the DB cluster has instances in multiple Availability Zones.",
                                                    "type": "boolean"
                                                },
                                                "PercentProgress": {
                                                    "description": "Specifies the progress of the operation as a percentage.",
                                                    "type": "string"
                                                },
                                                "Port": {
                                                    "description": "Specifies the port that the database engine is listening on.",
                                                    "type": "integer"
                                                },
                                                "PreferredBackupWindow": {
                                                    "description": "Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. ",
                                                    "type": "string"
                                                },
                                                "PreferredMaintenanceWindow": {
                                                    "description": "Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
                                                    "type": "string"
                                                },
                                                "ReadReplicaIdentifiers": {
                                                    "description": "Contains one or more identifiers of the Read Replicas associated with this DB cluster.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "ReaderEndpoint": {
                                                    "description": "<p>The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances connections across the Read Replicas that are available in a DB cluster. As clients request new connections to the reader endpoint, Neptune distributes the connection requests among the Read Replicas in the DB cluster. This functionality can help balance your read workload across multiple Read Replicas in your DB cluster. </p> <p>If a failover occurs, and the Read Replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Read Replicas in the cluster, you can then reconnect to the reader endpoint.</p>",
                                                    "type": "string"
                                                },
                                                "ReplicationSourceIdentifier": {
                                                    "description": "Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "Specifies the current state of this DB cluster.",
                                                    "type": "string"
                                                },
                                                "StorageEncrypted": {
                                                    "description": "Specifies whether the DB cluster is encrypted.",
                                                    "type": "boolean"
                                                },
                                                "VpcSecurityGroups": {
                                                    "description": "Provides a list of VPC security groups that the DB cluster belongs to.",
                                                    "items": {
                                                        "description": "This data type is used as a response element for queries on VPC security group membership.",
                                                        "properties": {
                                                            "Status": {
                                                                "description": "The status of the VPC security group.",
                                                                "type": "string"
                                                            },
                                                            "VpcSecurityGroupId": {
                                                                "description": "The name of the VPC security group.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DBClusterAlreadyExistsFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "User already has a DB cluster with the given identifier.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "InsufficientStorageClusterCapacityFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "There is insufficient storage available for the current action. You may be able to resolve this error by updating your subnet group to use different Availability Zones that have more storage available.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "482": {
                        "description": "DBClusterQuotaExceededFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "User attempted to create a new DB cluster and the user has already reached the maximum allowed DB cluster quota.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "483": {
                        "description": "StorageQuotaExceededFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Request would result in user exceeding the allowed amount of storage available across all DB instances.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "484": {
                        "description": "DBSubnetGroupNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "485": {
                        "description": "InvalidVPCNetworkStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "DB subnet group does not cover all Availability Zones after it is created because users' change.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "486": {
                        "description": "InvalidDBClusterStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The DB cluster is not in a valid state.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "487": {
                        "description": "InvalidDBSubnetGroupStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The DB subnet group cannot be deleted because it is in use.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "488": {
                        "description": "InvalidSubnet",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The requested subnet is invalid, or multiple subnets were requested that are not all in a common VPC.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "489": {
                        "description": "InvalidDBInstanceStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " The specified DB instance is not in the <i>available</i> state. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "490": {
                        "description": "DBClusterParameterGroupNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBClusterParameterGroupName</i> does not refer to an existing DB Cluster parameter group. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "491": {
                        "description": "KMSKeyNotAccessibleFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Error accessing KMS key.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "492": {
                        "description": "DBClusterNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBClusterIdentifier</i> does not refer to an existing DB cluster. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "493": {
                        "description": "DBInstanceNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBInstanceIdentifier</i> does not refer to an existing DB instance. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "494": {
                        "description": "DBSubnetGroupDoesNotCoverEnoughAZs",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Subnets in the DB subnet group should cover at least two Availability Zones unless there is only one Availability Zone.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "AvailabilityZones": {
                                        "description": "A list of EC2 Availability Zones that instances in the DB cluster can be created in. ",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "BackupRetentionPeriod": {
                                        "description": "<p>The number of days for which automated backups are retained. You must specify a minimum value of 1.</p> <p>Default: 1</p> <p>Constraints:</p> <ul> <li> <p>Must be a value from 1 to 35</p> </li> </ul>",
                                        "type": "integer"
                                    },
                                    "CharacterSetName": {
                                        "description": "A value that indicates that the DB cluster should be associated with the specified CharacterSet.",
                                        "type": "string"
                                    },
                                    "DBClusterIdentifier": {
                                        "description": "<p>The DB cluster identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster1</code> </p>",
                                        "type": "string"
                                    },
                                    "DBClusterParameterGroupName": {
                                        "description": "<p> The name of the DB cluster parameter group to associate with this DB cluster. If this argument is omitted, the default is used. </p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DBClusterParameterGroup.</p> </li> </ul>",
                                        "type": "string"
                                    },
                                    "DBSubnetGroupName": {
                                        "description": "<p>A DB subnet group to associate with this DB cluster.</p> <p>Constraints: Must match the name of an existing DBSubnetGroup. Must not be default.</p> <p>Example: <code>mySubnetgroup</code> </p>",
                                        "type": "string"
                                    },
                                    "DatabaseName": {
                                        "description": "The name for your database of up to 64 alpha-numeric characters. If you do not provide a name, Amazon Neptune will not create a database in the DB cluster you are creating.",
                                        "type": "string"
                                    },
                                    "EnableIAMDatabaseAuthentication": {
                                        "description": "<p>True to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts, and otherwise false.</p> <p>Default: <code>false</code> </p>",
                                        "type": "boolean"
                                    },
                                    "Engine": {
                                        "description": "<p>The name of the database engine to be used for this DB cluster.</p> <p>Valid Values: <code>neptune</code> </p>",
                                        "type": "string"
                                    },
                                    "EngineVersion": {
                                        "description": "<p>The version number of the database engine to use.</p> <p>Example: <code>1.0.1</code> </p>",
                                        "type": "string"
                                    },
                                    "KmsKeyId": {
                                        "description": "<p>The AWS KMS key identifier for an encrypted DB cluster.</p> <p>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are creating a DB cluster with the same AWS account that owns the KMS encryption key used to encrypt the new DB cluster, then you can use the KMS key alias instead of the ARN for the KMS encryption key.</p> <p>If an encryption key is not specified in <code>KmsKeyId</code>:</p> <ul> <li> <p>If <code>ReplicationSourceIdentifier</code> identifies an encrypted source, then Amazon Neptune will use the encryption key used to encrypt the source. Otherwise, Amazon Neptune will use your default encryption key. </p> </li> <li> <p>If the <code>StorageEncrypted</code> parameter is true and <code>ReplicationSourceIdentifier</code> is not specified, then Amazon Neptune will use your default encryption key.</p> </li> </ul> <p>AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.</p> <p>If you create a Read Replica of an encrypted DB cluster in another AWS Region, you must set <code>KmsKeyId</code> to a KMS key ID that is valid in the destination AWS Region. This key is used to encrypt the Read Replica in that AWS Region.</p>",
                                        "type": "string"
                                    },
                                    "MasterUserPassword": {
                                        "description": "<p>The password for the master database user. This password can contain any printable ASCII character except \"/\", \"\"\", or \"@\".</p> <p>Constraints: Must contain from 8 to 41 characters.</p>",
                                        "type": "string"
                                    },
                                    "MasterUsername": {
                                        "description": "<p>The name of the master user for the DB cluster.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 16 letters or numbers.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot be a reserved word for the chosen database engine.</p> </li> </ul>",
                                        "type": "string"
                                    },
                                    "OptionGroupName": {
                                        "description": "<p>A value that indicates that the DB cluster should be associated with the specified option group.</p> <p>Permanent options can't be removed from an option group. The option group can't be removed from a DB cluster once it is associated with a DB cluster.</p>",
                                        "type": "string"
                                    },
                                    "Port": {
                                        "description": "<p>The port number on which the instances in the DB cluster accept connections.</p> <p> Default: <code>8182</code> </p>",
                                        "type": "integer"
                                    },
                                    "PreSignedUrl": {
                                        "description": "<p>A URL that contains a Signature Version 4 signed request for the <code>CreateDBCluster</code> action to be called in the source AWS Region where the DB cluster is replicated from. You only need to specify <code>PreSignedUrl</code> when you are performing cross-region replication from an encrypted DB cluster.</p> <p>The pre-signed URL must be a valid request for the <code>CreateDBCluster</code> API action that can be executed in the source AWS Region that contains the encrypted DB cluster to be copied.</p> <p>The pre-signed URL request must contain the following parameter values:</p> <ul> <li> <p> <code>KmsKeyId</code> - The AWS KMS key identifier for the key to use to encrypt the copy of the DB cluster in the destination AWS Region. This should refer to the same KMS key for both the <code>CreateDBCluster</code> action that is called in the destination AWS Region, and the action contained in the pre-signed URL.</p> </li> <li> <p> <code>DestinationRegion</code> - The name of the AWS Region that Read Replica will be created in.</p> </li> <li> <p> <code>ReplicationSourceIdentifier</code> - The DB cluster identifier for the encrypted DB cluster to be copied. This identifier must be in the Amazon Resource Name (ARN) format for the source AWS Region. For example, if you are copying an encrypted DB cluster from the us-west-2 AWS Region, then your <code>ReplicationSourceIdentifier</code> would look like Example: <code>arn:aws:rds:us-west-2:123456789012:cluster:neptune-cluster1</code>.</p> </li> </ul> <p>To learn how to generate a Signature Version 4 signed request, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html\"> Authenticating Requests: Using Query Parameters (AWS Signature Version 4)</a> and <a href=\"http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\"> Signature Version 4 Signing Process</a>.</p>",
                                        "type": "string"
                                    },
                                    "PreferredBackupWindow": {
                                        "description": "<p>The daily time range during which automated backups are created if automated backups are enabled using the <code>BackupRetentionPeriod</code> parameter. </p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region. To see the time blocks available, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html\"> Adjusting the Preferred Maintenance Window</a> in the <i>Amazon Neptune User Guide.</i> </p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred maintenance window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul>",
                                        "type": "string"
                                    },
                                    "PreferredMaintenanceWindow": {
                                        "description": "<p>The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).</p> <p>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region, occurring on a random day of the week. To see the time blocks available, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html\"> Adjusting the Preferred Maintenance Window</a> in the <i>Amazon Neptune User Guide.</i> </p> <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</p> <p>Constraints: Minimum 30-minute window.</p>",
                                        "type": "string"
                                    },
                                    "ReplicationSourceIdentifier": {
                                        "description": "The Amazon Resource Name (ARN) of the source DB instance or DB cluster if this DB cluster is created as a Read Replica.",
                                        "type": "string"
                                    },
                                    "StorageEncrypted": {
                                        "description": "Specifies whether the DB cluster is encrypted.",
                                        "type": "boolean"
                                    },
                                    "Tags": {
                                        "description": "A list of tags. For more information, see <a href=\"http://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html\">Tagging Amazon Neptune Resources</a>. ",
                                        "items": {
                                            "description": "Metadata assigned to an Amazon Neptune resource consisting of a key-value pair.",
                                            "properties": {
                                                "Key": {
                                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "VpcSecurityGroupIds": {
                                        "description": "A list of EC2 VPC security groups to associate with this DB cluster.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "DBClusterIdentifier",
                                    "Engine"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CreateDBClusterParameterGroup": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Creates a new DB cluster parameter group.</p> <p>Parameters in a DB cluster parameter group apply to all of the instances in a DB cluster.</p> <p> A DB cluster parameter group is initially created with the default parameters for the database engine used by instances in the DB cluster. To provide custom values for any of the parameters, you must modify the group after creating it using <a>ModifyDBClusterParameterGroup</a>. Once you've created a DB cluster parameter group, you need to associate it with your DB cluster using <a>ModifyDBCluster</a>. When you associate a new DB cluster parameter group with a running DB cluster, you need to reboot the DB instances in the DB cluster without failover for the new DB cluster parameter group and associated settings to take effect. </p> <important> <p>After you create a DB cluster parameter group, you should wait at least 5 minutes before creating your first DB cluster that uses that DB cluster parameter group as the default parameter group. This allows Amazon Neptune to fully complete the create action before the DB cluster parameter group is used as the default for a new DB cluster. This is especially important for parameters that are critical when creating the default database for a DB cluster, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href=\"https://console.aws.amazon.com/rds/\">Amazon Neptune console</a> or the <a>DescribeDBClusterParameters</a> command to verify that your DB cluster parameter group has been created or modified.</p> </important>",
                "operationId": "CreateDBClusterParameterGroup",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DBClusterParameterGroup": {
                                            "description": "<p>Contains the details of an Amazon Neptune DB cluster parameter group. </p> <p>This data type is used as a response element in the <a>DescribeDBClusterParameterGroups</a> action. </p>",
                                            "properties": {
                                                "DBClusterParameterGroupArn": {
                                                    "description": "The Amazon Resource Name (ARN) for the DB cluster parameter group.",
                                                    "type": "string"
                                                },
                                                "DBClusterParameterGroupName": {
                                                    "description": "Provides the name of the DB cluster parameter group.",
                                                    "type": "string"
                                                },
                                                "DBParameterGroupFamily": {
                                                    "description": "Provides the name of the DB parameter group family that this DB cluster parameter group is compatible with.",
                                                    "type": "string"
                                                },
                                                "Description": {
                                                    "description": "Provides the customer-specified description for this DB cluster parameter group.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DBParameterGroupQuotaExceededFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Request would result in user exceeding the allowed number of DB parameter groups.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "DBParameterGroupAlreadyExistsFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "A DB parameter group with the same name exists.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "DBClusterParameterGroupName": {
                                        "description": "<p>The name of the DB cluster parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must match the name of an existing DBClusterParameterGroup.</p> </li> </ul> <note> <p>This value is stored as a lowercase string.</p> </note>",
                                        "type": "string"
                                    },
                                    "DBParameterGroupFamily": {
                                        "description": "The DB cluster parameter group family name. A DB cluster parameter group can be associated with one and only one DB cluster parameter group family, and can be applied only to a DB cluster running a database engine and engine version compatible with that DB cluster parameter group family.",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "The description for the DB cluster parameter group.",
                                        "type": "string"
                                    },
                                    "Tags": {
                                        "description": "A list of tags. For more information, see <a href=\"http://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html\">Tagging Amazon Neptune Resources</a>. ",
                                        "items": {
                                            "description": "Metadata assigned to an Amazon Neptune resource consisting of a key-value pair.",
                                            "properties": {
                                                "Key": {
                                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "DBClusterParameterGroupName",
                                    "DBParameterGroupFamily",
                                    "Description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CreateDBClusterSnapshot": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a snapshot of a DB cluster. ",
                "operationId": "CreateDBClusterSnapshot",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DBClusterSnapshot": {
                                            "description": "<p>Contains the details for an Amazon Neptune DB cluster snapshot </p> <p>This data type is used as a response element in the <a>DescribeDBClusterSnapshots</a> action. </p>",
                                            "properties": {
                                                "AllocatedStorage": {
                                                    "description": "Specifies the allocated storage size in gibibytes (GiB).",
                                                    "type": "integer"
                                                },
                                                "AvailabilityZones": {
                                                    "description": "Provides the list of EC2 Availability Zones that instances in the DB cluster snapshot can be restored in.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "ClusterCreateTime": {
                                                    "description": "Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "DBClusterIdentifier": {
                                                    "description": "Specifies the DB cluster identifier of the DB cluster that this DB cluster snapshot was created from.",
                                                    "type": "string"
                                                },
                                                "DBClusterSnapshotArn": {
                                                    "description": "The Amazon Resource Name (ARN) for the DB cluster snapshot.",
                                                    "type": "string"
                                                },
                                                "DBClusterSnapshotIdentifier": {
                                                    "description": "Specifies the identifier for the DB cluster snapshot.",
                                                    "type": "string"
                                                },
                                                "Engine": {
                                                    "description": "Specifies the name of the database engine.",
                                                    "type": "string"
                                                },
                                                "EngineVersion": {
                                                    "description": "Provides the version of the database engine for this DB cluster snapshot.",
                                                    "type": "string"
                                                },
                                                "IAMDatabaseAuthenticationEnabled": {
                                                    "description": "True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.",
                                                    "type": "boolean"
                                                },
                                                "KmsKeyId": {
                                                    "description": "If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB cluster snapshot.",
                                                    "type": "string"
                                                },
                                                "LicenseModel": {
                                                    "description": "Provides the license model information for this DB cluster snapshot.",
                                                    "type": "string"
                                                },
                                                "MasterUsername": {
                                                    "description": "Provides the master username for the DB cluster snapshot.",
                                                    "type": "string"
                                                },
                                                "PercentProgress": {
                                                    "description": "Specifies the percentage of the estimated data that has been transferred.",
                                                    "type": "integer"
                                                },
                                                "Port": {
                                                    "description": "Specifies the port that the DB cluster was listening on at the time of the snapshot.",
                                                    "type": "integer"
                                                },
                                                "SnapshotCreateTime": {
                                                    "description": "Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "SnapshotType": {
                                                    "description": "Provides the type of the DB cluster snapshot.",
                                                    "type": "string"
                                                },
                                                "SourceDBClusterSnapshotArn": {
                                                    "description": "If the DB cluster snapshot was copied from a source DB cluster snapshot, the Amazon Resource Name (ARN) for the source DB cluster snapshot, otherwise, a null value.",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "Specifies the status of this DB cluster snapshot.",
                                                    "type": "string"
                                                },
                                                "StorageEncrypted": {
                                                    "description": "Specifies whether the DB cluster snapshot is encrypted.",
                                                    "type": "boolean"
                                                },
                                                "VpcId": {
                                                    "description": "Provides the VPC ID associated with the DB cluster snapshot.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DBClusterSnapshotAlreadyExistsFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "User already has a DB cluster snapshot with the given identifier.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidDBClusterStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The DB cluster is not in a valid state.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "482": {
                        "description": "DBClusterNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBClusterIdentifier</i> does not refer to an existing DB cluster. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "483": {
                        "description": "SnapshotQuotaExceededFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Request would result in user exceeding the allowed number of DB snapshots.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "484": {
                        "description": "InvalidDBClusterSnapshotStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The supplied value is not a valid DB cluster snapshot state.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "DBClusterIdentifier": {
                                        "description": "<p>The identifier of the DB cluster to create a snapshot for. This parameter is not case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBCluster.</p> </li> </ul> <p>Example: <code>my-cluster1</code> </p>",
                                        "type": "string"
                                    },
                                    "DBClusterSnapshotIdentifier": {
                                        "description": "<p>The identifier of the DB cluster snapshot. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster1-snapshot1</code> </p>",
                                        "type": "string"
                                    },
                                    "Tags": {
                                        "description": "The tags to be assigned to the DB cluster snapshot.",
                                        "items": {
                                            "description": "Metadata assigned to an Amazon Neptune resource consisting of a key-value pair.",
                                            "properties": {
                                                "Key": {
                                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "DBClusterSnapshotIdentifier",
                                    "DBClusterIdentifier"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CreateDBInstance": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a new DB instance.",
                "operationId": "CreateDBInstance",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DBInstance": {
                                            "description": "<p>Contains the details of an Amazon Neptune DB instance. </p> <p>This data type is used as a response element in the <a>DescribeDBInstances</a> action. </p>",
                                            "properties": {
                                                "AllocatedStorage": {
                                                    "description": "Specifies the allocated storage size specified in gibibytes.",
                                                    "type": "integer"
                                                },
                                                "AutoMinorVersionUpgrade": {
                                                    "description": "Indicates that minor version patches are applied automatically.",
                                                    "type": "boolean"
                                                },
                                                "AvailabilityZone": {
                                                    "description": "Specifies the name of the Availability Zone the DB instance is located in.",
                                                    "type": "string"
                                                },
                                                "BackupRetentionPeriod": {
                                                    "description": "Specifies the number of days for which automatic DB snapshots are retained.",
                                                    "type": "integer"
                                                },
                                                "CACertificateIdentifier": {
                                                    "description": "The identifier of the CA certificate for this DB instance.",
                                                    "type": "string"
                                                },
                                                "CharacterSetName": {
                                                    "description": "If present, specifies the name of the character set that this instance is associated with.",
                                                    "type": "string"
                                                },
                                                "CopyTagsToSnapshot": {
                                                    "description": "Specifies whether tags are copied from the DB instance to snapshots of the DB instance.",
                                                    "type": "boolean"
                                                },
                                                "DBClusterIdentifier": {
                                                    "description": "If the DB instance is a member of a DB cluster, contains the name of the DB cluster that the DB instance is a member of.",
                                                    "type": "string"
                                                },
                                                "DBInstanceArn": {
                                                    "description": "The Amazon Resource Name (ARN) for the DB instance.",
                                                    "type": "string"
                                                },
                                                "DBInstanceClass": {
                                                    "description": "Contains the name of the compute and memory capacity class of the DB instance.",
                                                    "type": "string"
                                                },
                                                "DBInstanceIdentifier": {
                                                    "description": "Contains a user-supplied database identifier. This identifier is the unique key that identifies a DB instance.",
                                                    "type": "string"
                                                },
                                                "DBInstanceStatus": {
                                                    "description": "Specifies the current state of this database.",
                                                    "type": "string"
                                                },
                                                "DBName": {
                                                    "description": "The database name.",
                                                    "type": "string"
                                                },
                                                "DBParameterGroups": {
                                                    "description": "Provides the list of DB parameter groups applied to this DB instance.",
                                                    "items": {
                                                        "description": "<p>The status of the DB parameter group.</p> <p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>CreateDBInstance</a> </p> </li> <li> <p> <a>DeleteDBInstance</a> </p> </li> <li> <p> <a>ModifyDBInstance</a> </p> </li> <li> <p> <a>RebootDBInstance</a> </p> </li> </ul>",
                                                        "properties": {
                                                            "DBParameterGroupName": {
                                                                "description": "The name of the DP parameter group.",
                                                                "type": "string"
                                                            },
                                                            "ParameterApplyStatus": {
                                                                "description": "The status of parameter updates.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "DBSecurityGroups": {
                                                    "description": " Provides List of DB security group elements containing only <code>DBSecurityGroup.Name</code> and <code>DBSecurityGroup.Status</code> subelements. ",
                                                    "items": {
                                                        "description": "<p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>ModifyDBInstance</a> </p> </li> <li> <p> <a>RebootDBInstance</a> </p> </li> </ul>",
                                                        "properties": {
                                                            "DBSecurityGroupName": {
                                                                "description": "The name of the DB security group.",
                                                                "type": "string"
                                                            },
                                                            "Status": {
                                                                "description": "The status of the DB security group.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "DBSubnetGroup": {
                                                    "description": "Specifies information on the subnet group associated with the DB instance, including the name, description, and subnets in the subnet group.",
                                                    "properties": {
                                                        "DBSubnetGroupArn": {
                                                            "description": "The Amazon Resource Name (ARN) for the DB subnet group.",
                                                            "type": "string"
                                                        },
                                                        "DBSubnetGroupDescription": {
                                                            "description": "Provides the description of the DB subnet group.",
                                                            "type": "string"
                                                        },
                                                        "DBSubnetGroupName": {
                                                            "description": "The name of the DB subnet group.",
                                                            "type": "string"
                                                        },
                                                        "SubnetGroupStatus": {
                                                            "description": "Provides the status of the DB subnet group.",
                                                            "type": "string"
                                                        },
                                                        "Subnets": {
                                                            "description": " Contains a list of <a>Subnet</a> elements. ",
                                                            "items": {
                                                                "description": " This data type is used as a response element in the <a>DescribeDBSubnetGroups</a> action. ",
                                                                "properties": {
                                                                    "SubnetAvailabilityZone": {
                                                                        "description": "<p>Contains Availability Zone information.</p> <p> This data type is used as an element in the following data type:</p> <ul> <li> <p> <a>OrderableDBInstanceOption</a> </p> </li> </ul>",
                                                                        "properties": {
                                                                            "Name": {
                                                                                "description": "The name of the availability zone.",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "SubnetIdentifier": {
                                                                        "description": "Specifies the identifier of the subnet.",
                                                                        "type": "string"
                                                                    },
                                                                    "SubnetStatus": {
                                                                        "description": "Specifies the status of the subnet.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "VpcId": {
                                                            "description": "Provides the VpcId of the DB subnet group.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "DbInstancePort": {
                                                    "description": "Specifies the port that the DB instance listens on. If the DB instance is part of a DB cluster, this can be a different port than the DB cluster port.",
                                                    "type": "integer"
                                                },
                                                "DbiResourceId": {
                                                    "description": "The AWS Region-unique, immutable identifier for the DB instance. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.",
                                                    "type": "string"
                                                },
                                                "DomainMemberships": {
                                                    "description": "Not supported",
                                                    "items": {
                                                        "description": "An Active Directory Domain membership record associated with the DB instance.",
                                                        "properties": {
                                                            "Domain": {
                                                                "description": "The identifier of the Active Directory Domain.",
                                                                "type": "string"
                                                            },
                                                            "FQDN": {
                                                                "description": "The fully qualified domain name of the Active Directory Domain.",
                                                                "type": "string"
                                                            },
                                                            "IAMRoleName": {
                                                                "description": "The name of the IAM role to be used when making API calls to the Directory Service.",
                                                                "type": "string"
                                                            },
                                                            "Status": {
                                                                "description": "The status of the DB instance's Active Directory Domain membership, such as joined, pending-join, failed etc).",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "EnabledCloudwatchLogsExports": {
                                                    "description": "A list of log types that this DB instance is configured to export to CloudWatch Logs.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "Endpoint": {
                                                    "description": "Specifies the connection endpoint.",
                                                    "properties": {
                                                        "Address": {
                                                            "description": "Specifies the DNS address of the DB instance.",
                                                            "type": "string"
                                                        },
                                                        "HostedZoneId": {
                                                            "description": "Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.",
                                                            "type": "string"
                                                        },
                                                        "Port": {
                                                            "description": "Specifies the port that the database engine is listening on.",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Engine": {
                                                    "description": "Provides the name of the database engine to be used for this DB instance.",
                                                    "type": "string"
                                                },
                                                "EngineVersion": {
                                                    "description": "Indicates the database engine version.",
                                                    "type": "string"
                                                },
                                                "EnhancedMonitoringResourceArn": {
                                                    "description": "The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the Enhanced Monitoring metrics data for the DB instance.",
                                                    "type": "string"
                                                },
                                                "IAMDatabaseAuthenticationEnabled": {
                                                    "description": "True if AWS Identity and Access Management (IAM) authentication is enabled, and otherwise false.",
                                                    "type": "boolean"
                                                },
                                                "InstanceCreateTime": {
                                                    "description": "Provides the date and time the DB instance was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Iops": {
                                                    "description": "Specifies the Provisioned IOPS (I/O operations per second) value.",
                                                    "type": "integer"
                                                },
                                                "KmsKeyId": {
                                                    "description": " If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB instance. ",
                                                    "type": "string"
                                                },
                                                "LatestRestorableTime": {
                                                    "description": "Specifies the latest time to which a database can be restored with point-in-time restore.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "LicenseModel": {
                                                    "description": "License model information for this DB instance.",
                                                    "type": "string"
                                                },
                                                "MasterUsername": {
                                                    "description": "Contains the master username for the DB instance.",
                                                    "type": "string"
                                                },
                                                "MonitoringInterval": {
                                                    "description": "The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance.",
                                                    "type": "integer"
                                                },
                                                "MonitoringRoleArn": {
                                                    "description": "The ARN for the IAM role that permits Neptune to send Enhanced Monitoring metrics to Amazon CloudWatch Logs.",
                                                    "type": "string"
                                                },
                                                "MultiAZ": {
                                                    "description": "Specifies if the DB instance is a Multi-AZ deployment.",
                                                    "type": "boolean"
                                                },
                                                "OptionGroupMemberships": {
                                                    "description": "Provides the list of option group memberships for this DB instance.",
                                                    "items": {
                                                        "description": "Provides information on the option groups the DB instance is a member of.",
                                                        "properties": {
                                                            "OptionGroupName": {
                                                                "description": "The name of the option group that the instance belongs to.",
                                                                "type": "string"
                                                            },
                                                            "Status": {
                                                                "description": "The status of the DB instance's option group membership. Valid values are: <code>in-sync</code>, <code>pending-apply</code>, <code>pending-removal</code>, <code>pending-maintenance-apply</code>, <code>pending-maintenance-removal</code>, <code>applying</code>, <code>removing</code>, and <code>failed</code>. ",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "PendingModifiedValues": {
                                                    "description": "Specifies that changes to the DB instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements.",
                                                    "properties": {
                                                        "AllocatedStorage": {
                                                            "description": " Contains the new <code>AllocatedStorage</code> size for the DB instance that will be applied or is currently being applied. ",
                                                            "type": "integer"
                                                        },
                                                        "BackupRetentionPeriod": {
                                                            "description": "Specifies the pending number of days for which automated backups are retained.",
                                                            "type": "integer"
                                                        },
                                                        "CACertificateIdentifier": {
                                                            "description": "Specifies the identifier of the CA certificate for the DB instance.",
                                                            "type": "string"
                                                        },
                                                        "DBInstanceClass": {
                                                            "description": " Contains the new <code>DBInstanceClass</code> for the DB instance that will be applied or is currently being applied. ",
                                                            "type": "string"
                                                        },
                                                        "DBInstanceIdentifier": {
                                                            "description": " Contains the new <code>DBInstanceIdentifier</code> for the DB instance that will be applied or is currently being applied. ",
                                                            "type": "string"
                                                        },
                                                        "DBSubnetGroupName": {
                                                            "description": "The new DB subnet group for the DB instance. ",
                                                            "type": "string"
                                                        },
                                                        "EngineVersion": {
                                                            "description": "Indicates the database engine version.",
                                                            "type": "string"
                                                        },
                                                        "Iops": {
                                                            "description": "Specifies the new Provisioned IOPS value for the DB instance that will be applied or is currently being applied.",
                                                            "type": "integer"
                                                        },
                                                        "LicenseModel": {
                                                            "description": "<p>The license model for the DB instance.</p> <p>Valid values: <code>license-included</code> | <code>bring-your-own-license</code> | <code>general-public-license</code> </p>",
                                                            "type": "string"
                                                        },
                                                        "MasterUserPassword": {
                                                            "description": "Contains the pending or currently-in-progress change of the master credentials for the DB instance.",
                                                            "type": "string"
                                                        },
                                                        "MultiAZ": {
                                                            "description": "Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.",
                                                            "type": "boolean"
                                                        },
                                                        "PendingCloudwatchLogsExports": {
                                                            "description": "A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated.",
                                                            "properties": {
                                                                "LogTypesToDisable": {
                                                                    "description": "Log types that are in the process of being enabled. After they are enabled, these log types are exported to CloudWatch Logs.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "LogTypesToEnable": {
                                                                    "description": "Log types that are in the process of being deactivated. After they are deactivated, these log types aren't exported to CloudWatch Logs.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "Port": {
                                                            "description": "Specifies the pending port for the DB instance.",
                                                            "type": "integer"
                                                        },
                                                        "StorageType": {
                                                            "description": "Specifies the storage type to be associated with the DB instance.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "PerformanceInsightsEnabled": {
                                                    "description": "True if Performance Insights is enabled for the DB instance, and otherwise false.",
                                                    "type": "boolean"
                                                },
                                                "PerformanceInsightsKMSKeyId": {
                                                    "description": "The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.",
                                                    "type": "string"
                                                },
                                                "PreferredBackupWindow": {
                                                    "description": " Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. ",
                                                    "type": "string"
                                                },
                                                "PreferredMaintenanceWindow": {
                                                    "description": "Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
                                                    "type": "string"
                                                },
                                                "PromotionTier": {
                                                    "description": "A value that specifies the order in which a Read Replica is promoted to the primary instance after a failure of the existing primary instance. ",
                                                    "type": "integer"
                                                },
                                                "PubliclyAccessible": {
                                                    "description": "This parameter is not supported.",
                                                    "type": "boolean"
                                                },
                                                "ReadReplicaDBClusterIdentifiers": {
                                                    "description": "Contains one or more identifiers of DB clusters that are Read Replicas of this DB instance.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "ReadReplicaDBInstanceIdentifiers": {
                                                    "description": "Contains one or more identifiers of the Read Replicas associated with this DB instance.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "ReadReplicaSourceDBInstanceIdentifier": {
                                                    "description": "Contains the identifier of the source DB instance if this DB instance is a Read Replica.",
                                                    "type": "string"
                                                },
                                                "SecondaryAvailabilityZone": {
                                                    "description": "If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support.",
                                                    "type": "string"
                                                },
                                                "StatusInfos": {
                                                    "description": "The status of a Read Replica. If the instance is not a Read Replica, this is blank.",
                                                    "items": {
                                                        "description": "Provides a list of status information for a DB instance.",
                                                        "properties": {
                                                            "Message": {
                                                                "description": "Details of the error if there is an error for the instance. If the instance is not in an error state, this value is blank.",
                                                                "type": "string"
                                                            },
                                                            "Normal": {
                                                                "description": "Boolean value that is true if the instance is operating normally, or false if the instance is in an error state.",
                                                                "type": "boolean"
                                                            },
                                                            "Status": {
                                                                "description": "Status of the DB instance. For a StatusType of read replica, the values can be replicating, error, stopped, or terminated.",
                                                                "type": "string"
                                                            },
                                                            "StatusType": {
                                                                "description": "This value is currently \"read replication.\"",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "StorageEncrypted": {
                                                    "description": "Specifies whether the DB instance is encrypted.",
                                                    "type": "boolean"
                                                },
                                                "StorageType": {
                                                    "description": "Specifies the storage type associated with DB instance.",
                                                    "type": "string"
                                                },
                                                "TdeCredentialArn": {
                                                    "description": "The ARN from the key store with which the instance is associated for TDE encryption.",
                                                    "type": "string"
                                                },
                                                "Timezone": {
                                                    "description": "Not supported. ",
                                                    "type": "string"
                                                },
                                                "VpcSecurityGroups": {
                                                    "description": "Provides a list of VPC security group elements that the DB instance belongs to.",
                                                    "items": {
                                                        "description": "This data type is used as a response element for queries on VPC security group membership.",
                                                        "properties": {
                                                            "Status": {
                                                                "description": "The status of the VPC security group.",
                                                                "type": "string"
                                                            },
                                                            "VpcSecurityGroupId": {
                                                                "description": "The name of the VPC security group.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DBInstanceAlreadyExistsFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "User already has a DB instance with the given identifier.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "InsufficientDBInstanceCapacityFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Specified DB instance class is not available in the specified Availability Zone.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "482": {
                        "description": "DBParameterGroupNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBParameterGroupName</i> does not refer to an existing DB parameter group. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "483": {
                        "description": "DBSecurityGroupNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBSecurityGroupName</i> does not refer to an existing DB security group. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "484": {
                        "description": "InstanceQuotaExceededFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Request would result in user exceeding the allowed number of DB instances.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "485": {
                        "description": "StorageQuotaExceededFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Request would result in user exceeding the allowed amount of storage available across all DB instances.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "486": {
                        "description": "DBSubnetGroupNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "487": {
                        "description": "DBSubnetGroupDoesNotCoverEnoughAZs",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Subnets in the DB subnet group should cover at least two Availability Zones unless there is only one Availability Zone.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "488": {
                        "description": "InvalidDBClusterStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The DB cluster is not in a valid state.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "489": {
                        "description": "InvalidSubnet",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The requested subnet is invalid, or multiple subnets were requested that are not all in a common VPC.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "490": {
                        "description": "InvalidVPCNetworkStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "DB subnet group does not cover all Availability Zones after it is created because users' change.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "491": {
                        "description": "ProvisionedIopsNotAvailableInAZFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Provisioned IOPS not available in the specified Availability Zone.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "492": {
                        "description": "OptionGroupNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "493": {
                        "description": "DBClusterNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBClusterIdentifier</i> does not refer to an existing DB cluster. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "494": {
                        "description": "StorageTypeNotSupportedFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>StorageType</i> specified cannot be associated with the DB Instance. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "495": {
                        "description": "AuthorizationNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "<p>Specified CIDRIP or EC2 security group is not authorized for the specified DB security group.</p> <p>Neptune may not also be authorized via IAM to perform necessary actions on your behalf.</p>",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "496": {
                        "description": "KMSKeyNotAccessibleFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Error accessing KMS key.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "497": {
                        "description": "DomainNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>Domain</i> does not refer to an existing Active Directory Domain. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "AllocatedStorage": {
                                        "description": "<p>The amount of storage (in gibibytes) to allocate for the DB instance.</p> <p>Type: Integer</p> <p>Not applicable. Neptune cluster volumes automatically grow as the amount of data in your database increases, though you are only charged for the space that you use in a Neptune cluster volume.</p>",
                                        "type": "integer"
                                    },
                                    "AutoMinorVersionUpgrade": {
                                        "description": "<p>Indicates that minor engine upgrades are applied automatically to the DB instance during the maintenance window.</p> <p>Default: <code>true</code> </p>",
                                        "type": "boolean"
                                    },
                                    "AvailabilityZone": {
                                        "description": "<p> The EC2 Availability Zone that the DB instance is created in. </p> <p>Default: A random, system-chosen Availability Zone in the endpoint's AWS Region.</p> <p> Example: <code>us-east-1d</code> </p> <p> Constraint: The AvailabilityZone parameter can't be specified if the MultiAZ parameter is set to <code>true</code>. The specified Availability Zone must be in the same AWS Region as the current endpoint. </p>",
                                        "type": "string"
                                    },
                                    "BackupRetentionPeriod": {
                                        "description": "<p>The number of days for which automated backups are retained.</p> <p>Not applicable. The retention period for automated backups is managed by the DB cluster. For more information, see <a>CreateDBCluster</a>.</p> <p>Default: 1</p> <p>Constraints:</p> <ul> <li> <p>Must be a value from 0 to 35</p> </li> <li> <p>Cannot be set to 0 if the DB instance is a source to Read Replicas</p> </li> </ul>",
                                        "type": "integer"
                                    },
                                    "CharacterSetName": {
                                        "description": "<p>Indicates that the DB instance should be associated with the specified CharacterSet.</p> <p>Not applicable. The character set is managed by the DB cluster. For more information, see <a>CreateDBCluster</a>.</p>",
                                        "type": "string"
                                    },
                                    "CopyTagsToSnapshot": {
                                        "description": "True to copy all tags from the DB instance to snapshots of the DB instance, and otherwise false. The default is false.",
                                        "type": "boolean"
                                    },
                                    "DBClusterIdentifier": {
                                        "description": "<p>The identifier of the DB cluster that the instance will belong to.</p> <p>For information on creating a DB cluster, see <a>CreateDBCluster</a>.</p> <p>Type: String</p>",
                                        "type": "string"
                                    },
                                    "DBInstanceClass": {
                                        "description": "The compute and memory capacity of the DB instance, for example, <code>db.m4.large</code>. Not all DB instance classes are available in all AWS Regions. ",
                                        "type": "string"
                                    },
                                    "DBInstanceIdentifier": {
                                        "description": "<p>The DB instance identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>mydbinstance</code> </p>",
                                        "type": "string"
                                    },
                                    "DBName": {
                                        "description": "<p>The database name. </p> <p>Type: String</p>",
                                        "type": "string"
                                    },
                                    "DBParameterGroupName": {
                                        "description": "<p>The name of the DB parameter group to associate with this DB instance. If this argument is omitted, the default DBParameterGroup for the specified engine is used.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>",
                                        "type": "string"
                                    },
                                    "DBSecurityGroups": {
                                        "description": "<p>A list of DB security groups to associate with this DB instance.</p> <p>Default: The default DB security group for the database engine.</p>",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "DBSubnetGroupName": {
                                        "description": "<p>A DB subnet group to associate with this DB instance.</p> <p>If there is no DB subnet group, then it is a non-VPC DB instance.</p>",
                                        "type": "string"
                                    },
                                    "Domain": {
                                        "description": "Specify the Active Directory Domain to create the instance in.",
                                        "type": "string"
                                    },
                                    "DomainIAMRoleName": {
                                        "description": "Specify the name of the IAM role to be used when making API calls to the Directory Service.",
                                        "type": "string"
                                    },
                                    "EnableCloudwatchLogsExports": {
                                        "description": "The list of log types that need to be enabled for exporting to CloudWatch Logs.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "EnableIAMDatabaseAuthentication": {
                                        "description": "<p>True to enable AWS Identity and Access Management (IAM) authentication for Neptune.</p> <p>Default: <code>false</code> </p>",
                                        "type": "boolean"
                                    },
                                    "EnablePerformanceInsights": {
                                        "description": "True to enable Performance Insights for the DB instance, and otherwise false. ",
                                        "type": "boolean"
                                    },
                                    "Engine": {
                                        "description": "<p>The name of the database engine to be used for this instance. </p> <p>Valid Values: <code>neptune</code> </p>",
                                        "type": "string"
                                    },
                                    "EngineVersion": {
                                        "description": "The version number of the database engine to use.",
                                        "type": "string"
                                    },
                                    "Iops": {
                                        "description": "The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for the DB instance. ",
                                        "type": "integer"
                                    },
                                    "KmsKeyId": {
                                        "description": "<p>The AWS KMS key identifier for an encrypted DB instance.</p> <p>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are creating a DB instance with the same AWS account that owns the KMS encryption key used to encrypt the new DB instance, then you can use the KMS key alias instead of the ARN for the KM encryption key.</p> <p>Not applicable. The KMS key identifier is managed by the DB cluster. For more information, see <a>CreateDBCluster</a>.</p> <p>If the <code>StorageEncrypted</code> parameter is true, and you do not specify a value for the <code>KmsKeyId</code> parameter, then Amazon Neptune will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.</p>",
                                        "type": "string"
                                    },
                                    "LicenseModel": {
                                        "description": "<p>License model information for this DB instance.</p> <p> Valid values: <code>license-included</code> | <code>bring-your-own-license</code> | <code>general-public-license</code> </p>",
                                        "type": "string"
                                    },
                                    "MasterUserPassword": {
                                        "description": "<p>The password for the master user. The password can include any printable ASCII character except \"/\", \"\"\", or \"@\".</p> <p> Not used. </p>",
                                        "type": "string"
                                    },
                                    "MasterUsername": {
                                        "description": "The name for the master user. Not used.",
                                        "type": "string"
                                    },
                                    "MonitoringInterval": {
                                        "description": "<p>The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0.</p> <p>If <code>MonitoringRoleArn</code> is specified, then you must also set <code>MonitoringInterval</code> to a value other than 0.</p> <p>Valid Values: <code>0, 1, 5, 10, 15, 30, 60</code> </p>",
                                        "type": "integer"
                                    },
                                    "MonitoringRoleArn": {
                                        "description": "<p>The ARN for the IAM role that permits Neptune to send enhanced monitoring metrics to Amazon CloudWatch Logs. For example, <code>arn:aws:iam:123456789012:role/emaccess</code>.</p> <p>If <code>MonitoringInterval</code> is set to a value other than 0, then you must supply a <code>MonitoringRoleArn</code> value.</p>",
                                        "type": "string"
                                    },
                                    "MultiAZ": {
                                        "description": "Specifies if the DB instance is a Multi-AZ deployment. You can't set the AvailabilityZone parameter if the MultiAZ parameter is set to true.",
                                        "type": "boolean"
                                    },
                                    "OptionGroupName": {
                                        "description": "<p>Indicates that the DB instance should be associated with the specified option group.</p> <p>Permanent options, such as the TDE option for Oracle Advanced Security TDE, can't be removed from an option group, and that option group can't be removed from a DB instance once it is associated with a DB instance</p>",
                                        "type": "string"
                                    },
                                    "PerformanceInsightsKMSKeyId": {
                                        "description": "The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.",
                                        "type": "string"
                                    },
                                    "Port": {
                                        "description": "<p>The port number on which the database accepts connections.</p> <p>Not applicable. The port is managed by the DB cluster. For more information, see <a>CreateDBCluster</a>.</p> <p> Default: <code>8182</code> </p> <p>Type: Integer</p>",
                                        "type": "integer"
                                    },
                                    "PreferredBackupWindow": {
                                        "description": "<p> The daily time range during which automated backups are created. </p> <p>Not applicable. The daily time range for creating automated backups is managed by the DB cluster. For more information, see <a>CreateDBCluster</a>.</p>",
                                        "type": "string"
                                    },
                                    "PreferredMaintenanceWindow": {
                                        "description": "<p>The time range each week during which system maintenance can occur, in Universal Coordinated Time (UTC). </p> <p> Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region, occurring on a random day of the week. </p> <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</p> <p>Constraints: Minimum 30-minute window.</p>",
                                        "type": "string"
                                    },
                                    "PromotionTier": {
                                        "description": "<p>A value that specifies the order in which an Read Replica is promoted to the primary instance after a failure of the existing primary instance. </p> <p>Default: 1</p> <p>Valid Values: 0 - 15</p>",
                                        "type": "integer"
                                    },
                                    "PubliclyAccessible": {
                                        "description": "This parameter is not supported.",
                                        "type": "boolean"
                                    },
                                    "StorageEncrypted": {
                                        "description": "<p>Specifies whether the DB instance is encrypted.</p> <p>Not applicable. The encryption for DB instances is managed by the DB cluster. For more information, see <a>CreateDBCluster</a>.</p> <p>Default: false</p>",
                                        "type": "boolean"
                                    },
                                    "StorageType": {
                                        "description": "<p>Specifies the storage type to be associated with the DB instance.</p> <p>Not applicable. Storage is managed by the DB Cluster.</p>",
                                        "type": "string"
                                    },
                                    "Tags": {
                                        "description": "A list of tags. For more information, see <a href=\"http://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html\">Tagging Amazon Neptune Resources</a>. ",
                                        "items": {
                                            "description": "Metadata assigned to an Amazon Neptune resource consisting of a key-value pair.",
                                            "properties": {
                                                "Key": {
                                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "TdeCredentialArn": {
                                        "description": "The ARN from the key store with which to associate the instance for TDE encryption.",
                                        "type": "string"
                                    },
                                    "TdeCredentialPassword": {
                                        "description": "The password for the given ARN from the key store in order to access the device.",
                                        "type": "string"
                                    },
                                    "Timezone": {
                                        "description": "The time zone of the DB instance. ",
                                        "type": "string"
                                    },
                                    "VpcSecurityGroupIds": {
                                        "description": "<p>A list of EC2 VPC security groups to associate with this DB instance.</p> <p>Not applicable. The associated list of EC2 VPC security groups is managed by the DB cluster. For more information, see <a>CreateDBCluster</a>.</p> <p>Default: The default EC2 VPC security group for the DB subnet group's VPC.</p>",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "DBInstanceIdentifier",
                                    "DBInstanceClass",
                                    "Engine"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CreateDBParameterGroup": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Creates a new DB parameter group.</p> <p> A DB parameter group is initially created with the default parameters for the database engine used by the DB instance. To provide custom values for any of the parameters, you must modify the group after creating it using <i>ModifyDBParameterGroup</i>. Once you've created a DB parameter group, you need to associate it with your DB instance using <i>ModifyDBInstance</i>. When you associate a new DB parameter group with a running DB instance, you need to reboot the DB instance without failover for the new DB parameter group and associated settings to take effect. </p> <important> <p>After you create a DB parameter group, you should wait at least 5 minutes before creating your first DB instance that uses that DB parameter group as the default parameter group. This allows Amazon Neptune to fully complete the create action before the parameter group is used as the default for a new DB instance. This is especially important for parameters that are critical when creating the default database for a DB instance, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the Amazon Neptune console or the <i>DescribeDBParameters</i> command to verify that your DB parameter group has been created or modified.</p> </important>",
                "operationId": "CreateDBParameterGroup",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DBParameterGroup": {
                                            "description": "<p>Contains the details of an Amazon Neptune DB parameter group. </p> <p>This data type is used as a response element in the <a>DescribeDBParameterGroups</a> action. </p>",
                                            "properties": {
                                                "DBParameterGroupArn": {
                                                    "description": "The Amazon Resource Name (ARN) for the DB parameter group.",
                                                    "type": "string"
                                                },
                                                "DBParameterGroupFamily": {
                                                    "description": "Provides the name of the DB parameter group family that this DB parameter group is compatible with.",
                                                    "type": "string"
                                                },
                                                "DBParameterGroupName": {
                                                    "description": "Provides the name of the DB parameter group.",
                                                    "type": "string"
                                                },
                                                "Description": {
                                                    "description": "Provides the customer-specified description for this DB parameter group.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DBParameterGroupQuotaExceededFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Request would result in user exceeding the allowed number of DB parameter groups.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "DBParameterGroupAlreadyExistsFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "A DB parameter group with the same name exists.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "DBParameterGroupFamily": {
                                        "description": "The DB parameter group family name. A DB parameter group can be associated with one and only one DB parameter group family, and can be applied only to a DB instance running a database engine and engine version compatible with that DB parameter group family.",
                                        "type": "string"
                                    },
                                    "DBParameterGroupName": {
                                        "description": "<p>The name of the DB parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <note> <p>This value is stored as a lowercase string.</p> </note>",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "The description for the DB parameter group.",
                                        "type": "string"
                                    },
                                    "Tags": {
                                        "description": "A list of tags. For more information, see <a href=\"http://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html\">Tagging Amazon Neptune Resources</a>. ",
                                        "items": {
                                            "description": "Metadata assigned to an Amazon Neptune resource consisting of a key-value pair.",
                                            "properties": {
                                                "Key": {
                                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "DBParameterGroupName",
                                    "DBParameterGroupFamily",
                                    "Description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CreateDBSubnetGroup": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a new DB subnet group. DB subnet groups must contain at least one subnet in at least two AZs in the AWS Region.",
                "operationId": "CreateDBSubnetGroup",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DBSubnetGroup": {
                                            "description": "<p>Contains the details of an Amazon Neptune DB subnet group. </p> <p>This data type is used as a response element in the <a>DescribeDBSubnetGroups</a> action. </p>",
                                            "properties": {
                                                "DBSubnetGroupArn": {
                                                    "description": "The Amazon Resource Name (ARN) for the DB subnet group.",
                                                    "type": "string"
                                                },
                                                "DBSubnetGroupDescription": {
                                                    "description": "Provides the description of the DB subnet group.",
                                                    "type": "string"
                                                },
                                                "DBSubnetGroupName": {
                                                    "description": "The name of the DB subnet group.",
                                                    "type": "string"
                                                },
                                                "SubnetGroupStatus": {
                                                    "description": "Provides the status of the DB subnet group.",
                                                    "type": "string"
                                                },
                                                "Subnets": {
                                                    "description": " Contains a list of <a>Subnet</a> elements. ",
                                                    "items": {
                                                        "description": " This data type is used as a response element in the <a>DescribeDBSubnetGroups</a> action. ",
                                                        "properties": {
                                                            "SubnetAvailabilityZone": {
                                                                "description": "<p>Contains Availability Zone information.</p> <p> This data type is used as an element in the following data type:</p> <ul> <li> <p> <a>OrderableDBInstanceOption</a> </p> </li> </ul>",
                                                                "properties": {
                                                                    "Name": {
                                                                        "description": "The name of the availability zone.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "SubnetIdentifier": {
                                                                "description": "Specifies the identifier of the subnet.",
                                                                "type": "string"
                                                            },
                                                            "SubnetStatus": {
                                                                "description": "Specifies the status of the subnet.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "VpcId": {
                                                    "description": "Provides the VpcId of the DB subnet group.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DBSubnetGroupAlreadyExistsFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBSubnetGroupName</i> is already used by an existing DB subnet group. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "DBSubnetGroupQuotaExceededFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Request would result in user exceeding the allowed number of DB subnet groups.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "482": {
                        "description": "DBSubnetQuotaExceededFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Request would result in user exceeding the allowed number of subnets in a DB subnet groups.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "483": {
                        "description": "DBSubnetGroupDoesNotCoverEnoughAZs",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Subnets in the DB subnet group should cover at least two Availability Zones unless there is only one Availability Zone.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "484": {
                        "description": "InvalidSubnet",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The requested subnet is invalid, or multiple subnets were requested that are not all in a common VPC.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "DBSubnetGroupDescription": {
                                        "description": "The description for the DB subnet group.",
                                        "type": "string"
                                    },
                                    "DBSubnetGroupName": {
                                        "description": "<p>The name for the DB subnet group. This value is stored as a lowercase string.</p> <p>Constraints: Must contain no more than 255 letters, numbers, periods, underscores, spaces, or hyphens. Must not be default.</p> <p>Example: <code>mySubnetgroup</code> </p>",
                                        "type": "string"
                                    },
                                    "SubnetIds": {
                                        "description": "The EC2 Subnet IDs for the DB subnet group.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "Tags": {
                                        "description": "A list of tags. For more information, see <a href=\"http://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html\">Tagging Amazon Neptune Resources</a>. ",
                                        "items": {
                                            "description": "Metadata assigned to an Amazon Neptune resource consisting of a key-value pair.",
                                            "properties": {
                                                "Key": {
                                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "DBSubnetGroupName",
                                    "DBSubnetGroupDescription",
                                    "SubnetIds"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CreateEventSubscription": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Creates an event notification subscription. This action requires a topic ARN (Amazon Resource Name) created by either the Neptune console, the SNS console, or the SNS API. To obtain an ARN with SNS, you must create a topic in Amazon SNS and subscribe to the topic. The ARN is displayed in the SNS console.</p> <p>You can specify the type of source (SourceType) you want to be notified of, provide a list of Neptune sources (SourceIds) that triggers the events, and provide a list of event categories (EventCategories) for events you want to be notified of. For example, you can specify SourceType = db-instance, SourceIds = mydbinstance1, mydbinstance2 and EventCategories = Availability, Backup.</p> <p>If you specify both the SourceType and SourceIds, such as SourceType = db-instance and SourceIdentifier = myDBInstance1, you are notified of all the db-instance events for the specified source. If you specify a SourceType but do not specify a SourceIdentifier, you receive notice of the events for that source type for all your Neptune sources. If you do not specify either the SourceType nor the SourceIdentifier, you are notified of events generated from all Neptune sources belonging to your customer account.</p>",
                "operationId": "CreateEventSubscription",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "EventSubscription": {
                                            "description": "Contains the results of a successful invocation of the <a>DescribeEventSubscriptions</a> action.",
                                            "properties": {
                                                "CustSubscriptionId": {
                                                    "description": "The event notification subscription Id.",
                                                    "type": "string"
                                                },
                                                "CustomerAwsId": {
                                                    "description": "The AWS customer account associated with the event notification subscription.",
                                                    "type": "string"
                                                },
                                                "Enabled": {
                                                    "description": "A Boolean value indicating if the subscription is enabled. True indicates the subscription is enabled.",
                                                    "type": "boolean"
                                                },
                                                "EventCategoriesList": {
                                                    "description": "A list of event categories for the event notification subscription.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "EventSubscriptionArn": {
                                                    "description": "The Amazon Resource Name (ARN) for the event subscription.",
                                                    "type": "string"
                                                },
                                                "SnsTopicArn": {
                                                    "description": "The topic ARN of the event notification subscription.",
                                                    "type": "string"
                                                },
                                                "SourceIdsList": {
                                                    "description": "A list of source IDs for the event notification subscription.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "SourceType": {
                                                    "description": "The source type for the event notification subscription.",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "<p>The status of the event notification subscription.</p> <p>Constraints:</p> <p>Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist</p> <p>The status \"no-permission\" indicates that Neptune no longer has permission to post to the SNS topic. The status \"topic-not-exist\" indicates that the topic was deleted after the subscription was created.</p>",
                                                    "type": "string"
                                                },
                                                "SubscriptionCreationTime": {
                                                    "description": "The time the event notification subscription was created.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "EventSubscriptionQuotaExceededFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "SubscriptionAlreadyExistFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "482": {
                        "description": "SNSInvalidTopicFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "483": {
                        "description": "SNSNoAuthorizationFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "484": {
                        "description": "SNSTopicArnNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "485": {
                        "description": "SubscriptionCategoryNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "486": {
                        "description": "SourceNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "Enabled": {
                                        "description": " A Boolean value; set to <b>true</b> to activate the subscription, set to <b>false</b> to create the subscription but not active it. ",
                                        "type": "boolean"
                                    },
                                    "EventCategories": {
                                        "description": " A list of event categories for a SourceType that you want to subscribe to. You can see a list of the categories for a given SourceType by using the <b>DescribeEventCategories</b> action. ",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "SnsTopicArn": {
                                        "description": "The Amazon Resource Name (ARN) of the SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it.",
                                        "type": "string"
                                    },
                                    "SourceIds": {
                                        "description": "<p>The list of identifiers of the event sources for which events are returned. If not specified, then all sources are included in the response. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it can't end with a hyphen or contain two consecutive hyphens.</p> <p>Constraints:</p> <ul> <li> <p>If SourceIds are supplied, SourceType must also be provided.</p> </li> <li> <p>If the source type is a DB instance, then a <code>DBInstanceIdentifier</code> must be supplied.</p> </li> <li> <p>If the source type is a DB security group, a <code>DBSecurityGroupName</code> must be supplied.</p> </li> <li> <p>If the source type is a DB parameter group, a <code>DBParameterGroupName</code> must be supplied.</p> </li> <li> <p>If the source type is a DB snapshot, a <code>DBSnapshotIdentifier</code> must be supplied.</p> </li> </ul>",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "SourceType": {
                                        "description": "<p>The type of source that is generating the events. For example, if you want to be notified of events generated by a DB instance, you would set this parameter to db-instance. if this value is not specified, all events are returned.</p> <p>Valid values: <code>db-instance</code> | <code>db-cluster</code> | <code>db-parameter-group</code> | <code>db-security-group</code> | <code>db-snapshot</code> | <code>db-cluster-snapshot</code> </p>",
                                        "type": "string"
                                    },
                                    "SubscriptionName": {
                                        "description": "<p>The name of the subscription.</p> <p>Constraints: The name must be less than 255 characters.</p>",
                                        "type": "string"
                                    },
                                    "Tags": {
                                        "description": "A list of tags. For more information, see <a href=\"http://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html\">Tagging Amazon Neptune Resources</a>. ",
                                        "items": {
                                            "description": "Metadata assigned to an Amazon Neptune resource consisting of a key-value pair.",
                                            "properties": {
                                                "Key": {
                                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "SubscriptionName",
                                    "SnsTopicArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteDBCluster": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>The DeleteDBCluster action deletes a previously provisioned DB cluster. When you delete a DB cluster, all automated backups for that DB cluster are deleted and can't be recovered. Manual DB cluster snapshots of the specified DB cluster are not deleted.</p> <p/>",
                "operationId": "DeleteDBCluster",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DBCluster": {
                                            "description": "<p>Contains the details of an Amazon Neptune DB cluster. </p> <p>This data type is used as a response element in the <a>DescribeDBClusters</a> action. </p>",
                                            "properties": {
                                                "AllocatedStorage": {
                                                    "description": " <code>AllocatedStorage</code> always returns 1, because Neptune DB cluster storage size is not fixed, but instead automatically adjusts as needed.",
                                                    "type": "integer"
                                                },
                                                "AssociatedRoles": {
                                                    "description": "Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.",
                                                    "items": {
                                                        "description": "Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.",
                                                        "properties": {
                                                            "RoleArn": {
                                                                "description": "The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.",
                                                                "type": "string"
                                                            },
                                                            "Status": {
                                                                "description": "<p>Describes the state of association between the IAM role and the DB cluster. The Status property returns one of the following values:</p> <ul> <li> <p> <code>ACTIVE</code> - the IAM role ARN is associated with the DB cluster and can be used to access other AWS services on your behalf.</p> </li> <li> <p> <code>PENDING</code> - the IAM role ARN is being associated with the DB cluster.</p> </li> <li> <p> <code>INVALID</code> - the IAM role ARN is associated with the DB cluster, but the DB cluster is unable to assume the IAM role in order to access other AWS services on your behalf.</p> </li> </ul>",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "AvailabilityZones": {
                                                    "description": "Provides the list of EC2 Availability Zones that instances in the DB cluster can be created in.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "BackupRetentionPeriod": {
                                                    "description": "Specifies the number of days for which automatic DB snapshots are retained.",
                                                    "type": "integer"
                                                },
                                                "CharacterSetName": {
                                                    "description": "If present, specifies the name of the character set that this cluster is associated with.",
                                                    "type": "string"
                                                },
                                                "CloneGroupId": {
                                                    "description": "Identifies the clone group to which the DB cluster is associated.",
                                                    "type": "string"
                                                },
                                                "ClusterCreateTime": {
                                                    "description": "Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "DBClusterArn": {
                                                    "description": "The Amazon Resource Name (ARN) for the DB cluster.",
                                                    "type": "string"
                                                },
                                                "DBClusterIdentifier": {
                                                    "description": "Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.",
                                                    "type": "string"
                                                },
                                                "DBClusterMembers": {
                                                    "description": "Provides the list of instances that make up the DB cluster.",
                                                    "items": {
                                                        "description": "Contains information about an instance that is part of a DB cluster.",
                                                        "properties": {
                                                            "DBClusterParameterGroupStatus": {
                                                                "description": "Specifies the status of the DB cluster parameter group for this member of the DB cluster.",
                                                                "type": "string"
                                                            },
                                                            "DBInstanceIdentifier": {
                                                                "description": "Specifies the instance identifier for this member of the DB cluster.",
                                                                "type": "string"
                                                            },
                                                            "IsClusterWriter": {
                                                                "description": "Value that is <code>true</code> if the cluster member is the primary instance for the DB cluster and <code>false</code> otherwise.",
                                                                "type": "boolean"
                                                            },
                                                            "PromotionTier": {
                                                                "description": "A value that specifies the order in which a Read Replica is promoted to the primary instance after a failure of the existing primary instance. ",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "DBClusterOptionGroupMemberships": {
                                                    "description": "Provides the list of option group memberships for this DB cluster.",
                                                    "items": {
                                                        "description": "Contains status information for a DB cluster option group.",
                                                        "properties": {
                                                            "DBClusterOptionGroupName": {
                                                                "description": "Specifies the name of the DB cluster option group.",
                                                                "type": "string"
                                                            },
                                                            "Status": {
                                                                "description": "Specifies the status of the DB cluster option group.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "DBClusterParameterGroup": {
                                                    "description": "Specifies the name of the DB cluster parameter group for the DB cluster.",
                                                    "type": "string"
                                                },
                                                "DBSubnetGroup": {
                                                    "description": "Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group.",
                                                    "type": "string"
                                                },
                                                "DatabaseName": {
                                                    "description": "Contains the name of the initial database of this DB cluster that was provided at create time, if one was specified when the DB cluster was created. This same name is returned for the life of the DB cluster.",
                                                    "type": "string"
                                                },
                                                "DbClusterResourceId": {
                                                    "description": "The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.",
                                                    "type": "string"
                                                },
                                                "EarliestRestorableTime": {
                                                    "description": "Specifies the earliest time to which a database can be restored with point-in-time restore.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Endpoint": {
                                                    "description": "Specifies the connection endpoint for the primary instance of the DB cluster.",
                                                    "type": "string"
                                                },
                                                "Engine": {
                                                    "description": "Provides the name of the database engine to be used for this DB cluster.",
                                                    "type": "string"
                                                },
                                                "EngineVersion": {
                                                    "description": "Indicates the database engine version.",
                                                    "type": "string"
                                                },
                                                "HostedZoneId": {
                                                    "description": "Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.",
                                                    "type": "string"
                                                },
                                                "IAMDatabaseAuthenticationEnabled": {
                                                    "description": "True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.",
                                                    "type": "boolean"
                                                },
                                                "KmsKeyId": {
                                                    "description": "If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB cluster.",
                                                    "type": "string"
                                                },
                                                "LatestRestorableTime": {
                                                    "description": "Specifies the latest time to which a database can be restored with point-in-time restore.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "MasterUsername": {
                                                    "description": "Contains the master username for the DB cluster.",
                                                    "type": "string"
                                                },
                                                "MultiAZ": {
                                                    "description": "Specifies whether the DB cluster has instances in multiple Availability Zones.",
                                                    "type": "boolean"
                                                },
                                                "PercentProgress": {
                                                    "description": "Specifies the progress of the operation as a percentage.",
                                                    "type": "string"
                                                },
                                                "Port": {
                                                    "description": "Specifies the port that the database engine is listening on.",
                                                    "type": "integer"
                                                },
                                                "PreferredBackupWindow": {
                                                    "description": "Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. ",
                                                    "type": "string"
                                                },
                                                "PreferredMaintenanceWindow": {
                                                    "description": "Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
                                                    "type": "string"
                                                },
                                                "ReadReplicaIdentifiers": {
                                                    "description": "Contains one or more identifiers of the Read Replicas associated with this DB cluster.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "ReaderEndpoint": {
                                                    "description": "<p>The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances connections across the Read Replicas that are available in a DB cluster. As clients request new connections to the reader endpoint, Neptune distributes the connection requests among the Read Replicas in the DB cluster. This functionality can help balance your read workload across multiple Read Replicas in your DB cluster. </p> <p>If a failover occurs, and the Read Replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Read Replicas in the cluster, you can then reconnect to the reader endpoint.</p>",
                                                    "type": "string"
                                                },
                                                "ReplicationSourceIdentifier": {
                                                    "description": "Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "Specifies the current state of this DB cluster.",
                                                    "type": "string"
                                                },
                                                "StorageEncrypted": {
                                                    "description": "Specifies whether the DB cluster is encrypted.",
                                                    "type": "boolean"
                                                },
                                                "VpcSecurityGroups": {
                                                    "description": "Provides a list of VPC security groups that the DB cluster belongs to.",
                                                    "items": {
                                                        "description": "This data type is used as a response element for queries on VPC security group membership.",
                                                        "properties": {
                                                            "Status": {
                                                                "description": "The status of the VPC security group.",
                                                                "type": "string"
                                                            },
                                                            "VpcSecurityGroupId": {
                                                                "description": "The name of the VPC security group.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DBClusterNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBClusterIdentifier</i> does not refer to an existing DB cluster. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidDBClusterStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The DB cluster is not in a valid state.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "482": {
                        "description": "DBClusterSnapshotAlreadyExistsFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "User already has a DB cluster snapshot with the given identifier.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "483": {
                        "description": "SnapshotQuotaExceededFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Request would result in user exceeding the allowed number of DB snapshots.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "484": {
                        "description": "InvalidDBClusterSnapshotStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The supplied value is not a valid DB cluster snapshot state.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "DBClusterIdentifier": {
                                        "description": "<p>The DB cluster identifier for the DB cluster to be deleted. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match an existing DBClusterIdentifier.</p> </li> </ul>",
                                        "type": "string"
                                    },
                                    "FinalDBSnapshotIdentifier": {
                                        "description": "<p> The DB cluster snapshot identifier of the new DB cluster snapshot created when <code>SkipFinalSnapshot</code> is set to <code>false</code>. </p> <note> <p> Specifying this parameter and also setting the <code>SkipFinalShapshot</code> parameter to true results in an error. </p> </note> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>",
                                        "type": "string"
                                    },
                                    "SkipFinalSnapshot": {
                                        "description": "<p> Determines whether a final DB cluster snapshot is created before the DB cluster is deleted. If <code>true</code> is specified, no DB cluster snapshot is created. If <code>false</code> is specified, a DB cluster snapshot is created before the DB cluster is deleted. </p> <note> <p>You must specify a <code>FinalDBSnapshotIdentifier</code> parameter if <code>SkipFinalSnapshot</code> is <code>false</code>.</p> </note> <p>Default: <code>false</code> </p>",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "DBClusterIdentifier"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteDBClusterParameterGroup": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Deletes a specified DB cluster parameter group. The DB cluster parameter group to be deleted can't be associated with any DB clusters.",
                "operationId": "DeleteDBClusterParameterGroup",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "InvalidDBParameterGroupStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The DB parameter group is in use or is in an invalid state. If you are attempting to delete the parameter group, you cannot delete it when the parameter group is in this state.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "DBParameterGroupNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBParameterGroupName</i> does not refer to an existing DB parameter group. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "DBClusterParameterGroupName": {
                                        "description": "<p>The name of the DB cluster parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must be the name of an existing DB cluster parameter group.</p> </li> <li> <p>You can't delete a default DB cluster parameter group.</p> </li> <li> <p>Cannot be associated with any DB clusters.</p> </li> </ul>",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "DBClusterParameterGroupName"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteDBClusterSnapshot": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Deletes a DB cluster snapshot. If the snapshot is being copied, the copy operation is terminated.</p> <note> <p>The DB cluster snapshot must be in the <code>available</code> state to be deleted.</p> </note>",
                "operationId": "DeleteDBClusterSnapshot",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DBClusterSnapshot": {
                                            "description": "<p>Contains the details for an Amazon Neptune DB cluster snapshot </p> <p>This data type is used as a response element in the <a>DescribeDBClusterSnapshots</a> action. </p>",
                                            "properties": {
                                                "AllocatedStorage": {
                                                    "description": "Specifies the allocated storage size in gibibytes (GiB).",
                                                    "type": "integer"
                                                },
                                                "AvailabilityZones": {
                                                    "description": "Provides the list of EC2 Availability Zones that instances in the DB cluster snapshot can be restored in.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "ClusterCreateTime": {
                                                    "description": "Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "DBClusterIdentifier": {
                                                    "description": "Specifies the DB cluster identifier of the DB cluster that this DB cluster snapshot was created from.",
                                                    "type": "string"
                                                },
                                                "DBClusterSnapshotArn": {
                                                    "description": "The Amazon Resource Name (ARN) for the DB cluster snapshot.",
                                                    "type": "string"
                                                },
                                                "DBClusterSnapshotIdentifier": {
                                                    "description": "Specifies the identifier for the DB cluster snapshot.",
                                                    "type": "string"
                                                },
                                                "Engine": {
                                                    "description": "Specifies the name of the database engine.",
                                                    "type": "string"
                                                },
                                                "EngineVersion": {
                                                    "description": "Provides the version of the database engine for this DB cluster snapshot.",
                                                    "type": "string"
                                                },
                                                "IAMDatabaseAuthenticationEnabled": {
                                                    "description": "True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.",
                                                    "type": "boolean"
                                                },
                                                "KmsKeyId": {
                                                    "description": "If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB cluster snapshot.",
                                                    "type": "string"
                                                },
                                                "LicenseModel": {
                                                    "description": "Provides the license model information for this DB cluster snapshot.",
                                                    "type": "string"
                                                },
                                                "MasterUsername": {
                                                    "description": "Provides the master username for the DB cluster snapshot.",
                                                    "type": "string"
                                                },
                                                "PercentProgress": {
                                                    "description": "Specifies the percentage of the estimated data that has been transferred.",
                                                    "type": "integer"
                                                },
                                                "Port": {
                                                    "description": "Specifies the port that the DB cluster was listening on at the time of the snapshot.",
                                                    "type": "integer"
                                                },
                                                "SnapshotCreateTime": {
                                                    "description": "Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "SnapshotType": {
                                                    "description": "Provides the type of the DB cluster snapshot.",
                                                    "type": "string"
                                                },
                                                "SourceDBClusterSnapshotArn": {
                                                    "description": "If the DB cluster snapshot was copied from a source DB cluster snapshot, the Amazon Resource Name (ARN) for the source DB cluster snapshot, otherwise, a null value.",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "Specifies the status of this DB cluster snapshot.",
                                                    "type": "string"
                                                },
                                                "StorageEncrypted": {
                                                    "description": "Specifies whether the DB cluster snapshot is encrypted.",
                                                    "type": "boolean"
                                                },
                                                "VpcId": {
                                                    "description": "Provides the VPC ID associated with the DB cluster snapshot.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidDBClusterSnapshotStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The supplied value is not a valid DB cluster snapshot state.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "DBClusterSnapshotNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "DBClusterSnapshotIdentifier": {
                                        "description": "<p>The identifier of the DB cluster snapshot to delete.</p> <p>Constraints: Must be the name of an existing DB cluster snapshot in the <code>available</code> state.</p>",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "DBClusterSnapshotIdentifier"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteDBInstance": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>The DeleteDBInstance action deletes a previously provisioned DB instance. When you delete a DB instance, all automated backups for that instance are deleted and can't be recovered. Manual DB snapshots of the DB instance to be deleted by <code>DeleteDBInstance</code> are not deleted.</p> <p> If you request a final DB snapshot the status of the Amazon Neptune DB instance is <code>deleting</code> until the DB snapshot is created. The API action <code>DescribeDBInstance</code> is used to monitor the status of this operation. The action can't be canceled or reverted once submitted. </p> <p>Note that when a DB instance is in a failure state and has a status of <code>failed</code>, <code>incompatible-restore</code>, or <code>incompatible-network</code>, you can only delete it when the <code>SkipFinalSnapshot</code> parameter is set to <code>true</code>.</p> <p>If the specified DB instance is part of a DB cluster, you can't delete the DB instance if both of the following conditions are true:</p> <ul> <li> <p>The DB cluster is a Read Replica of another DB cluster.</p> </li> <li> <p>The DB instance is the only instance in the DB cluster.</p> </li> </ul> <p>To delete a DB instance in this case, first call the <a>PromoteReadReplicaDBCluster</a> API action to promote the DB cluster so it's no longer a Read Replica. After the promotion completes, then call the <code>DeleteDBInstance</code> API action to delete the final instance in the DB cluster.</p>",
                "operationId": "DeleteDBInstance",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DBInstance": {
                                            "description": "<p>Contains the details of an Amazon Neptune DB instance. </p> <p>This data type is used as a response element in the <a>DescribeDBInstances</a> action. </p>",
                                            "properties": {
                                                "AllocatedStorage": {
                                                    "description": "Specifies the allocated storage size specified in gibibytes.",
                                                    "type": "integer"
                                                },
                                                "AutoMinorVersionUpgrade": {
                                                    "description": "Indicates that minor version patches are applied automatically.",
                                                    "type": "boolean"
                                                },
                                                "AvailabilityZone": {
                                                    "description": "Specifies the name of the Availability Zone the DB instance is located in.",
                                                    "type": "string"
                                                },
                                                "BackupRetentionPeriod": {
                                                    "description": "Specifies the number of days for which automatic DB snapshots are retained.",
                                                    "type": "integer"
                                                },
                                                "CACertificateIdentifier": {
                                                    "description": "The identifier of the CA certificate for this DB instance.",
                                                    "type": "string"
                                                },
                                                "CharacterSetName": {
                                                    "description": "If present, specifies the name of the character set that this instance is associated with.",
                                                    "type": "string"
                                                },
                                                "CopyTagsToSnapshot": {
                                                    "description": "Specifies whether tags are copied from the DB instance to snapshots of the DB instance.",
                                                    "type": "boolean"
                                                },
                                                "DBClusterIdentifier": {
                                                    "description": "If the DB instance is a member of a DB cluster, contains the name of the DB cluster that the DB instance is a member of.",
                                                    "type": "string"
                                                },
                                                "DBInstanceArn": {
                                                    "description": "The Amazon Resource Name (ARN) for the DB instance.",
                                                    "type": "string"
                                                },
                                                "DBInstanceClass": {
                                                    "description": "Contains the name of the compute and memory capacity class of the DB instance.",
                                                    "type": "string"
                                                },
                                                "DBInstanceIdentifier": {
                                                    "description": "Contains a user-supplied database identifier. This identifier is the unique key that identifies a DB instance.",
                                                    "type": "string"
                                                },
                                                "DBInstanceStatus": {
                                                    "description": "Specifies the current state of this database.",
                                                    "type": "string"
                                                },
                                                "DBName": {
                                                    "description": "The database name.",
                                                    "type": "string"
                                                },
                                                "DBParameterGroups": {
                                                    "description": "Provides the list of DB parameter groups applied to this DB instance.",
                                                    "items": {
                                                        "description": "<p>The status of the DB parameter group.</p> <p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>CreateDBInstance</a> </p> </li> <li> <p> <a>DeleteDBInstance</a> </p> </li> <li> <p> <a>ModifyDBInstance</a> </p> </li> <li> <p> <a>RebootDBInstance</a> </p> </li> </ul>",
                                                        "properties": {
                                                            "DBParameterGroupName": {
                                                                "description": "The name of the DP parameter group.",
                                                                "type": "string"
                                                            },
                                                            "ParameterApplyStatus": {
                                                                "description": "The status of parameter updates.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "DBSecurityGroups": {
                                                    "description": " Provides List of DB security group elements containing only <code>DBSecurityGroup.Name</code> and <code>DBSecurityGroup.Status</code> subelements. ",
                                                    "items": {
                                                        "description": "<p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>ModifyDBInstance</a> </p> </li> <li> <p> <a>RebootDBInstance</a> </p> </li> </ul>",
                                                        "properties": {
                                                            "DBSecurityGroupName": {
                                                                "description": "The name of the DB security group.",
                                                                "type": "string"
                                                            },
                                                            "Status": {
                                                                "description": "The status of the DB security group.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "DBSubnetGroup": {
                                                    "description": "Specifies information on the subnet group associated with the DB instance, including the name, description, and subnets in the subnet group.",
                                                    "properties": {
                                                        "DBSubnetGroupArn": {
                                                            "description": "The Amazon Resource Name (ARN) for the DB subnet group.",
                                                            "type": "string"
                                                        },
                                                        "DBSubnetGroupDescription": {
                                                            "description": "Provides the description of the DB subnet group.",
                                                            "type": "string"
                                                        },
                                                        "DBSubnetGroupName": {
                                                            "description": "The name of the DB subnet group.",
                                                            "type": "string"
                                                        },
                                                        "SubnetGroupStatus": {
                                                            "description": "Provides the status of the DB subnet group.",
                                                            "type": "string"
                                                        },
                                                        "Subnets": {
                                                            "description": " Contains a list of <a>Subnet</a> elements. ",
                                                            "items": {
                                                                "description": " This data type is used as a response element in the <a>DescribeDBSubnetGroups</a> action. ",
                                                                "properties": {
                                                                    "SubnetAvailabilityZone": {
                                                                        "description": "<p>Contains Availability Zone information.</p> <p> This data type is used as an element in the following data type:</p> <ul> <li> <p> <a>OrderableDBInstanceOption</a> </p> </li> </ul>",
                                                                        "properties": {
                                                                            "Name": {
                                                                                "description": "The name of the availability zone.",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "SubnetIdentifier": {
                                                                        "description": "Specifies the identifier of the subnet.",
                                                                        "type": "string"
                                                                    },
                                                                    "SubnetStatus": {
                                                                        "description": "Specifies the status of the subnet.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "VpcId": {
                                                            "description": "Provides the VpcId of the DB subnet group.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "DbInstancePort": {
                                                    "description": "Specifies the port that the DB instance listens on. If the DB instance is part of a DB cluster, this can be a different port than the DB cluster port.",
                                                    "type": "integer"
                                                },
                                                "DbiResourceId": {
                                                    "description": "The AWS Region-unique, immutable identifier for the DB instance. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.",
                                                    "type": "string"
                                                },
                                                "DomainMemberships": {
                                                    "description": "Not supported",
                                                    "items": {
                                                        "description": "An Active Directory Domain membership record associated with the DB instance.",
                                                        "properties": {
                                                            "Domain": {
                                                                "description": "The identifier of the Active Directory Domain.",
                                                                "type": "string"
                                                            },
                                                            "FQDN": {
                                                                "description": "The fully qualified domain name of the Active Directory Domain.",
                                                                "type": "string"
                                                            },
                                                            "IAMRoleName": {
                                                                "description": "The name of the IAM role to be used when making API calls to the Directory Service.",
                                                                "type": "string"
                                                            },
                                                            "Status": {
                                                                "description": "The status of the DB instance's Active Directory Domain membership, such as joined, pending-join, failed etc).",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "EnabledCloudwatchLogsExports": {
                                                    "description": "A list of log types that this DB instance is configured to export to CloudWatch Logs.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "Endpoint": {
                                                    "description": "Specifies the connection endpoint.",
                                                    "properties": {
                                                        "Address": {
                                                            "description": "Specifies the DNS address of the DB instance.",
                                                            "type": "string"
                                                        },
                                                        "HostedZoneId": {
                                                            "description": "Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.",
                                                            "type": "string"
                                                        },
                                                        "Port": {
                                                            "description": "Specifies the port that the database engine is listening on.",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Engine": {
                                                    "description": "Provides the name of the database engine to be used for this DB instance.",
                                                    "type": "string"
                                                },
                                                "EngineVersion": {
                                                    "description": "Indicates the database engine version.",
                                                    "type": "string"
                                                },
                                                "EnhancedMonitoringResourceArn": {
                                                    "description": "The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the Enhanced Monitoring metrics data for the DB instance.",
                                                    "type": "string"
                                                },
                                                "IAMDatabaseAuthenticationEnabled": {
                                                    "description": "True if AWS Identity and Access Management (IAM) authentication is enabled, and otherwise false.",
                                                    "type": "boolean"
                                                },
                                                "InstanceCreateTime": {
                                                    "description": "Provides the date and time the DB instance was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Iops": {
                                                    "description": "Specifies the Provisioned IOPS (I/O operations per second) value.",
                                                    "type": "integer"
                                                },
                                                "KmsKeyId": {
                                                    "description": " If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB instance. ",
                                                    "type": "string"
                                                },
                                                "LatestRestorableTime": {
                                                    "description": "Specifies the latest time to which a database can be restored with point-in-time restore.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "LicenseModel": {
                                                    "description": "License model information for this DB instance.",
                                                    "type": "string"
                                                },
                                                "MasterUsername": {
                                                    "description": "Contains the master username for the DB instance.",
                                                    "type": "string"
                                                },
                                                "MonitoringInterval": {
                                                    "description": "The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance.",
                                                    "type": "integer"
                                                },
                                                "MonitoringRoleArn": {
                                                    "description": "The ARN for the IAM role that permits Neptune to send Enhanced Monitoring metrics to Amazon CloudWatch Logs.",
                                                    "type": "string"
                                                },
                                                "MultiAZ": {
                                                    "description": "Specifies if the DB instance is a Multi-AZ deployment.",
                                                    "type": "boolean"
                                                },
                                                "OptionGroupMemberships": {
                                                    "description": "Provides the list of option group memberships for this DB instance.",
                                                    "items": {
                                                        "description": "Provides information on the option groups the DB instance is a member of.",
                                                        "properties": {
                                                            "OptionGroupName": {
                                                                "description": "The name of the option group that the instance belongs to.",
                                                                "type": "string"
                                                            },
                                                            "Status": {
                                                                "description": "The status of the DB instance's option group membership. Valid values are: <code>in-sync</code>, <code>pending-apply</code>, <code>pending-removal</code>, <code>pending-maintenance-apply</code>, <code>pending-maintenance-removal</code>, <code>applying</code>, <code>removing</code>, and <code>failed</code>. ",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "PendingModifiedValues": {
                                                    "description": "Specifies that changes to the DB instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements.",
                                                    "properties": {
                                                        "AllocatedStorage": {
                                                            "description": " Contains the new <code>AllocatedStorage</code> size for the DB instance that will be applied or is currently being applied. ",
                                                            "type": "integer"
                                                        },
                                                        "BackupRetentionPeriod": {
                                                            "description": "Specifies the pending number of days for which automated backups are retained.",
                                                            "type": "integer"
                                                        },
                                                        "CACertificateIdentifier": {
                                                            "description": "Specifies the identifier of the CA certificate for the DB instance.",
                                                            "type": "string"
                                                        },
                                                        "DBInstanceClass": {
                                                            "description": " Contains the new <code>DBInstanceClass</code> for the DB instance that will be applied or is currently being applied. ",
                                                            "type": "string"
                                                        },
                                                        "DBInstanceIdentifier": {
                                                            "description": " Contains the new <code>DBInstanceIdentifier</code> for the DB instance that will be applied or is currently being applied. ",
                                                            "type": "string"
                                                        },
                                                        "DBSubnetGroupName": {
                                                            "description": "The new DB subnet group for the DB instance. ",
                                                            "type": "string"
                                                        },
                                                        "EngineVersion": {
                                                            "description": "Indicates the database engine version.",
                                                            "type": "string"
                                                        },
                                                        "Iops": {
                                                            "description": "Specifies the new Provisioned IOPS value for the DB instance that will be applied or is currently being applied.",
                                                            "type": "integer"
                                                        },
                                                        "LicenseModel": {
                                                            "description": "<p>The license model for the DB instance.</p> <p>Valid values: <code>license-included</code> | <code>bring-your-own-license</code> | <code>general-public-license</code> </p>",
                                                            "type": "string"
                                                        },
                                                        "MasterUserPassword": {
                                                            "description": "Contains the pending or currently-in-progress change of the master credentials for the DB instance.",
                                                            "type": "string"
                                                        },
                                                        "MultiAZ": {
                                                            "description": "Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.",
                                                            "type": "boolean"
                                                        },
                                                        "PendingCloudwatchLogsExports": {
                                                            "description": "A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated.",
                                                            "properties": {
                                                                "LogTypesToDisable": {
                                                                    "description": "Log types that are in the process of being enabled. After they are enabled, these log types are exported to CloudWatch Logs.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "LogTypesToEnable": {
                                                                    "description": "Log types that are in the process of being deactivated. After they are deactivated, these log types aren't exported to CloudWatch Logs.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "Port": {
                                                            "description": "Specifies the pending port for the DB instance.",
                                                            "type": "integer"
                                                        },
                                                        "StorageType": {
                                                            "description": "Specifies the storage type to be associated with the DB instance.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "PerformanceInsightsEnabled": {
                                                    "description": "True if Performance Insights is enabled for the DB instance, and otherwise false.",
                                                    "type": "boolean"
                                                },
                                                "PerformanceInsightsKMSKeyId": {
                                                    "description": "The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.",
                                                    "type": "string"
                                                },
                                                "PreferredBackupWindow": {
                                                    "description": " Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. ",
                                                    "type": "string"
                                                },
                                                "PreferredMaintenanceWindow": {
                                                    "description": "Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
                                                    "type": "string"
                                                },
                                                "PromotionTier": {
                                                    "description": "A value that specifies the order in which a Read Replica is promoted to the primary instance after a failure of the existing primary instance. ",
                                                    "type": "integer"
                                                },
                                                "PubliclyAccessible": {
                                                    "description": "This parameter is not supported.",
                                                    "type": "boolean"
                                                },
                                                "ReadReplicaDBClusterIdentifiers": {
                                                    "description": "Contains one or more identifiers of DB clusters that are Read Replicas of this DB instance.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "ReadReplicaDBInstanceIdentifiers": {
                                                    "description": "Contains one or more identifiers of the Read Replicas associated with this DB instance.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "ReadReplicaSourceDBInstanceIdentifier": {
                                                    "description": "Contains the identifier of the source DB instance if this DB instance is a Read Replica.",
                                                    "type": "string"
                                                },
                                                "SecondaryAvailabilityZone": {
                                                    "description": "If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support.",
                                                    "type": "string"
                                                },
                                                "StatusInfos": {
                                                    "description": "The status of a Read Replica. If the instance is not a Read Replica, this is blank.",
                                                    "items": {
                                                        "description": "Provides a list of status information for a DB instance.",
                                                        "properties": {
                                                            "Message": {
                                                                "description": "Details of the error if there is an error for the instance. If the instance is not in an error state, this value is blank.",
                                                                "type": "string"
                                                            },
                                                            "Normal": {
                                                                "description": "Boolean value that is true if the instance is operating normally, or false if the instance is in an error state.",
                                                                "type": "boolean"
                                                            },
                                                            "Status": {
                                                                "description": "Status of the DB instance. For a StatusType of read replica, the values can be replicating, error, stopped, or terminated.",
                                                                "type": "string"
                                                            },
                                                            "StatusType": {
                                                                "description": "This value is currently \"read replication.\"",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "StorageEncrypted": {
                                                    "description": "Specifies whether the DB instance is encrypted.",
                                                    "type": "boolean"
                                                },
                                                "StorageType": {
                                                    "description": "Specifies the storage type associated with DB instance.",
                                                    "type": "string"
                                                },
                                                "TdeCredentialArn": {
                                                    "description": "The ARN from the key store with which the instance is associated for TDE encryption.",
                                                    "type": "string"
                                                },
                                                "Timezone": {
                                                    "description": "Not supported. ",
                                                    "type": "string"
                                                },
                                                "VpcSecurityGroups": {
                                                    "description": "Provides a list of VPC security group elements that the DB instance belongs to.",
                                                    "items": {
                                                        "description": "This data type is used as a response element for queries on VPC security group membership.",
                                                        "properties": {
                                                            "Status": {
                                                                "description": "The status of the VPC security group.",
                                                                "type": "string"
                                                            },
                                                            "VpcSecurityGroupId": {
                                                                "description": "The name of the VPC security group.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DBInstanceNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBInstanceIdentifier</i> does not refer to an existing DB instance. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidDBInstanceStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " The specified DB instance is not in the <i>available</i> state. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "482": {
                        "description": "DBSnapshotAlreadyExistsFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBSnapshotIdentifier</i> is already used by an existing snapshot. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "483": {
                        "description": "SnapshotQuotaExceededFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Request would result in user exceeding the allowed number of DB snapshots.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "484": {
                        "description": "InvalidDBClusterStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The DB cluster is not in a valid state.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "DBInstanceIdentifier": {
                                        "description": "<p>The DB instance identifier for the DB instance to be deleted. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match the name of an existing DB instance.</p> </li> </ul>",
                                        "type": "string"
                                    },
                                    "FinalDBSnapshotIdentifier": {
                                        "description": "<p> The DBSnapshotIdentifier of the new DBSnapshot created when SkipFinalSnapshot is set to <code>false</code>. </p> <note> <p>Specifying this parameter and also setting the SkipFinalShapshot parameter to true results in an error.</p> </note> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters or numbers.</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> <li> <p>Cannot be specified when deleting a Read Replica.</p> </li> </ul>",
                                        "type": "string"
                                    },
                                    "SkipFinalSnapshot": {
                                        "description": "<p> Determines whether a final DB snapshot is created before the DB instance is deleted. If <code>true</code> is specified, no DBSnapshot is created. If <code>false</code> is specified, a DB snapshot is created before the DB instance is deleted. </p> <p>Note that when a DB instance is in a failure state and has a status of 'failed', 'incompatible-restore', or 'incompatible-network', it can only be deleted when the SkipFinalSnapshot parameter is set to \"true\".</p> <p>Specify <code>true</code> when deleting a Read Replica.</p> <note> <p>The FinalDBSnapshotIdentifier parameter must be specified if SkipFinalSnapshot is <code>false</code>.</p> </note> <p>Default: <code>false</code> </p>",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "DBInstanceIdentifier"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteDBParameterGroup": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Deletes a specified DBParameterGroup. The DBParameterGroup to be deleted can't be associated with any DB instances.",
                "operationId": "DeleteDBParameterGroup",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "InvalidDBParameterGroupStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The DB parameter group is in use or is in an invalid state. If you are attempting to delete the parameter group, you cannot delete it when the parameter group is in this state.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "DBParameterGroupNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBParameterGroupName</i> does not refer to an existing DB parameter group. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "DBParameterGroupName": {
                                        "description": "<p>The name of the DB parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must be the name of an existing DB parameter group</p> </li> <li> <p>You can't delete a default DB parameter group</p> </li> <li> <p>Cannot be associated with any DB instances</p> </li> </ul>",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "DBParameterGroupName"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteDBSubnetGroup": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Deletes a DB subnet group.</p> <note> <p>The specified database subnet group must not be associated with any DB instances.</p> </note>",
                "operationId": "DeleteDBSubnetGroup",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "InvalidDBSubnetGroupStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The DB subnet group cannot be deleted because it is in use.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidDBSubnetStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " The DB subnet is not in the <i>available</i> state. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "482": {
                        "description": "DBSubnetGroupNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "DBSubnetGroupName": {
                                        "description": "<p>The name of the database subnet group to delete.</p> <note> <p>You can't delete the default subnet group.</p> </note> <p>Constraints:</p> <p>Constraints: Must match the name of an existing DBSubnetGroup. Must not be default.</p> <p>Example: <code>mySubnetgroup</code> </p>",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "DBSubnetGroupName"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteEventSubscription": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Deletes an event notification subscription.",
                "operationId": "DeleteEventSubscription",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "EventSubscription": {
                                            "description": "Contains the results of a successful invocation of the <a>DescribeEventSubscriptions</a> action.",
                                            "properties": {
                                                "CustSubscriptionId": {
                                                    "description": "The event notification subscription Id.",
                                                    "type": "string"
                                                },
                                                "CustomerAwsId": {
                                                    "description": "The AWS customer account associated with the event notification subscription.",
                                                    "type": "string"
                                                },
                                                "Enabled": {
                                                    "description": "A Boolean value indicating if the subscription is enabled. True indicates the subscription is enabled.",
                                                    "type": "boolean"
                                                },
                                                "EventCategoriesList": {
                                                    "description": "A list of event categories for the event notification subscription.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "EventSubscriptionArn": {
                                                    "description": "The Amazon Resource Name (ARN) for the event subscription.",
                                                    "type": "string"
                                                },
                                                "SnsTopicArn": {
                                                    "description": "The topic ARN of the event notification subscription.",
                                                    "type": "string"
                                                },
                                                "SourceIdsList": {
                                                    "description": "A list of source IDs for the event notification subscription.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "SourceType": {
                                                    "description": "The source type for the event notification subscription.",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "<p>The status of the event notification subscription.</p> <p>Constraints:</p> <p>Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist</p> <p>The status \"no-permission\" indicates that Neptune no longer has permission to post to the SNS topic. The status \"topic-not-exist\" indicates that the topic was deleted after the subscription was created.</p>",
                                                    "type": "string"
                                                },
                                                "SubscriptionCreationTime": {
                                                    "description": "The time the event notification subscription was created.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "SubscriptionNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidEventSubscriptionStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "SubscriptionName": {
                                        "description": "The name of the event notification subscription you want to delete.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SubscriptionName"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeDBClusterParameterGroups": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": " Returns a list of <code>DBClusterParameterGroup</code> descriptions. If a <code>DBClusterParameterGroupName</code> parameter is specified, the list will contain only the description of the specified DB cluster parameter group. ",
                "operationId": "DescribeDBClusterParameterGroups",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "<p/>",
                                    "properties": {
                                        "DBClusterParameterGroups": {
                                            "description": "A list of DB cluster parameter groups.",
                                            "items": {
                                                "description": "<p>Contains the details of an Amazon Neptune DB cluster parameter group. </p> <p>This data type is used as a response element in the <a>DescribeDBClusterParameterGroups</a> action. </p>",
                                                "properties": {
                                                    "DBClusterParameterGroupArn": {
                                                        "description": "The Amazon Resource Name (ARN) for the DB cluster parameter group.",
                                                        "type": "string"
                                                    },
                                                    "DBClusterParameterGroupName": {
                                                        "description": "Provides the name of the DB cluster parameter group.",
                                                        "type": "string"
                                                    },
                                                    "DBParameterGroupFamily": {
                                                        "description": "Provides the name of the DB parameter group family that this DB cluster parameter group is compatible with.",
                                                        "type": "string"
                                                    },
                                                    "Description": {
                                                        "description": "Provides the customer-specified description for this DB cluster parameter group.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Marker": {
                                            "description": " An optional pagination token provided by a previous <code>DescribeDBClusterParameterGroups</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DBParameterGroupNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBParameterGroupName</i> does not refer to an existing DB parameter group. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "DBClusterParameterGroupName": {
                                        "description": "<p>The name of a specific DB cluster parameter group to return details for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DBClusterParameterGroup.</p> </li> </ul>",
                                        "type": "string"
                                    },
                                    "Filters": {
                                        "description": "This parameter is not currently supported.",
                                        "items": {
                                            "description": "This type is not currently supported.",
                                            "properties": {
                                                "Name": {
                                                    "description": "This parameter is not currently supported.",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "This parameter is not currently supported.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "Marker": {
                                        "description": " An optional pagination token provided by a previous <code>DescribeDBClusterParameterGroups</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                        "type": "string"
                                    },
                                    "MaxRecords": {
                                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeDBClusterParameters": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns the detailed parameter list for a particular DB cluster parameter group.",
                "operationId": "DescribeDBClusterParameters",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Provides details about a DB cluster parameter group including the parameters in the DB cluster parameter group.",
                                    "properties": {
                                        "Marker": {
                                            "description": " An optional pagination token provided by a previous DescribeDBClusterParameters request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> . ",
                                            "type": "string"
                                        },
                                        "Parameters": {
                                            "description": "Provides a list of parameters for the DB cluster parameter group.",
                                            "items": {
                                                "description": "<p> This data type is used as a request parameter in the <a>ModifyDBParameterGroup</a> and <a>ResetDBParameterGroup</a> actions. </p> <p>This data type is used as a response element in the <a>DescribeEngineDefaultParameters</a> and <a>DescribeDBParameters</a> actions.</p>",
                                                "properties": {
                                                    "AllowedValues": {
                                                        "description": "Specifies the valid range of values for the parameter.",
                                                        "type": "string"
                                                    },
                                                    "ApplyMethod": {
                                                        "description": "Indicates when to apply parameter updates.",
                                                        "enum": [
                                                            "immediate",
                                                            "pending-reboot"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "ApplyType": {
                                                        "description": "Specifies the engine specific parameters type.",
                                                        "type": "string"
                                                    },
                                                    "DataType": {
                                                        "description": "Specifies the valid data type for the parameter.",
                                                        "type": "string"
                                                    },
                                                    "Description": {
                                                        "description": "Provides a description of the parameter.",
                                                        "type": "string"
                                                    },
                                                    "IsModifiable": {
                                                        "description": " Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed. ",
                                                        "type": "boolean"
                                                    },
                                                    "MinimumEngineVersion": {
                                                        "description": "The earliest engine version to which the parameter can apply.",
                                                        "type": "string"
                                                    },
                                                    "ParameterName": {
                                                        "description": "Specifies the name of the parameter.",
                                                        "type": "string"
                                                    },
                                                    "ParameterValue": {
                                                        "description": "Specifies the value of the parameter.",
                                                        "type": "string"
                                                    },
                                                    "Source": {
                                                        "description": "Indicates the source of the parameter value.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DBParameterGroupNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBParameterGroupName</i> does not refer to an existing DB parameter group. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "DBClusterParameterGroupName": {
                                        "description": "<p>The name of a specific DB cluster parameter group to return parameter details for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DBClusterParameterGroup.</p> </li> </ul>",
                                        "type": "string"
                                    },
                                    "Filters": {
                                        "description": "This parameter is not currently supported.",
                                        "items": {
                                            "description": "This type is not currently supported.",
                                            "properties": {
                                                "Name": {
                                                    "description": "This parameter is not currently supported.",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "This parameter is not currently supported.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "Marker": {
                                        "description": " An optional pagination token provided by a previous <code>DescribeDBClusterParameters</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                        "type": "string"
                                    },
                                    "MaxRecords": {
                                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                                        "type": "integer"
                                    },
                                    "Source": {
                                        "description": " A value that indicates to return only parameters for a specific source. Parameter sources can be <code>engine</code>, <code>service</code>, or <code>customer</code>. ",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "DBClusterParameterGroupName"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeDBClusterSnapshotAttributes": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Returns a list of DB cluster snapshot attribute names and values for a manual DB cluster snapshot.</p> <p>When sharing snapshots with other AWS accounts, <code>DescribeDBClusterSnapshotAttributes</code> returns the <code>restore</code> attribute and a list of IDs for the AWS accounts that are authorized to copy or restore the manual DB cluster snapshot. If <code>all</code> is included in the list of values for the <code>restore</code> attribute, then the manual DB cluster snapshot is public and can be copied or restored by all AWS accounts.</p> <p>To add or remove access for an AWS account to copy or restore a manual DB cluster snapshot, or to make the manual DB cluster snapshot public or private, use the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>",
                "operationId": "DescribeDBClusterSnapshotAttributes",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DBClusterSnapshotAttributesResult": {
                                            "description": "<p>Contains the results of a successful call to the <a>DescribeDBClusterSnapshotAttributes</a> API action.</p> <p>Manual DB cluster snapshot attributes are used to authorize other AWS accounts to copy or restore a manual DB cluster snapshot. For more information, see the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>",
                                            "properties": {
                                                "DBClusterSnapshotAttributes": {
                                                    "description": "The list of attributes and values for the manual DB cluster snapshot.",
                                                    "items": {
                                                        "description": "<p>Contains the name and values of a manual DB cluster snapshot attribute.</p> <p>Manual DB cluster snapshot attributes are used to authorize other AWS accounts to restore a manual DB cluster snapshot. For more information, see the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>",
                                                        "properties": {
                                                            "AttributeName": {
                                                                "description": "<p>The name of the manual DB cluster snapshot attribute.</p> <p>The attribute named <code>restore</code> refers to the list of AWS accounts that have permission to copy or restore the manual DB cluster snapshot. For more information, see the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>",
                                                                "type": "string"
                                                            },
                                                            "AttributeValues": {
                                                                "description": "<p>The value(s) for the manual DB cluster snapshot attribute.</p> <p>If the <code>AttributeName</code> field is set to <code>restore</code>, then this element returns a list of IDs of the AWS accounts that are authorized to copy or restore the manual DB cluster snapshot. If a value of <code>all</code> is in the list, then the manual DB cluster snapshot is public and available for any AWS account to copy or restore.</p>",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "DBClusterSnapshotIdentifier": {
                                                    "description": "The identifier of the manual DB cluster snapshot that the attributes apply to.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DBClusterSnapshotNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "DBClusterSnapshotIdentifier": {
                                        "description": "The identifier for the DB cluster snapshot to describe the attributes for.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "DBClusterSnapshotIdentifier"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeDBClusterSnapshots": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns information about DB cluster snapshots. This API action supports pagination.",
                "operationId": "DescribeDBClusterSnapshots",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " Provides a list of DB cluster snapshots for the user as the result of a call to the <a>DescribeDBClusterSnapshots</a> action. ",
                                    "properties": {
                                        "DBClusterSnapshots": {
                                            "description": "Provides a list of DB cluster snapshots for the user.",
                                            "items": {
                                                "description": "<p>Contains the details for an Amazon Neptune DB cluster snapshot </p> <p>This data type is used as a response element in the <a>DescribeDBClusterSnapshots</a> action. </p>",
                                                "properties": {
                                                    "AllocatedStorage": {
                                                        "description": "Specifies the allocated storage size in gibibytes (GiB).",
                                                        "type": "integer"
                                                    },
                                                    "AvailabilityZones": {
                                                        "description": "Provides the list of EC2 Availability Zones that instances in the DB cluster snapshot can be restored in.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ClusterCreateTime": {
                                                        "description": "Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "DBClusterIdentifier": {
                                                        "description": "Specifies the DB cluster identifier of the DB cluster that this DB cluster snapshot was created from.",
                                                        "type": "string"
                                                    },
                                                    "DBClusterSnapshotArn": {
                                                        "description": "The Amazon Resource Name (ARN) for the DB cluster snapshot.",
                                                        "type": "string"
                                                    },
                                                    "DBClusterSnapshotIdentifier": {
                                                        "description": "Specifies the identifier for the DB cluster snapshot.",
                                                        "type": "string"
                                                    },
                                                    "Engine": {
                                                        "description": "Specifies the name of the database engine.",
                                                        "type": "string"
                                                    },
                                                    "EngineVersion": {
                                                        "description": "Provides the version of the database engine for this DB cluster snapshot.",
                                                        "type": "string"
                                                    },
                                                    "IAMDatabaseAuthenticationEnabled": {
                                                        "description": "True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.",
                                                        "type": "boolean"
                                                    },
                                                    "KmsKeyId": {
                                                        "description": "If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB cluster snapshot.",
                                                        "type": "string"
                                                    },
                                                    "LicenseModel": {
                                                        "description": "Provides the license model information for this DB cluster snapshot.",
                                                        "type": "string"
                                                    },
                                                    "MasterUsername": {
                                                        "description": "Provides the master username for the DB cluster snapshot.",
                                                        "type": "string"
                                                    },
                                                    "PercentProgress": {
                                                        "description": "Specifies the percentage of the estimated data that has been transferred.",
                                                        "type": "integer"
                                                    },
                                                    "Port": {
                                                        "description": "Specifies the port that the DB cluster was listening on at the time of the snapshot.",
                                                        "type": "integer"
                                                    },
                                                    "SnapshotCreateTime": {
                                                        "description": "Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "SnapshotType": {
                                                        "description": "Provides the type of the DB cluster snapshot.",
                                                        "type": "string"
                                                    },
                                                    "SourceDBClusterSnapshotArn": {
                                                        "description": "If the DB cluster snapshot was copied from a source DB cluster snapshot, the Amazon Resource Name (ARN) for the source DB cluster snapshot, otherwise, a null value.",
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "description": "Specifies the status of this DB cluster snapshot.",
                                                        "type": "string"
                                                    },
                                                    "StorageEncrypted": {
                                                        "description": "Specifies whether the DB cluster snapshot is encrypted.",
                                                        "type": "boolean"
                                                    },
                                                    "VpcId": {
                                                        "description": "Provides the VPC ID associated with the DB cluster snapshot.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Marker": {
                                            "description": " An optional pagination token provided by a previous <a>DescribeDBClusterSnapshots</a> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DBClusterSnapshotNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "DBClusterIdentifier": {
                                        "description": "<p>The ID of the DB cluster to retrieve the list of DB cluster snapshots for. This parameter can't be used in conjunction with the <code>DBClusterSnapshotIdentifier</code> parameter. This parameter is not case-sensitive. </p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the identifier of an existing DBCluster.</p> </li> </ul>",
                                        "type": "string"
                                    },
                                    "DBClusterSnapshotIdentifier": {
                                        "description": "<p>A specific DB cluster snapshot identifier to describe. This parameter can't be used in conjunction with the <code>DBClusterIdentifier</code> parameter. This value is stored as a lowercase string. </p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the identifier of an existing DBClusterSnapshot.</p> </li> <li> <p>If this identifier is for an automated snapshot, the <code>SnapshotType</code> parameter must also be specified.</p> </li> </ul>",
                                        "type": "string"
                                    },
                                    "Filters": {
                                        "description": "This parameter is not currently supported.",
                                        "items": {
                                            "description": "This type is not currently supported.",
                                            "properties": {
                                                "Name": {
                                                    "description": "This parameter is not currently supported.",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "This parameter is not currently supported.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "IncludePublic": {
                                        "description": "<p>True to include manual DB cluster snapshots that are public and can be copied or restored by any AWS account, and otherwise false. The default is <code>false</code>. The default is false.</p> <p>You can share a manual DB cluster snapshot as public by using the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>",
                                        "type": "boolean"
                                    },
                                    "IncludeShared": {
                                        "description": "<p>True to include shared manual DB cluster snapshots from other AWS accounts that this AWS account has been given permission to copy or restore, and otherwise false. The default is <code>false</code>.</p> <p>You can give an AWS account permission to restore a manual DB cluster snapshot from another AWS account by the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>",
                                        "type": "boolean"
                                    },
                                    "Marker": {
                                        "description": "An optional pagination token provided by a previous <code>DescribeDBClusterSnapshots</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                        "type": "string"
                                    },
                                    "MaxRecords": {
                                        "description": "<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                                        "type": "integer"
                                    },
                                    "SnapshotType": {
                                        "description": "<p>The type of DB cluster snapshots to be returned. You can specify one of the following values:</p> <ul> <li> <p> <code>automated</code> - Return all DB cluster snapshots that have been automatically taken by Amazon Neptune for my AWS account.</p> </li> <li> <p> <code>manual</code> - Return all DB cluster snapshots that have been taken by my AWS account.</p> </li> <li> <p> <code>shared</code> - Return all manual DB cluster snapshots that have been shared to my AWS account.</p> </li> <li> <p> <code>public</code> - Return all DB cluster snapshots that have been marked as public.</p> </li> </ul> <p>If you don't specify a <code>SnapshotType</code> value, then both automated and manual DB cluster snapshots are returned. You can include shared DB cluster snapshots with these results by setting the <code>IncludeShared</code> parameter to <code>true</code>. You can include public DB cluster snapshots with these results by setting the <code>IncludePublic</code> parameter to <code>true</code>.</p> <p>The <code>IncludeShared</code> and <code>IncludePublic</code> parameters don't apply for <code>SnapshotType</code> values of <code>manual</code> or <code>automated</code>. The <code>IncludePublic</code> parameter doesn't apply when <code>SnapshotType</code> is set to <code>shared</code>. The <code>IncludeShared</code> parameter doesn't apply when <code>SnapshotType</code> is set to <code>public</code>.</p>",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeDBClusters": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns information about provisioned DB clusters. This API supports pagination.",
                "operationId": "DescribeDBClusters",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Contains the result of a successful invocation of the <a>DescribeDBClusters</a> action.",
                                    "properties": {
                                        "DBClusters": {
                                            "description": "Contains a list of DB clusters for the user.",
                                            "items": {
                                                "description": "<p>Contains the details of an Amazon Neptune DB cluster. </p> <p>This data type is used as a response element in the <a>DescribeDBClusters</a> action. </p>",
                                                "properties": {
                                                    "AllocatedStorage": {
                                                        "description": " <code>AllocatedStorage</code> always returns 1, because Neptune DB cluster storage size is not fixed, but instead automatically adjusts as needed.",
                                                        "type": "integer"
                                                    },
                                                    "AssociatedRoles": {
                                                        "description": "Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.",
                                                        "items": {
                                                            "description": "Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.",
                                                            "properties": {
                                                                "RoleArn": {
                                                                    "description": "The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.",
                                                                    "type": "string"
                                                                },
                                                                "Status": {
                                                                    "description": "<p>Describes the state of association between the IAM role and the DB cluster. The Status property returns one of the following values:</p> <ul> <li> <p> <code>ACTIVE</code> - the IAM role ARN is associated with the DB cluster and can be used to access other AWS services on your behalf.</p> </li> <li> <p> <code>PENDING</code> - the IAM role ARN is being associated with the DB cluster.</p> </li> <li> <p> <code>INVALID</code> - the IAM role ARN is associated with the DB cluster, but the DB cluster is unable to assume the IAM role in order to access other AWS services on your behalf.</p> </li> </ul>",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "AvailabilityZones": {
                                                        "description": "Provides the list of EC2 Availability Zones that instances in the DB cluster can be created in.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "BackupRetentionPeriod": {
                                                        "description": "Specifies the number of days for which automatic DB snapshots are retained.",
                                                        "type": "integer"
                                                    },
                                                    "CharacterSetName": {
                                                        "description": "If present, specifies the name of the character set that this cluster is associated with.",
                                                        "type": "string"
                                                    },
                                                    "CloneGroupId": {
                                                        "description": "Identifies the clone group to which the DB cluster is associated.",
                                                        "type": "string"
                                                    },
                                                    "ClusterCreateTime": {
                                                        "description": "Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "DBClusterArn": {
                                                        "description": "The Amazon Resource Name (ARN) for the DB cluster.",
                                                        "type": "string"
                                                    },
                                                    "DBClusterIdentifier": {
                                                        "description": "Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.",
                                                        "type": "string"
                                                    },
                                                    "DBClusterMembers": {
                                                        "description": "Provides the list of instances that make up the DB cluster.",
                                                        "items": {
                                                            "description": "Contains information about an instance that is part of a DB cluster.",
                                                            "properties": {
                                                                "DBClusterParameterGroupStatus": {
                                                                    "description": "Specifies the status of the DB cluster parameter group for this member of the DB cluster.",
                                                                    "type": "string"
                                                                },
                                                                "DBInstanceIdentifier": {
                                                                    "description": "Specifies the instance identifier for this member of the DB cluster.",
                                                                    "type": "string"
                                                                },
                                                                "IsClusterWriter": {
                                                                    "description": "Value that is <code>true</code> if the cluster member is the primary instance for the DB cluster and <code>false</code> otherwise.",
                                                                    "type": "boolean"
                                                                },
                                                                "PromotionTier": {
                                                                    "description": "A value that specifies the order in which a Read Replica is promoted to the primary instance after a failure of the existing primary instance. ",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "DBClusterOptionGroupMemberships": {
                                                        "description": "Provides the list of option group memberships for this DB cluster.",
                                                        "items": {
                                                            "description": "Contains status information for a DB cluster option group.",
                                                            "properties": {
                                                                "DBClusterOptionGroupName": {
                                                                    "description": "Specifies the name of the DB cluster option group.",
                                                                    "type": "string"
                                                                },
                                                                "Status": {
                                                                    "description": "Specifies the status of the DB cluster option group.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "DBClusterParameterGroup": {
                                                        "description": "Specifies the name of the DB cluster parameter group for the DB cluster.",
                                                        "type": "string"
                                                    },
                                                    "DBSubnetGroup": {
                                                        "description": "Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group.",
                                                        "type": "string"
                                                    },
                                                    "DatabaseName": {
                                                        "description": "Contains the name of the initial database of this DB cluster that was provided at create time, if one was specified when the DB cluster was created. This same name is returned for the life of the DB cluster.",
                                                        "type": "string"
                                                    },
                                                    "DbClusterResourceId": {
                                                        "description": "The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.",
                                                        "type": "string"
                                                    },
                                                    "EarliestRestorableTime": {
                                                        "description": "Specifies the earliest time to which a database can be restored with point-in-time restore.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Endpoint": {
                                                        "description": "Specifies the connection endpoint for the primary instance of the DB cluster.",
                                                        "type": "string"
                                                    },
                                                    "Engine": {
                                                        "description": "Provides the name of the database engine to be used for this DB cluster.",
                                                        "type": "string"
                                                    },
                                                    "EngineVersion": {
                                                        "description": "Indicates the database engine version.",
                                                        "type": "string"
                                                    },
                                                    "HostedZoneId": {
                                                        "description": "Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.",
                                                        "type": "string"
                                                    },
                                                    "IAMDatabaseAuthenticationEnabled": {
                                                        "description": "True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.",
                                                        "type": "boolean"
                                                    },
                                                    "KmsKeyId": {
                                                        "description": "If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB cluster.",
                                                        "type": "string"
                                                    },
                                                    "LatestRestorableTime": {
                                                        "description": "Specifies the latest time to which a database can be restored with point-in-time restore.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "MasterUsername": {
                                                        "description": "Contains the master username for the DB cluster.",
                                                        "type": "string"
                                                    },
                                                    "MultiAZ": {
                                                        "description": "Specifies whether the DB cluster has instances in multiple Availability Zones.",
                                                        "type": "boolean"
                                                    },
                                                    "PercentProgress": {
                                                        "description": "Specifies the progress of the operation as a percentage.",
                                                        "type": "string"
                                                    },
                                                    "Port": {
                                                        "description": "Specifies the port that the database engine is listening on.",
                                                        "type": "integer"
                                                    },
                                                    "PreferredBackupWindow": {
                                                        "description": "Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. ",
                                                        "type": "string"
                                                    },
                                                    "PreferredMaintenanceWindow": {
                                                        "description": "Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
                                                        "type": "string"
                                                    },
                                                    "ReadReplicaIdentifiers": {
                                                        "description": "Contains one or more identifiers of the Read Replicas associated with this DB cluster.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ReaderEndpoint": {
                                                        "description": "<p>The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances connections across the Read Replicas that are available in a DB cluster. As clients request new connections to the reader endpoint, Neptune distributes the connection requests among the Read Replicas in the DB cluster. This functionality can help balance your read workload across multiple Read Replicas in your DB cluster. </p> <p>If a failover occurs, and the Read Replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Read Replicas in the cluster, you can then reconnect to the reader endpoint.</p>",
                                                        "type": "string"
                                                    },
                                                    "ReplicationSourceIdentifier": {
                                                        "description": "Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.",
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "description": "Specifies the current state of this DB cluster.",
                                                        "type": "string"
                                                    },
                                                    "StorageEncrypted": {
                                                        "description": "Specifies whether the DB cluster is encrypted.",
                                                        "type": "boolean"
                                                    },
                                                    "VpcSecurityGroups": {
                                                        "description": "Provides a list of VPC security groups that the DB cluster belongs to.",
                                                        "items": {
                                                            "description": "This data type is used as a response element for queries on VPC security group membership.",
                                                            "properties": {
                                                                "Status": {
                                                                    "description": "The status of the VPC security group.",
                                                                    "type": "string"
                                                                },
                                                                "VpcSecurityGroupId": {
                                                                    "description": "The name of the VPC security group.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Marker": {
                                            "description": "A pagination token that can be used in a subsequent DescribeDBClusters request.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DBClusterNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBClusterIdentifier</i> does not refer to an existing DB cluster. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "DBClusterIdentifier": {
                                        "description": "<p>The user-supplied DB cluster identifier. If this parameter is specified, information from only the specific DB cluster is returned. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match an existing DBClusterIdentifier.</p> </li> </ul>",
                                        "type": "string"
                                    },
                                    "Filters": {
                                        "description": "<p>A filter that specifies one or more DB clusters to describe.</p> <p>Supported filters:</p> <ul> <li> <p> <code>db-cluster-id</code> - Accepts DB cluster identifiers and DB cluster Amazon Resource Names (ARNs). The results list will only include information about the DB clusters identified by these ARNs.</p> </li> </ul>",
                                        "items": {
                                            "description": "This type is not currently supported.",
                                            "properties": {
                                                "Name": {
                                                    "description": "This parameter is not currently supported.",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "This parameter is not currently supported.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "Marker": {
                                        "description": "An optional pagination token provided by a previous <a>DescribeDBClusters</a> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                        "type": "string"
                                    },
                                    "MaxRecords": {
                                        "description": "<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeDBEngineVersions": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns a list of the available DB engines.",
                "operationId": "DescribeDBEngineVersions",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxRecords",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "Marker",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " Contains the result of a successful invocation of the <a>DescribeDBEngineVersions</a> action. ",
                                    "properties": {
                                        "DBEngineVersions": {
                                            "description": " A list of <code>DBEngineVersion</code> elements. ",
                                            "items": {
                                                "description": " This data type is used as a response element in the action <a>DescribeDBEngineVersions</a>. ",
                                                "properties": {
                                                    "DBEngineDescription": {
                                                        "description": "The description of the database engine.",
                                                        "type": "string"
                                                    },
                                                    "DBEngineVersionDescription": {
                                                        "description": "The description of the database engine version.",
                                                        "type": "string"
                                                    },
                                                    "DBParameterGroupFamily": {
                                                        "description": "The name of the DB parameter group family for the database engine.",
                                                        "type": "string"
                                                    },
                                                    "DefaultCharacterSet": {
                                                        "description": " The default character set for new instances of this engine version, if the <code>CharacterSetName</code> parameter of the CreateDBInstance API is not specified. ",
                                                        "properties": {
                                                            "CharacterSetDescription": {
                                                                "description": "The description of the character set.",
                                                                "type": "string"
                                                            },
                                                            "CharacterSetName": {
                                                                "description": "The name of the character set.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "Engine": {
                                                        "description": "The name of the database engine.",
                                                        "type": "string"
                                                    },
                                                    "EngineVersion": {
                                                        "description": "The version number of the database engine.",
                                                        "type": "string"
                                                    },
                                                    "ExportableLogTypes": {
                                                        "description": "The types of logs that the database engine has available for export to CloudWatch Logs.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "SupportedCharacterSets": {
                                                        "description": " A list of the character sets supported by this engine for the <code>CharacterSetName</code> parameter of the <code>CreateDBInstance</code> action. ",
                                                        "items": {
                                                            "description": " This data type is used as a response element in the action <a>DescribeDBEngineVersions</a>. ",
                                                            "properties": {
                                                                "CharacterSetDescription": {
                                                                    "description": "The description of the character set.",
                                                                    "type": "string"
                                                                },
                                                                "CharacterSetName": {
                                                                    "description": "The name of the character set.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "SupportedTimezones": {
                                                        "description": "A list of the time zones supported by this engine for the <code>Timezone</code> parameter of the <code>CreateDBInstance</code> action. ",
                                                        "items": {
                                                            "description": "A time zone associated with a <a>DBInstance</a>. This data type is an element in the response to the <a>DescribeDBInstances</a>, and the <a>DescribeDBEngineVersions</a> actions. ",
                                                            "properties": {
                                                                "TimezoneName": {
                                                                    "description": "The name of the time zone.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "SupportsLogExportsToCloudwatchLogs": {
                                                        "description": "A value that indicates whether the engine version supports exporting the log types specified by ExportableLogTypes to CloudWatch Logs.",
                                                        "type": "boolean"
                                                    },
                                                    "SupportsReadReplica": {
                                                        "description": "Indicates whether the database engine version supports read replicas.",
                                                        "type": "boolean"
                                                    },
                                                    "ValidUpgradeTarget": {
                                                        "description": "A list of engine versions that this database engine version can be upgraded to.",
                                                        "items": {
                                                            "description": "The version of the database engine that a DB instance can be upgraded to.",
                                                            "properties": {
                                                                "AutoUpgrade": {
                                                                    "description": "A value that indicates whether the target version is applied to any source DB instances that have AutoMinorVersionUpgrade set to true.",
                                                                    "type": "boolean"
                                                                },
                                                                "Description": {
                                                                    "description": "The version of the database engine that a DB instance can be upgraded to.",
                                                                    "type": "string"
                                                                },
                                                                "Engine": {
                                                                    "description": "The name of the upgrade target database engine.",
                                                                    "type": "string"
                                                                },
                                                                "EngineVersion": {
                                                                    "description": "The version number of the upgrade target database engine.",
                                                                    "type": "string"
                                                                },
                                                                "IsMajorVersionUpgrade": {
                                                                    "description": "A value that indicates whether a database engine is upgraded to a major version.",
                                                                    "type": "boolean"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Marker": {
                                            "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "DBParameterGroupFamily": {
                                        "description": "<p>The name of a specific DB parameter group family to return details for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match an existing DBParameterGroupFamily.</p> </li> </ul>",
                                        "type": "string"
                                    },
                                    "DefaultOnly": {
                                        "description": "Indicates that only the default version of the specified engine or engine and major version combination is returned.",
                                        "type": "boolean"
                                    },
                                    "Engine": {
                                        "description": "The database engine to return.",
                                        "type": "string"
                                    },
                                    "EngineVersion": {
                                        "description": "<p>The database engine version to return.</p> <p>Example: <code>5.1.49</code> </p>",
                                        "type": "string"
                                    },
                                    "Filters": {
                                        "description": "Not currently supported.",
                                        "items": {
                                            "description": "This type is not currently supported.",
                                            "properties": {
                                                "Name": {
                                                    "description": "This parameter is not currently supported.",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "This parameter is not currently supported.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "ListSupportedCharacterSets": {
                                        "description": "If this parameter is specified and the requested engine supports the <code>CharacterSetName</code> parameter for <code>CreateDBInstance</code>, the response includes a list of supported character sets for each engine version. ",
                                        "type": "boolean"
                                    },
                                    "ListSupportedTimezones": {
                                        "description": "If this parameter is specified and the requested engine supports the <code>TimeZone</code> parameter for <code>CreateDBInstance</code>, the response includes a list of supported time zones for each engine version. ",
                                        "type": "boolean"
                                    },
                                    "Marker": {
                                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                        "type": "string"
                                    },
                                    "MaxRecords": {
                                        "description": "<p> The maximum number of records to include in the response. If more than the <code>MaxRecords</code> value is available, a pagination token called a marker is included in the response so that the following results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeDBInstances": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns information about provisioned instances. This API supports pagination.",
                "operationId": "DescribeDBInstances",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxRecords",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "Marker",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " Contains the result of a successful invocation of the <a>DescribeDBInstances</a> action. ",
                                    "properties": {
                                        "DBInstances": {
                                            "description": " A list of <a>DBInstance</a> instances. ",
                                            "items": {
                                                "description": "<p>Contains the details of an Amazon Neptune DB instance. </p> <p>This data type is used as a response element in the <a>DescribeDBInstances</a> action. </p>",
                                                "properties": {
                                                    "AllocatedStorage": {
                                                        "description": "Specifies the allocated storage size specified in gibibytes.",
                                                        "type": "integer"
                                                    },
                                                    "AutoMinorVersionUpgrade": {
                                                        "description": "Indicates that minor version patches are applied automatically.",
                                                        "type": "boolean"
                                                    },
                                                    "AvailabilityZone": {
                                                        "description": "Specifies the name of the Availability Zone the DB instance is located in.",
                                                        "type": "string"
                                                    },
                                                    "BackupRetentionPeriod": {
                                                        "description": "Specifies the number of days for which automatic DB snapshots are retained.",
                                                        "type": "integer"
                                                    },
                                                    "CACertificateIdentifier": {
                                                        "description": "The identifier of the CA certificate for this DB instance.",
                                                        "type": "string"
                                                    },
                                                    "CharacterSetName": {
                                                        "description": "If present, specifies the name of the character set that this instance is associated with.",
                                                        "type": "string"
                                                    },
                                                    "CopyTagsToSnapshot": {
                                                        "description": "Specifies whether tags are copied from the DB instance to snapshots of the DB instance.",
                                                        "type": "boolean"
                                                    },
                                                    "DBClusterIdentifier": {
                                                        "description": "If the DB instance is a member of a DB cluster, contains the name of the DB cluster that the DB instance is a member of.",
                                                        "type": "string"
                                                    },
                                                    "DBInstanceArn": {
                                                        "description": "The Amazon Resource Name (ARN) for the DB instance.",
                                                        "type": "string"
                                                    },
                                                    "DBInstanceClass": {
                                                        "description": "Contains the name of the compute and memory capacity class of the DB instance.",
                                                        "type": "string"
                                                    },
                                                    "DBInstanceIdentifier": {
                                                        "description": "Contains a user-supplied database identifier. This identifier is the unique key that identifies a DB instance.",
                                                        "type": "string"
                                                    },
                                                    "DBInstanceStatus": {
                                                        "description": "Specifies the current state of this database.",
                                                        "type": "string"
                                                    },
                                                    "DBName": {
                                                        "description": "The database name.",
                                                        "type": "string"
                                                    },
                                                    "DBParameterGroups": {
                                                        "description": "Provides the list of DB parameter groups applied to this DB instance.",
                                                        "items": {
                                                            "description": "<p>The status of the DB parameter group.</p> <p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>CreateDBInstance</a> </p> </li> <li> <p> <a>DeleteDBInstance</a> </p> </li> <li> <p> <a>ModifyDBInstance</a> </p> </li> <li> <p> <a>RebootDBInstance</a> </p> </li> </ul>",
                                                            "properties": {
                                                                "DBParameterGroupName": {
                                                                    "description": "The name of the DP parameter group.",
                                                                    "type": "string"
                                                                },
                                                                "ParameterApplyStatus": {
                                                                    "description": "The status of parameter updates.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "DBSecurityGroups": {
                                                        "description": " Provides List of DB security group elements containing only <code>DBSecurityGroup.Name</code> and <code>DBSecurityGroup.Status</code> subelements. ",
                                                        "items": {
                                                            "description": "<p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>ModifyDBInstance</a> </p> </li> <li> <p> <a>RebootDBInstance</a> </p> </li> </ul>",
                                                            "properties": {
                                                                "DBSecurityGroupName": {
                                                                    "description": "The name of the DB security group.",
                                                                    "type": "string"
                                                                },
                                                                "Status": {
                                                                    "description": "The status of the DB security group.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "DBSubnetGroup": {
                                                        "description": "Specifies information on the subnet group associated with the DB instance, including the name, description, and subnets in the subnet group.",
                                                        "properties": {
                                                            "DBSubnetGroupArn": {
                                                                "description": "The Amazon Resource Name (ARN) for the DB subnet group.",
                                                                "type": "string"
                                                            },
                                                            "DBSubnetGroupDescription": {
                                                                "description": "Provides the description of the DB subnet group.",
                                                                "type": "string"
                                                            },
                                                            "DBSubnetGroupName": {
                                                                "description": "The name of the DB subnet group.",
                                                                "type": "string"
                                                            },
                                                            "SubnetGroupStatus": {
                                                                "description": "Provides the status of the DB subnet group.",
                                                                "type": "string"
                                                            },
                                                            "Subnets": {
                                                                "description": " Contains a list of <a>Subnet</a> elements. ",
                                                                "items": {
                                                                    "description": " This data type is used as a response element in the <a>DescribeDBSubnetGroups</a> action. ",
                                                                    "properties": {
                                                                        "SubnetAvailabilityZone": {
                                                                            "description": "<p>Contains Availability Zone information.</p> <p> This data type is used as an element in the following data type:</p> <ul> <li> <p> <a>OrderableDBInstanceOption</a> </p> </li> </ul>",
                                                                            "properties": {
                                                                                "Name": {
                                                                                    "description": "The name of the availability zone.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "SubnetIdentifier": {
                                                                            "description": "Specifies the identifier of the subnet.",
                                                                            "type": "string"
                                                                        },
                                                                        "SubnetStatus": {
                                                                            "description": "Specifies the status of the subnet.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "VpcId": {
                                                                "description": "Provides the VpcId of the DB subnet group.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "DbInstancePort": {
                                                        "description": "Specifies the port that the DB instance listens on. If the DB instance is part of a DB cluster, this can be a different port than the DB cluster port.",
                                                        "type": "integer"
                                                    },
                                                    "DbiResourceId": {
                                                        "description": "The AWS Region-unique, immutable identifier for the DB instance. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.",
                                                        "type": "string"
                                                    },
                                                    "DomainMemberships": {
                                                        "description": "Not supported",
                                                        "items": {
                                                            "description": "An Active Directory Domain membership record associated with the DB instance.",
                                                            "properties": {
                                                                "Domain": {
                                                                    "description": "The identifier of the Active Directory Domain.",
                                                                    "type": "string"
                                                                },
                                                                "FQDN": {
                                                                    "description": "The fully qualified domain name of the Active Directory Domain.",
                                                                    "type": "string"
                                                                },
                                                                "IAMRoleName": {
                                                                    "description": "The name of the IAM role to be used when making API calls to the Directory Service.",
                                                                    "type": "string"
                                                                },
                                                                "Status": {
                                                                    "description": "The status of the DB instance's Active Directory Domain membership, such as joined, pending-join, failed etc).",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "EnabledCloudwatchLogsExports": {
                                                        "description": "A list of log types that this DB instance is configured to export to CloudWatch Logs.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "Endpoint": {
                                                        "description": "Specifies the connection endpoint.",
                                                        "properties": {
                                                            "Address": {
                                                                "description": "Specifies the DNS address of the DB instance.",
                                                                "type": "string"
                                                            },
                                                            "HostedZoneId": {
                                                                "description": "Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.",
                                                                "type": "string"
                                                            },
                                                            "Port": {
                                                                "description": "Specifies the port that the database engine is listening on.",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "Engine": {
                                                        "description": "Provides the name of the database engine to be used for this DB instance.",
                                                        "type": "string"
                                                    },
                                                    "EngineVersion": {
                                                        "description": "Indicates the database engine version.",
                                                        "type": "string"
                                                    },
                                                    "EnhancedMonitoringResourceArn": {
                                                        "description": "The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the Enhanced Monitoring metrics data for the DB instance.",
                                                        "type": "string"
                                                    },
                                                    "IAMDatabaseAuthenticationEnabled": {
                                                        "description": "True if AWS Identity and Access Management (IAM) authentication is enabled, and otherwise false.",
                                                        "type": "boolean"
                                                    },
                                                    "InstanceCreateTime": {
                                                        "description": "Provides the date and time the DB instance was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "Iops": {
                                                        "description": "Specifies the Provisioned IOPS (I/O operations per second) value.",
                                                        "type": "integer"
                                                    },
                                                    "KmsKeyId": {
                                                        "description": " If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB instance. ",
                                                        "type": "string"
                                                    },
                                                    "LatestRestorableTime": {
                                                        "description": "Specifies the latest time to which a database can be restored with point-in-time restore.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "LicenseModel": {
                                                        "description": "License model information for this DB instance.",
                                                        "type": "string"
                                                    },
                                                    "MasterUsername": {
                                                        "description": "Contains the master username for the DB instance.",
                                                        "type": "string"
                                                    },
                                                    "MonitoringInterval": {
                                                        "description": "The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance.",
                                                        "type": "integer"
                                                    },
                                                    "MonitoringRoleArn": {
                                                        "description": "The ARN for the IAM role that permits Neptune to send Enhanced Monitoring metrics to Amazon CloudWatch Logs.",
                                                        "type": "string"
                                                    },
                                                    "MultiAZ": {
                                                        "description": "Specifies if the DB instance is a Multi-AZ deployment.",
                                                        "type": "boolean"
                                                    },
                                                    "OptionGroupMemberships": {
                                                        "description": "Provides the list of option group memberships for this DB instance.",
                                                        "items": {
                                                            "description": "Provides information on the option groups the DB instance is a member of.",
                                                            "properties": {
                                                                "OptionGroupName": {
                                                                    "description": "The name of the option group that the instance belongs to.",
                                                                    "type": "string"
                                                                },
                                                                "Status": {
                                                                    "description": "The status of the DB instance's option group membership. Valid values are: <code>in-sync</code>, <code>pending-apply</code>, <code>pending-removal</code>, <code>pending-maintenance-apply</code>, <code>pending-maintenance-removal</code>, <code>applying</code>, <code>removing</code>, and <code>failed</code>. ",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "PendingModifiedValues": {
                                                        "description": "Specifies that changes to the DB instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements.",
                                                        "properties": {
                                                            "AllocatedStorage": {
                                                                "description": " Contains the new <code>AllocatedStorage</code> size for the DB instance that will be applied or is currently being applied. ",
                                                                "type": "integer"
                                                            },
                                                            "BackupRetentionPeriod": {
                                                                "description": "Specifies the pending number of days for which automated backups are retained.",
                                                                "type": "integer"
                                                            },
                                                            "CACertificateIdentifier": {
                                                                "description": "Specifies the identifier of the CA certificate for the DB instance.",
                                                                "type": "string"
                                                            },
                                                            "DBInstanceClass": {
                                                                "description": " Contains the new <code>DBInstanceClass</code> for the DB instance that will be applied or is currently being applied. ",
                                                                "type": "string"
                                                            },
                                                            "DBInstanceIdentifier": {
                                                                "description": " Contains the new <code>DBInstanceIdentifier</code> for the DB instance that will be applied or is currently being applied. ",
                                                                "type": "string"
                                                            },
                                                            "DBSubnetGroupName": {
                                                                "description": "The new DB subnet group for the DB instance. ",
                                                                "type": "string"
                                                            },
                                                            "EngineVersion": {
                                                                "description": "Indicates the database engine version.",
                                                                "type": "string"
                                                            },
                                                            "Iops": {
                                                                "description": "Specifies the new Provisioned IOPS value for the DB instance that will be applied or is currently being applied.",
                                                                "type": "integer"
                                                            },
                                                            "LicenseModel": {
                                                                "description": "<p>The license model for the DB instance.</p> <p>Valid values: <code>license-included</code> | <code>bring-your-own-license</code> | <code>general-public-license</code> </p>",
                                                                "type": "string"
                                                            },
                                                            "MasterUserPassword": {
                                                                "description": "Contains the pending or currently-in-progress change of the master credentials for the DB instance.",
                                                                "type": "string"
                                                            },
                                                            "MultiAZ": {
                                                                "description": "Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.",
                                                                "type": "boolean"
                                                            },
                                                            "PendingCloudwatchLogsExports": {
                                                                "description": "A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated.",
                                                                "properties": {
                                                                    "LogTypesToDisable": {
                                                                        "description": "Log types that are in the process of being enabled. After they are enabled, these log types are exported to CloudWatch Logs.",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "LogTypesToEnable": {
                                                                        "description": "Log types that are in the process of being deactivated. After they are deactivated, these log types aren't exported to CloudWatch Logs.",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "Port": {
                                                                "description": "Specifies the pending port for the DB instance.",
                                                                "type": "integer"
                                                            },
                                                            "StorageType": {
                                                                "description": "Specifies the storage type to be associated with the DB instance.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "PerformanceInsightsEnabled": {
                                                        "description": "True if Performance Insights is enabled for the DB instance, and otherwise false.",
                                                        "type": "boolean"
                                                    },
                                                    "PerformanceInsightsKMSKeyId": {
                                                        "description": "The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.",
                                                        "type": "string"
                                                    },
                                                    "PreferredBackupWindow": {
                                                        "description": " Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. ",
                                                        "type": "string"
                                                    },
                                                    "PreferredMaintenanceWindow": {
                                                        "description": "Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
                                                        "type": "string"
                                                    },
                                                    "PromotionTier": {
                                                        "description": "A value that specifies the order in which a Read Replica is promoted to the primary instance after a failure of the existing primary instance. ",
                                                        "type": "integer"
                                                    },
                                                    "PubliclyAccessible": {
                                                        "description": "This parameter is not supported.",
                                                        "type": "boolean"
                                                    },
                                                    "ReadReplicaDBClusterIdentifiers": {
                                                        "description": "Contains one or more identifiers of DB clusters that are Read Replicas of this DB instance.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ReadReplicaDBInstanceIdentifiers": {
                                                        "description": "Contains one or more identifiers of the Read Replicas associated with this DB instance.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ReadReplicaSourceDBInstanceIdentifier": {
                                                        "description": "Contains the identifier of the source DB instance if this DB instance is a Read Replica.",
                                                        "type": "string"
                                                    },
                                                    "SecondaryAvailabilityZone": {
                                                        "description": "If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support.",
                                                        "type": "string"
                                                    },
                                                    "StatusInfos": {
                                                        "description": "The status of a Read Replica. If the instance is not a Read Replica, this is blank.",
                                                        "items": {
                                                            "description": "Provides a list of status information for a DB instance.",
                                                            "properties": {
                                                                "Message": {
                                                                    "description": "Details of the error if there is an error for the instance. If the instance is not in an error state, this value is blank.",
                                                                    "type": "string"
                                                                },
                                                                "Normal": {
                                                                    "description": "Boolean value that is true if the instance is operating normally, or false if the instance is in an error state.",
                                                                    "type": "boolean"
                                                                },
                                                                "Status": {
                                                                    "description": "Status of the DB instance. For a StatusType of read replica, the values can be replicating, error, stopped, or terminated.",
                                                                    "type": "string"
                                                                },
                                                                "StatusType": {
                                                                    "description": "This value is currently \"read replication.\"",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "StorageEncrypted": {
                                                        "description": "Specifies whether the DB instance is encrypted.",
                                                        "type": "boolean"
                                                    },
                                                    "StorageType": {
                                                        "description": "Specifies the storage type associated with DB instance.",
                                                        "type": "string"
                                                    },
                                                    "TdeCredentialArn": {
                                                        "description": "The ARN from the key store with which the instance is associated for TDE encryption.",
                                                        "type": "string"
                                                    },
                                                    "Timezone": {
                                                        "description": "Not supported. ",
                                                        "type": "string"
                                                    },
                                                    "VpcSecurityGroups": {
                                                        "description": "Provides a list of VPC security group elements that the DB instance belongs to.",
                                                        "items": {
                                                            "description": "This data type is used as a response element for queries on VPC security group membership.",
                                                            "properties": {
                                                                "Status": {
                                                                    "description": "The status of the VPC security group.",
                                                                    "type": "string"
                                                                },
                                                                "VpcSecurityGroupId": {
                                                                    "description": "The name of the VPC security group.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Marker": {
                                            "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> . ",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DBInstanceNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBInstanceIdentifier</i> does not refer to an existing DB instance. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "DBInstanceIdentifier": {
                                        "description": "<p>The user-supplied instance identifier. If this parameter is specified, information from only the specific DB instance is returned. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the identifier of an existing DBInstance.</p> </li> </ul>",
                                        "type": "string"
                                    },
                                    "Filters": {
                                        "description": "<p>A filter that specifies one or more DB instances to describe.</p> <p>Supported filters:</p> <ul> <li> <p> <code>db-cluster-id</code> - Accepts DB cluster identifiers and DB cluster Amazon Resource Names (ARNs). The results list will only include information about the DB instances associated with the DB clusters identified by these ARNs.</p> </li> <li> <p> <code>db-instance-id</code> - Accepts DB instance identifiers and DB instance Amazon Resource Names (ARNs). The results list will only include information about the DB instances identified by these ARNs.</p> </li> </ul>",
                                        "items": {
                                            "description": "This type is not currently supported.",
                                            "properties": {
                                                "Name": {
                                                    "description": "This parameter is not currently supported.",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "This parameter is not currently supported.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "Marker": {
                                        "description": " An optional pagination token provided by a previous <code>DescribeDBInstances</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                        "type": "string"
                                    },
                                    "MaxRecords": {
                                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeDBParameterGroups": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": " Returns a list of <code>DBParameterGroup</code> descriptions. If a <code>DBParameterGroupName</code> is specified, the list will contain only the description of the specified DB parameter group. ",
                "operationId": "DescribeDBParameterGroups",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxRecords",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "Marker",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " Contains the result of a successful invocation of the <a>DescribeDBParameterGroups</a> action. ",
                                    "properties": {
                                        "DBParameterGroups": {
                                            "description": " A list of <a>DBParameterGroup</a> instances. ",
                                            "items": {
                                                "description": "<p>Contains the details of an Amazon Neptune DB parameter group. </p> <p>This data type is used as a response element in the <a>DescribeDBParameterGroups</a> action. </p>",
                                                "properties": {
                                                    "DBParameterGroupArn": {
                                                        "description": "The Amazon Resource Name (ARN) for the DB parameter group.",
                                                        "type": "string"
                                                    },
                                                    "DBParameterGroupFamily": {
                                                        "description": "Provides the name of the DB parameter group family that this DB parameter group is compatible with.",
                                                        "type": "string"
                                                    },
                                                    "DBParameterGroupName": {
                                                        "description": "Provides the name of the DB parameter group.",
                                                        "type": "string"
                                                    },
                                                    "Description": {
                                                        "description": "Provides the customer-specified description for this DB parameter group.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Marker": {
                                            "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DBParameterGroupNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBParameterGroupName</i> does not refer to an existing DB parameter group. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "DBParameterGroupName": {
                                        "description": "<p>The name of a specific DB parameter group to return details for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DBClusterParameterGroup.</p> </li> </ul>",
                                        "type": "string"
                                    },
                                    "Filters": {
                                        "description": "This parameter is not currently supported.",
                                        "items": {
                                            "description": "This type is not currently supported.",
                                            "properties": {
                                                "Name": {
                                                    "description": "This parameter is not currently supported.",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "This parameter is not currently supported.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "Marker": {
                                        "description": " An optional pagination token provided by a previous <code>DescribeDBParameterGroups</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                        "type": "string"
                                    },
                                    "MaxRecords": {
                                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeDBParameters": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns the detailed parameter list for a particular DB parameter group.",
                "operationId": "DescribeDBParameters",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxRecords",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "Marker",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " Contains the result of a successful invocation of the <a>DescribeDBParameters</a> action. ",
                                    "properties": {
                                        "Marker": {
                                            "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                            "type": "string"
                                        },
                                        "Parameters": {
                                            "description": " A list of <a>Parameter</a> values. ",
                                            "items": {
                                                "description": "<p> This data type is used as a request parameter in the <a>ModifyDBParameterGroup</a> and <a>ResetDBParameterGroup</a> actions. </p> <p>This data type is used as a response element in the <a>DescribeEngineDefaultParameters</a> and <a>DescribeDBParameters</a> actions.</p>",
                                                "properties": {
                                                    "AllowedValues": {
                                                        "description": "Specifies the valid range of values for the parameter.",
                                                        "type": "string"
                                                    },
                                                    "ApplyMethod": {
                                                        "description": "Indicates when to apply parameter updates.",
                                                        "enum": [
                                                            "immediate",
                                                            "pending-reboot"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "ApplyType": {
                                                        "description": "Specifies the engine specific parameters type.",
                                                        "type": "string"
                                                    },
                                                    "DataType": {
                                                        "description": "Specifies the valid data type for the parameter.",
                                                        "type": "string"
                                                    },
                                                    "Description": {
                                                        "description": "Provides a description of the parameter.",
                                                        "type": "string"
                                                    },
                                                    "IsModifiable": {
                                                        "description": " Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed. ",
                                                        "type": "boolean"
                                                    },
                                                    "MinimumEngineVersion": {
                                                        "description": "The earliest engine version to which the parameter can apply.",
                                                        "type": "string"
                                                    },
                                                    "ParameterName": {
                                                        "description": "Specifies the name of the parameter.",
                                                        "type": "string"
                                                    },
                                                    "ParameterValue": {
                                                        "description": "Specifies the value of the parameter.",
                                                        "type": "string"
                                                    },
                                                    "Source": {
                                                        "description": "Indicates the source of the parameter value.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DBParameterGroupNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBParameterGroupName</i> does not refer to an existing DB parameter group. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "DBParameterGroupName": {
                                        "description": "<p>The name of a specific DB parameter group to return details for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DBParameterGroup.</p> </li> </ul>",
                                        "type": "string"
                                    },
                                    "Filters": {
                                        "description": "This parameter is not currently supported.",
                                        "items": {
                                            "description": "This type is not currently supported.",
                                            "properties": {
                                                "Name": {
                                                    "description": "This parameter is not currently supported.",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "This parameter is not currently supported.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "Marker": {
                                        "description": " An optional pagination token provided by a previous <code>DescribeDBParameters</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                        "type": "string"
                                    },
                                    "MaxRecords": {
                                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                                        "type": "integer"
                                    },
                                    "Source": {
                                        "description": "<p>The parameter types to return.</p> <p>Default: All parameter types returned</p> <p>Valid Values: <code>user | system | engine-default</code> </p>",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "DBParameterGroupName"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeDBSubnetGroups": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Returns a list of DBSubnetGroup descriptions. If a DBSubnetGroupName is specified, the list will contain only the descriptions of the specified DBSubnetGroup.</p> <p>For an overview of CIDR ranges, go to the <a href=\"http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\">Wikipedia Tutorial</a>. </p>",
                "operationId": "DescribeDBSubnetGroups",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxRecords",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "Marker",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " Contains the result of a successful invocation of the <a>DescribeDBSubnetGroups</a> action. ",
                                    "properties": {
                                        "DBSubnetGroups": {
                                            "description": " A list of <a>DBSubnetGroup</a> instances. ",
                                            "items": {
                                                "description": "<p>Contains the details of an Amazon Neptune DB subnet group. </p> <p>This data type is used as a response element in the <a>DescribeDBSubnetGroups</a> action. </p>",
                                                "properties": {
                                                    "DBSubnetGroupArn": {
                                                        "description": "The Amazon Resource Name (ARN) for the DB subnet group.",
                                                        "type": "string"
                                                    },
                                                    "DBSubnetGroupDescription": {
                                                        "description": "Provides the description of the DB subnet group.",
                                                        "type": "string"
                                                    },
                                                    "DBSubnetGroupName": {
                                                        "description": "The name of the DB subnet group.",
                                                        "type": "string"
                                                    },
                                                    "SubnetGroupStatus": {
                                                        "description": "Provides the status of the DB subnet group.",
                                                        "type": "string"
                                                    },
                                                    "Subnets": {
                                                        "description": " Contains a list of <a>Subnet</a> elements. ",
                                                        "items": {
                                                            "description": " This data type is used as a response element in the <a>DescribeDBSubnetGroups</a> action. ",
                                                            "properties": {
                                                                "SubnetAvailabilityZone": {
                                                                    "description": "<p>Contains Availability Zone information.</p> <p> This data type is used as an element in the following data type:</p> <ul> <li> <p> <a>OrderableDBInstanceOption</a> </p> </li> </ul>",
                                                                    "properties": {
                                                                        "Name": {
                                                                            "description": "The name of the availability zone.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "SubnetIdentifier": {
                                                                    "description": "Specifies the identifier of the subnet.",
                                                                    "type": "string"
                                                                },
                                                                "SubnetStatus": {
                                                                    "description": "Specifies the status of the subnet.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "VpcId": {
                                                        "description": "Provides the VpcId of the DB subnet group.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Marker": {
                                            "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DBSubnetGroupNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "DBSubnetGroupName": {
                                        "description": "The name of the DB subnet group to return details for.",
                                        "type": "string"
                                    },
                                    "Filters": {
                                        "description": "This parameter is not currently supported.",
                                        "items": {
                                            "description": "This type is not currently supported.",
                                            "properties": {
                                                "Name": {
                                                    "description": "This parameter is not currently supported.",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "This parameter is not currently supported.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "Marker": {
                                        "description": " An optional pagination token provided by a previous DescribeDBSubnetGroups request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                        "type": "string"
                                    },
                                    "MaxRecords": {
                                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeEngineDefaultClusterParameters": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns the default engine and system parameter information for the cluster database engine.",
                "operationId": "DescribeEngineDefaultClusterParameters",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "EngineDefaults": {
                                            "description": " Contains the result of a successful invocation of the <a>DescribeEngineDefaultParameters</a> action. ",
                                            "properties": {
                                                "DBParameterGroupFamily": {
                                                    "description": "Specifies the name of the DB parameter group family that the engine default parameters apply to.",
                                                    "type": "string"
                                                },
                                                "Marker": {
                                                    "description": " An optional pagination token provided by a previous EngineDefaults request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> . ",
                                                    "type": "string"
                                                },
                                                "Parameters": {
                                                    "description": "Contains a list of engine default parameters.",
                                                    "items": {
                                                        "description": "<p> This data type is used as a request parameter in the <a>ModifyDBParameterGroup</a> and <a>ResetDBParameterGroup</a> actions. </p> <p>This data type is used as a response element in the <a>DescribeEngineDefaultParameters</a> and <a>DescribeDBParameters</a> actions.</p>",
                                                        "properties": {
                                                            "AllowedValues": {
                                                                "description": "Specifies the valid range of values for the parameter.",
                                                                "type": "string"
                                                            },
                                                            "ApplyMethod": {
                                                                "description": "Indicates when to apply parameter updates.",
                                                                "enum": [
                                                                    "immediate",
                                                                    "pending-reboot"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "ApplyType": {
                                                                "description": "Specifies the engine specific parameters type.",
                                                                "type": "string"
                                                            },
                                                            "DataType": {
                                                                "description": "Specifies the valid data type for the parameter.",
                                                                "type": "string"
                                                            },
                                                            "Description": {
                                                                "description": "Provides a description of the parameter.",
                                                                "type": "string"
                                                            },
                                                            "IsModifiable": {
                                                                "description": " Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed. ",
                                                                "type": "boolean"
                                                            },
                                                            "MinimumEngineVersion": {
                                                                "description": "The earliest engine version to which the parameter can apply.",
                                                                "type": "string"
                                                            },
                                                            "ParameterName": {
                                                                "description": "Specifies the name of the parameter.",
                                                                "type": "string"
                                                            },
                                                            "ParameterValue": {
                                                                "description": "Specifies the value of the parameter.",
                                                                "type": "string"
                                                            },
                                                            "Source": {
                                                                "description": "Indicates the source of the parameter value.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "DBParameterGroupFamily": {
                                        "description": "The name of the DB cluster parameter group family to return engine parameter information for.",
                                        "type": "string"
                                    },
                                    "Filters": {
                                        "description": "This parameter is not currently supported.",
                                        "items": {
                                            "description": "This type is not currently supported.",
                                            "properties": {
                                                "Name": {
                                                    "description": "This parameter is not currently supported.",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "This parameter is not currently supported.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "Marker": {
                                        "description": " An optional pagination token provided by a previous <code>DescribeEngineDefaultClusterParameters</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                        "type": "string"
                                    },
                                    "MaxRecords": {
                                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "DBParameterGroupFamily"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeEngineDefaultParameters": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns the default engine and system parameter information for the specified database engine.",
                "operationId": "DescribeEngineDefaultParameters",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxRecords",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "Marker",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "EngineDefaults": {
                                            "description": " Contains the result of a successful invocation of the <a>DescribeEngineDefaultParameters</a> action. ",
                                            "properties": {
                                                "DBParameterGroupFamily": {
                                                    "description": "Specifies the name of the DB parameter group family that the engine default parameters apply to.",
                                                    "type": "string"
                                                },
                                                "Marker": {
                                                    "description": " An optional pagination token provided by a previous EngineDefaults request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> . ",
                                                    "type": "string"
                                                },
                                                "Parameters": {
                                                    "description": "Contains a list of engine default parameters.",
                                                    "items": {
                                                        "description": "<p> This data type is used as a request parameter in the <a>ModifyDBParameterGroup</a> and <a>ResetDBParameterGroup</a> actions. </p> <p>This data type is used as a response element in the <a>DescribeEngineDefaultParameters</a> and <a>DescribeDBParameters</a> actions.</p>",
                                                        "properties": {
                                                            "AllowedValues": {
                                                                "description": "Specifies the valid range of values for the parameter.",
                                                                "type": "string"
                                                            },
                                                            "ApplyMethod": {
                                                                "description": "Indicates when to apply parameter updates.",
                                                                "enum": [
                                                                    "immediate",
                                                                    "pending-reboot"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "ApplyType": {
                                                                "description": "Specifies the engine specific parameters type.",
                                                                "type": "string"
                                                            },
                                                            "DataType": {
                                                                "description": "Specifies the valid data type for the parameter.",
                                                                "type": "string"
                                                            },
                                                            "Description": {
                                                                "description": "Provides a description of the parameter.",
                                                                "type": "string"
                                                            },
                                                            "IsModifiable": {
                                                                "description": " Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed. ",
                                                                "type": "boolean"
                                                            },
                                                            "MinimumEngineVersion": {
                                                                "description": "The earliest engine version to which the parameter can apply.",
                                                                "type": "string"
                                                            },
                                                            "ParameterName": {
                                                                "description": "Specifies the name of the parameter.",
                                                                "type": "string"
                                                            },
                                                            "ParameterValue": {
                                                                "description": "Specifies the value of the parameter.",
                                                                "type": "string"
                                                            },
                                                            "Source": {
                                                                "description": "Indicates the source of the parameter value.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "DBParameterGroupFamily": {
                                        "description": "The name of the DB parameter group family.",
                                        "type": "string"
                                    },
                                    "Filters": {
                                        "description": "Not currently supported.",
                                        "items": {
                                            "description": "This type is not currently supported.",
                                            "properties": {
                                                "Name": {
                                                    "description": "This parameter is not currently supported.",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "This parameter is not currently supported.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "Marker": {
                                        "description": " An optional pagination token provided by a previous <code>DescribeEngineDefaultParameters</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                        "type": "string"
                                    },
                                    "MaxRecords": {
                                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "DBParameterGroupFamily"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeEventCategories": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Displays a list of categories for all event source types, or, if specified, for a specified source type. ",
                "operationId": "DescribeEventCategories",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Data returned from the <b>DescribeEventCategories</b> action.",
                                    "properties": {
                                        "EventCategoriesMapList": {
                                            "description": "A list of EventCategoriesMap data types.",
                                            "items": {
                                                "description": "Contains the results of a successful invocation of the <a>DescribeEventCategories</a> action.",
                                                "properties": {
                                                    "EventCategories": {
                                                        "description": "The event categories for the specified source type",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "SourceType": {
                                                        "description": "The source type that the returned categories belong to",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "Filters": {
                                        "description": "This parameter is not currently supported.",
                                        "items": {
                                            "description": "This type is not currently supported.",
                                            "properties": {
                                                "Name": {
                                                    "description": "This parameter is not currently supported.",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "This parameter is not currently supported.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "SourceType": {
                                        "description": "<p>The type of source that is generating the events.</p> <p>Valid values: db-instance | db-parameter-group | db-security-group | db-snapshot</p>",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeEventSubscriptions": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Lists all the subscription descriptions for a customer account. The description for a subscription includes SubscriptionName, SNSTopicARN, CustomerID, SourceType, SourceID, CreationTime, and Status.</p> <p>If you specify a SubscriptionName, lists the description for that subscription.</p>",
                "operationId": "DescribeEventSubscriptions",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxRecords",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "Marker",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Data returned by the <b>DescribeEventSubscriptions</b> action.",
                                    "properties": {
                                        "EventSubscriptionsList": {
                                            "description": "A list of EventSubscriptions data types.",
                                            "items": {
                                                "description": "Contains the results of a successful invocation of the <a>DescribeEventSubscriptions</a> action.",
                                                "properties": {
                                                    "CustSubscriptionId": {
                                                        "description": "The event notification subscription Id.",
                                                        "type": "string"
                                                    },
                                                    "CustomerAwsId": {
                                                        "description": "The AWS customer account associated with the event notification subscription.",
                                                        "type": "string"
                                                    },
                                                    "Enabled": {
                                                        "description": "A Boolean value indicating if the subscription is enabled. True indicates the subscription is enabled.",
                                                        "type": "boolean"
                                                    },
                                                    "EventCategoriesList": {
                                                        "description": "A list of event categories for the event notification subscription.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "EventSubscriptionArn": {
                                                        "description": "The Amazon Resource Name (ARN) for the event subscription.",
                                                        "type": "string"
                                                    },
                                                    "SnsTopicArn": {
                                                        "description": "The topic ARN of the event notification subscription.",
                                                        "type": "string"
                                                    },
                                                    "SourceIdsList": {
                                                        "description": "A list of source IDs for the event notification subscription.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "SourceType": {
                                                        "description": "The source type for the event notification subscription.",
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "description": "<p>The status of the event notification subscription.</p> <p>Constraints:</p> <p>Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist</p> <p>The status \"no-permission\" indicates that Neptune no longer has permission to post to the SNS topic. The status \"topic-not-exist\" indicates that the topic was deleted after the subscription was created.</p>",
                                                        "type": "string"
                                                    },
                                                    "SubscriptionCreationTime": {
                                                        "description": "The time the event notification subscription was created.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Marker": {
                                            "description": " An optional pagination token provided by a previous DescribeOrderableDBInstanceOptions request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "SubscriptionNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "Filters": {
                                        "description": "This parameter is not currently supported.",
                                        "items": {
                                            "description": "This type is not currently supported.",
                                            "properties": {
                                                "Name": {
                                                    "description": "This parameter is not currently supported.",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "This parameter is not currently supported.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "Marker": {
                                        "description": " An optional pagination token provided by a previous DescribeOrderableDBInstanceOptions request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> . ",
                                        "type": "string"
                                    },
                                    "MaxRecords": {
                                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                                        "type": "integer"
                                    },
                                    "SubscriptionName": {
                                        "description": "The name of the event notification subscription you want to describe.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeEvents": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns events related to DB instances, DB security groups, DB snapshots, and DB parameter groups for the past 14 days. Events specific to a particular DB instance, DB security group, database snapshot, or DB parameter group can be obtained by providing the name as a parameter. By default, the past hour of events are returned.",
                "operationId": "DescribeEvents",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxRecords",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "Marker",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " Contains the result of a successful invocation of the <a>DescribeEvents</a> action. ",
                                    "properties": {
                                        "Events": {
                                            "description": " A list of <a>Event</a> instances. ",
                                            "items": {
                                                "description": " This data type is used as a response element in the <a>DescribeEvents</a> action. ",
                                                "properties": {
                                                    "Date": {
                                                        "description": "Specifies the date and time of the event.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "EventCategories": {
                                                        "description": "Specifies the category for the event.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "Message": {
                                                        "description": "Provides the text of this event.",
                                                        "type": "string"
                                                    },
                                                    "SourceArn": {
                                                        "description": "The Amazon Resource Name (ARN) for the event.",
                                                        "type": "string"
                                                    },
                                                    "SourceIdentifier": {
                                                        "description": "Provides the identifier for the source of the event.",
                                                        "type": "string"
                                                    },
                                                    "SourceType": {
                                                        "description": "Specifies the source type for this event.",
                                                        "enum": [
                                                            "db-instance",
                                                            "db-parameter-group",
                                                            "db-security-group",
                                                            "db-snapshot",
                                                            "db-cluster",
                                                            "db-cluster-snapshot"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Marker": {
                                            "description": " An optional pagination token provided by a previous Events request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> . ",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "Duration": {
                                        "description": "<p>The number of minutes to retrieve events for.</p> <p>Default: 60</p>",
                                        "type": "integer"
                                    },
                                    "EndTime": {
                                        "description": "<p> The end of the time interval for which to retrieve events, specified in ISO 8601 format. For more information about ISO 8601, go to the <a href=\"http://en.wikipedia.org/wiki/ISO_8601\">ISO8601 Wikipedia page.</a> </p> <p>Example: 2009-07-08T18:00Z</p>",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "EventCategories": {
                                        "description": "A list of event categories that trigger notifications for a event notification subscription.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "Filters": {
                                        "description": "This parameter is not currently supported.",
                                        "items": {
                                            "description": "This type is not currently supported.",
                                            "properties": {
                                                "Name": {
                                                    "description": "This parameter is not currently supported.",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "This parameter is not currently supported.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "Marker": {
                                        "description": " An optional pagination token provided by a previous DescribeEvents request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                                        "type": "string"
                                    },
                                    "MaxRecords": {
                                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                                        "type": "integer"
                                    },
                                    "SourceIdentifier": {
                                        "description": "<p>The identifier of the event source for which events are returned. If not specified, then all sources are included in the response.</p> <p>Constraints:</p> <ul> <li> <p>If SourceIdentifier is supplied, SourceType must also be provided.</p> </li> <li> <p>If the source type is <code>DBInstance</code>, then a <code>DBInstanceIdentifier</code> must be supplied.</p> </li> <li> <p>If the source type is <code>DBSecurityGroup</code>, a <code>DBSecurityGroupName</code> must be supplied.</p> </li> <li> <p>If the source type is <code>DBParameterGroup</code>, a <code>DBParameterGroupName</code> must be supplied.</p> </li> <li> <p>If the source type is <code>DBSnapshot</code>, a <code>DBSnapshotIdentifier</code> must be supplied.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>",
                                        "type": "string"
                                    },
                                    "SourceType": {
                                        "description": "The event source to retrieve events for. If no value is specified, all events are returned.",
                                        "enum": [
                                            "db-instance",
                                            "db-parameter-group",
                                            "db-security-group",
                                            "db-snapshot",
                                            "db-cluster",
                                            "db-cluster-snapshot"
                                        ],
                                        "type": "string"
                                    },
                                    "StartTime": {
                                        "description": "<p> The beginning of the time interval to retrieve events for, specified in ISO 8601 format. For more information about ISO 8601, go to the <a href=\"http://en.wikipedia.org/wiki/ISO_8601\">ISO8601 Wikipedia page.</a> </p> <p>Example: 2009-07-08T18:00Z</p>",
                                        "format": "date-time",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeOrderableDBInstanceOptions": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns a list of orderable DB instance options for the specified engine.",
                "operationId": "DescribeOrderableDBInstanceOptions",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "MaxRecords",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "Marker",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " Contains the result of a successful invocation of the <a>DescribeOrderableDBInstanceOptions</a> action. ",
                                    "properties": {
                                        "Marker": {
                                            "description": " An optional pagination token provided by a previous OrderableDBInstanceOptions request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> . ",
                                            "type": "string"
                                        },
                                        "OrderableDBInstanceOptions": {
                                            "description": "An <a>OrderableDBInstanceOption</a> structure containing information about orderable options for the DB instance.",
                                            "items": {
                                                "description": "<p>Contains a list of available options for a DB instance.</p> <p> This data type is used as a response element in the <a>DescribeOrderableDBInstanceOptions</a> action. </p>",
                                                "properties": {
                                                    "AvailabilityZones": {
                                                        "description": "A list of Availability Zones for a DB instance.",
                                                        "items": {
                                                            "description": "<p>Contains Availability Zone information.</p> <p> This data type is used as an element in the following data type:</p> <ul> <li> <p> <a>OrderableDBInstanceOption</a> </p> </li> </ul>",
                                                            "properties": {
                                                                "Name": {
                                                                    "description": "The name of the availability zone.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "DBInstanceClass": {
                                                        "description": "The DB instance class for a DB instance.",
                                                        "type": "string"
                                                    },
                                                    "Engine": {
                                                        "description": "The engine type of a DB instance.",
                                                        "type": "string"
                                                    },
                                                    "EngineVersion": {
                                                        "description": "The engine version of a DB instance.",
                                                        "type": "string"
                                                    },
                                                    "LicenseModel": {
                                                        "description": "The license model for a DB instance.",
                                                        "type": "string"
                                                    },
                                                    "MaxIopsPerDbInstance": {
                                                        "description": "Maximum total provisioned IOPS for a DB instance.",
                                                        "type": "integer"
                                                    },
                                                    "MaxIopsPerGib": {
                                                        "description": "Maximum provisioned IOPS per GiB for a DB instance.",
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "MaxStorageSize": {
                                                        "description": "Maximum storage size for a DB instance.",
                                                        "type": "integer"
                                                    },
                                                    "MinIopsPerDbInstance": {
                                                        "description": "Minimum total provisioned IOPS for a DB instance.",
                                                        "type": "integer"
                                                    },
                                                    "MinIopsPerGib": {
                                                        "description": "Minimum provisioned IOPS per GiB for a DB instance.",
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "MinStorageSize": {
                                                        "description": "Minimum storage size for a DB instance.",
                                                        "type": "integer"
                                                    },
                                                    "MultiAZCapable": {
                                                        "description": "Indicates whether a DB instance is Multi-AZ capable.",
                                                        "type": "boolean"
                                                    },
                                                    "ReadReplicaCapable": {
                                                        "description": "Indicates whether a DB instance can have a Read Replica.",
                                                        "type": "boolean"
                                                    },
                                                    "StorageType": {
                                                        "description": "Indicates the storage type for a DB instance.",
                                                        "type": "string"
                                                    },
                                                    "SupportsEnhancedMonitoring": {
                                                        "description": "Indicates whether a DB instance supports Enhanced Monitoring at intervals from 1 to 60 seconds.",
                                                        "type": "boolean"
                                                    },
                                                    "SupportsIAMDatabaseAuthentication": {
                                                        "description": "Indicates whether a DB instance supports IAM database authentication.",
                                                        "type": "boolean"
                                                    },
                                                    "SupportsIops": {
                                                        "description": "Indicates whether a DB instance supports provisioned IOPS.",
                                                        "type": "boolean"
                                                    },
                                                    "SupportsPerformanceInsights": {
                                                        "description": "True if a DB instance supports Performance Insights, otherwise false.",
                                                        "type": "boolean"
                                                    },
                                                    "SupportsStorageEncryption": {
                                                        "description": "Indicates whether a DB instance supports encrypted storage.",
                                                        "type": "boolean"
                                                    },
                                                    "Vpc": {
                                                        "description": "Indicates whether a DB instance is in a VPC.",
                                                        "type": "boolean"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "DBInstanceClass": {
                                        "description": "The DB instance class filter value. Specify this parameter to show only the available offerings matching the specified DB instance class.",
                                        "type": "string"
                                    },
                                    "Engine": {
                                        "description": "The name of the engine to retrieve DB instance options for.",
                                        "type": "string"
                                    },
                                    "EngineVersion": {
                                        "description": "The engine version filter value. Specify this parameter to show only the available offerings matching the specified engine version.",
                                        "type": "string"
                                    },
                                    "Filters": {
                                        "description": "This parameter is not currently supported.",
                                        "items": {
                                            "description": "This type is not currently supported.",
                                            "properties": {
                                                "Name": {
                                                    "description": "This parameter is not currently supported.",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "This parameter is not currently supported.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "LicenseModel": {
                                        "description": "The license model filter value. Specify this parameter to show only the available offerings matching the specified license model.",
                                        "type": "string"
                                    },
                                    "Marker": {
                                        "description": " An optional pagination token provided by a previous DescribeOrderableDBInstanceOptions request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> . ",
                                        "type": "string"
                                    },
                                    "MaxRecords": {
                                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                                        "type": "integer"
                                    },
                                    "Vpc": {
                                        "description": "The VPC filter value. Specify this parameter to show only the available VPC or non-VPC offerings.",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "Engine"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribePendingMaintenanceActions": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns a list of resources (for example, DB instances) that have at least one pending maintenance action.",
                "operationId": "DescribePendingMaintenanceActions",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Data returned from the <b>DescribePendingMaintenanceActions</b> action.",
                                    "properties": {
                                        "Marker": {
                                            "description": " An optional pagination token provided by a previous <code>DescribePendingMaintenanceActions</code> request. If this parameter is specified, the response includes only records beyond the marker, up to a number of records specified by <code>MaxRecords</code>. ",
                                            "type": "string"
                                        },
                                        "PendingMaintenanceActions": {
                                            "description": "A list of the pending maintenance actions for the resource.",
                                            "items": {
                                                "description": "Describes the pending maintenance actions for a resource.",
                                                "properties": {
                                                    "PendingMaintenanceActionDetails": {
                                                        "description": "A list that provides details about the pending maintenance actions for the resource.",
                                                        "items": {
                                                            "description": "Provides information about a pending maintenance action for a resource.",
                                                            "properties": {
                                                                "Action": {
                                                                    "description": "The type of pending maintenance action that is available for the resource.",
                                                                    "type": "string"
                                                                },
                                                                "AutoAppliedAfterDate": {
                                                                    "description": "The date of the maintenance window when the action is applied. The maintenance action is applied to the resource during its first maintenance window after this date. If this date is specified, any <code>next-maintenance</code> opt-in requests are ignored.",
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                },
                                                                "CurrentApplyDate": {
                                                                    "description": "The effective date when the pending maintenance action is applied to the resource. This date takes into account opt-in requests received from the <a>ApplyPendingMaintenanceAction</a> API, the <code>AutoAppliedAfterDate</code>, and the <code>ForcedApplyDate</code>. This value is blank if an opt-in request has not been received and nothing has been specified as <code>AutoAppliedAfterDate</code> or <code>ForcedApplyDate</code>.",
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                },
                                                                "Description": {
                                                                    "description": "A description providing more detail about the maintenance action.",
                                                                    "type": "string"
                                                                },
                                                                "ForcedApplyDate": {
                                                                    "description": "The date when the maintenance action is automatically applied. The maintenance action is applied to the resource on this date regardless of the maintenance window for the resource. If this date is specified, any <code>immediate</code> opt-in requests are ignored.",
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                },
                                                                "OptInStatus": {
                                                                    "description": "Indicates the type of opt-in request that has been received for the resource.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ResourceIdentifier": {
                                                        "description": "The ARN of the resource that has pending maintenance actions.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The specified resource ID was not found.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "Filters": {
                                        "description": "<p>A filter that specifies one or more resources to return pending maintenance actions for.</p> <p>Supported filters:</p> <ul> <li> <p> <code>db-cluster-id</code> - Accepts DB cluster identifiers and DB cluster Amazon Resource Names (ARNs). The results list will only include pending maintenance actions for the DB clusters identified by these ARNs.</p> </li> <li> <p> <code>db-instance-id</code> - Accepts DB instance identifiers and DB instance ARNs. The results list will only include pending maintenance actions for the DB instances identified by these ARNs.</p> </li> </ul>",
                                        "items": {
                                            "description": "This type is not currently supported.",
                                            "properties": {
                                                "Name": {
                                                    "description": "This parameter is not currently supported.",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "This parameter is not currently supported.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "Marker": {
                                        "description": " An optional pagination token provided by a previous <code>DescribePendingMaintenanceActions</code> request. If this parameter is specified, the response includes only records beyond the marker, up to a number of records specified by <code>MaxRecords</code>. ",
                                        "type": "string"
                                    },
                                    "MaxRecords": {
                                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                                        "type": "integer"
                                    },
                                    "ResourceIdentifier": {
                                        "description": "The ARN of a resource to return pending maintenance actions for.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DescribeValidDBInstanceModifications": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "You can call <a>DescribeValidDBInstanceModifications</a> to learn what modifications you can make to your DB instance. You can use this information when you call <a>ModifyDBInstance</a>. ",
                "operationId": "DescribeValidDBInstanceModifications",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "ValidDBInstanceModificationsMessage": {
                                            "description": "Information about valid modifications that you can make to your DB instance. Contains the result of a successful call to the <a>DescribeValidDBInstanceModifications</a> action. You can use this information when you call <a>ModifyDBInstance</a>. ",
                                            "properties": {
                                                "Storage": {
                                                    "description": "Valid storage options for your DB instance. ",
                                                    "items": {
                                                        "description": "Information about valid modifications that you can make to your DB instance. Contains the result of a successful call to the <a>DescribeValidDBInstanceModifications</a> action. ",
                                                        "properties": {
                                                            "IopsToStorageRatio": {
                                                                "description": "The valid range of Provisioned IOPS to gibibytes of storage multiplier. For example, 3-10, which means that provisioned IOPS can be between 3 and 10 times storage. ",
                                                                "items": {
                                                                    "description": "A range of double values.",
                                                                    "properties": {
                                                                        "From": {
                                                                            "description": "The minimum value in the range.",
                                                                            "format": "double",
                                                                            "type": "number"
                                                                        },
                                                                        "To": {
                                                                            "description": "The maximum value in the range.",
                                                                            "format": "double",
                                                                            "type": "number"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "ProvisionedIops": {
                                                                "description": "The valid range of provisioned IOPS. For example, 1000-20000. ",
                                                                "items": {
                                                                    "description": "A range of integer values.",
                                                                    "properties": {
                                                                        "From": {
                                                                            "description": "The minimum value in the range.",
                                                                            "type": "integer"
                                                                        },
                                                                        "Step": {
                                                                            "description": "The step value for the range. For example, if you have a range of 5,000 to 10,000, with a step value of 1,000, the valid values start at 5,000 and step up by 1,000. Even though 7,500 is within the range, it isn't a valid value for the range. The valid values are 5,000, 6,000, 7,000, 8,000... ",
                                                                            "type": "integer"
                                                                        },
                                                                        "To": {
                                                                            "description": "The maximum value in the range.",
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "StorageSize": {
                                                                "description": "The valid range of storage in gibibytes. For example, 100 to 16384. ",
                                                                "items": {
                                                                    "description": "A range of integer values.",
                                                                    "properties": {
                                                                        "From": {
                                                                            "description": "The minimum value in the range.",
                                                                            "type": "integer"
                                                                        },
                                                                        "Step": {
                                                                            "description": "The step value for the range. For example, if you have a range of 5,000 to 10,000, with a step value of 1,000, the valid values start at 5,000 and step up by 1,000. Even though 7,500 is within the range, it isn't a valid value for the range. The valid values are 5,000, 6,000, 7,000, 8,000... ",
                                                                            "type": "integer"
                                                                        },
                                                                        "To": {
                                                                            "description": "The maximum value in the range.",
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "StorageType": {
                                                                "description": "The valid storage types for your DB instance. For example, gp2, io1. ",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DBInstanceNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBInstanceIdentifier</i> does not refer to an existing DB instance. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidDBInstanceStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " The specified DB instance is not in the <i>available</i> state. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "DBInstanceIdentifier": {
                                        "description": "The customer identifier or the ARN of your DB instance. ",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "DBInstanceIdentifier"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#FailoverDBCluster": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Forces a failover for a DB cluster.</p> <p>A failover for a DB cluster promotes one of the Read Replicas (read-only instances) in the DB cluster to be the primary instance (the cluster writer).</p> <p>Amazon Neptune will automatically fail over to a Read Replica, if one exists, when the primary instance fails. You can force a failover when you want to simulate a failure of a primary instance for testing. Because each instance in a DB cluster has its own endpoint address, you will need to clean up and re-establish any existing connections that use those endpoint addresses when the failover is complete.</p>",
                "operationId": "FailoverDBCluster",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DBCluster": {
                                            "description": "<p>Contains the details of an Amazon Neptune DB cluster. </p> <p>This data type is used as a response element in the <a>DescribeDBClusters</a> action. </p>",
                                            "properties": {
                                                "AllocatedStorage": {
                                                    "description": " <code>AllocatedStorage</code> always returns 1, because Neptune DB cluster storage size is not fixed, but instead automatically adjusts as needed.",
                                                    "type": "integer"
                                                },
                                                "AssociatedRoles": {
                                                    "description": "Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.",
                                                    "items": {
                                                        "description": "Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.",
                                                        "properties": {
                                                            "RoleArn": {
                                                                "description": "The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.",
                                                                "type": "string"
                                                            },
                                                            "Status": {
                                                                "description": "<p>Describes the state of association between the IAM role and the DB cluster. The Status property returns one of the following values:</p> <ul> <li> <p> <code>ACTIVE</code> - the IAM role ARN is associated with the DB cluster and can be used to access other AWS services on your behalf.</p> </li> <li> <p> <code>PENDING</code> - the IAM role ARN is being associated with the DB cluster.</p> </li> <li> <p> <code>INVALID</code> - the IAM role ARN is associated with the DB cluster, but the DB cluster is unable to assume the IAM role in order to access other AWS services on your behalf.</p> </li> </ul>",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "AvailabilityZones": {
                                                    "description": "Provides the list of EC2 Availability Zones that instances in the DB cluster can be created in.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "BackupRetentionPeriod": {
                                                    "description": "Specifies the number of days for which automatic DB snapshots are retained.",
                                                    "type": "integer"
                                                },
                                                "CharacterSetName": {
                                                    "description": "If present, specifies the name of the character set that this cluster is associated with.",
                                                    "type": "string"
                                                },
                                                "CloneGroupId": {
                                                    "description": "Identifies the clone group to which the DB cluster is associated.",
                                                    "type": "string"
                                                },
                                                "ClusterCreateTime": {
                                                    "description": "Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "DBClusterArn": {
                                                    "description": "The Amazon Resource Name (ARN) for the DB cluster.",
                                                    "type": "string"
                                                },
                                                "DBClusterIdentifier": {
                                                    "description": "Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.",
                                                    "type": "string"
                                                },
                                                "DBClusterMembers": {
                                                    "description": "Provides the list of instances that make up the DB cluster.",
                                                    "items": {
                                                        "description": "Contains information about an instance that is part of a DB cluster.",
                                                        "properties": {
                                                            "DBClusterParameterGroupStatus": {
                                                                "description": "Specifies the status of the DB cluster parameter group for this member of the DB cluster.",
                                                                "type": "string"
                                                            },
                                                            "DBInstanceIdentifier": {
                                                                "description": "Specifies the instance identifier for this member of the DB cluster.",
                                                                "type": "string"
                                                            },
                                                            "IsClusterWriter": {
                                                                "description": "Value that is <code>true</code> if the cluster member is the primary instance for the DB cluster and <code>false</code> otherwise.",
                                                                "type": "boolean"
                                                            },
                                                            "PromotionTier": {
                                                                "description": "A value that specifies the order in which a Read Replica is promoted to the primary instance after a failure of the existing primary instance. ",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "DBClusterOptionGroupMemberships": {
                                                    "description": "Provides the list of option group memberships for this DB cluster.",
                                                    "items": {
                                                        "description": "Contains status information for a DB cluster option group.",
                                                        "properties": {
                                                            "DBClusterOptionGroupName": {
                                                                "description": "Specifies the name of the DB cluster option group.",
                                                                "type": "string"
                                                            },
                                                            "Status": {
                                                                "description": "Specifies the status of the DB cluster option group.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "DBClusterParameterGroup": {
                                                    "description": "Specifies the name of the DB cluster parameter group for the DB cluster.",
                                                    "type": "string"
                                                },
                                                "DBSubnetGroup": {
                                                    "description": "Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group.",
                                                    "type": "string"
                                                },
                                                "DatabaseName": {
                                                    "description": "Contains the name of the initial database of this DB cluster that was provided at create time, if one was specified when the DB cluster was created. This same name is returned for the life of the DB cluster.",
                                                    "type": "string"
                                                },
                                                "DbClusterResourceId": {
                                                    "description": "The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.",
                                                    "type": "string"
                                                },
                                                "EarliestRestorableTime": {
                                                    "description": "Specifies the earliest time to which a database can be restored with point-in-time restore.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Endpoint": {
                                                    "description": "Specifies the connection endpoint for the primary instance of the DB cluster.",
                                                    "type": "string"
                                                },
                                                "Engine": {
                                                    "description": "Provides the name of the database engine to be used for this DB cluster.",
                                                    "type": "string"
                                                },
                                                "EngineVersion": {
                                                    "description": "Indicates the database engine version.",
                                                    "type": "string"
                                                },
                                                "HostedZoneId": {
                                                    "description": "Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.",
                                                    "type": "string"
                                                },
                                                "IAMDatabaseAuthenticationEnabled": {
                                                    "description": "True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.",
                                                    "type": "boolean"
                                                },
                                                "KmsKeyId": {
                                                    "description": "If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB cluster.",
                                                    "type": "string"
                                                },
                                                "LatestRestorableTime": {
                                                    "description": "Specifies the latest time to which a database can be restored with point-in-time restore.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "MasterUsername": {
                                                    "description": "Contains the master username for the DB cluster.",
                                                    "type": "string"
                                                },
                                                "MultiAZ": {
                                                    "description": "Specifies whether the DB cluster has instances in multiple Availability Zones.",
                                                    "type": "boolean"
                                                },
                                                "PercentProgress": {
                                                    "description": "Specifies the progress of the operation as a percentage.",
                                                    "type": "string"
                                                },
                                                "Port": {
                                                    "description": "Specifies the port that the database engine is listening on.",
                                                    "type": "integer"
                                                },
                                                "PreferredBackupWindow": {
                                                    "description": "Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. ",
                                                    "type": "string"
                                                },
                                                "PreferredMaintenanceWindow": {
                                                    "description": "Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
                                                    "type": "string"
                                                },
                                                "ReadReplicaIdentifiers": {
                                                    "description": "Contains one or more identifiers of the Read Replicas associated with this DB cluster.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "ReaderEndpoint": {
                                                    "description": "<p>The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances connections across the Read Replicas that are available in a DB cluster. As clients request new connections to the reader endpoint, Neptune distributes the connection requests among the Read Replicas in the DB cluster. This functionality can help balance your read workload across multiple Read Replicas in your DB cluster. </p> <p>If a failover occurs, and the Read Replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Read Replicas in the cluster, you can then reconnect to the reader endpoint.</p>",
                                                    "type": "string"
                                                },
                                                "ReplicationSourceIdentifier": {
                                                    "description": "Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "Specifies the current state of this DB cluster.",
                                                    "type": "string"
                                                },
                                                "StorageEncrypted": {
                                                    "description": "Specifies whether the DB cluster is encrypted.",
                                                    "type": "boolean"
                                                },
                                                "VpcSecurityGroups": {
                                                    "description": "Provides a list of VPC security groups that the DB cluster belongs to.",
                                                    "items": {
                                                        "description": "This data type is used as a response element for queries on VPC security group membership.",
                                                        "properties": {
                                                            "Status": {
                                                                "description": "The status of the VPC security group.",
                                                                "type": "string"
                                                            },
                                                            "VpcSecurityGroupId": {
                                                                "description": "The name of the VPC security group.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DBClusterNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBClusterIdentifier</i> does not refer to an existing DB cluster. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidDBClusterStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The DB cluster is not in a valid state.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidDBInstanceStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " The specified DB instance is not in the <i>available</i> state. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "DBClusterIdentifier": {
                                        "description": "<p>A DB cluster identifier to force a failover for. This parameter is not case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBCluster.</p> </li> </ul>",
                                        "type": "string"
                                    },
                                    "TargetDBInstanceIdentifier": {
                                        "description": "<p>The name of the instance to promote to the primary instance.</p> <p>You must specify the instance identifier for an Read Replica in the DB cluster. For example, <code>mydbcluster-replica1</code>.</p>",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListTagsForResource": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Lists all tags on an Amazon Neptune resource.",
                "operationId": "ListTagsForResource",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "<p/>",
                                    "properties": {
                                        "TagList": {
                                            "description": "List of tags returned by the ListTagsForResource operation.",
                                            "items": {
                                                "description": "Metadata assigned to an Amazon Neptune resource consisting of a key-value pair.",
                                                "properties": {
                                                    "Key": {
                                                        "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DBInstanceNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBInstanceIdentifier</i> does not refer to an existing DB instance. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "DBSnapshotNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBSnapshotIdentifier</i> does not refer to an existing DB snapshot. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "482": {
                        "description": "DBClusterNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBClusterIdentifier</i> does not refer to an existing DB cluster. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "Filters": {
                                        "description": "This parameter is not currently supported.",
                                        "items": {
                                            "description": "This type is not currently supported.",
                                            "properties": {
                                                "Name": {
                                                    "description": "This parameter is not currently supported.",
                                                    "type": "string"
                                                },
                                                "Values": {
                                                    "description": "This parameter is not currently supported.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "Name",
                                                "Values"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "ResourceName": {
                                        "description": "The Amazon Neptune resource with tags to be listed. This value is an Amazon Resource Name (ARN). For information about creating an ARN, see <a href=\"http://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing\"> Constructing an Amazon Resource Name (ARN)</a>.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "ResourceName"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ModifyDBCluster": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Modify a setting for a DB cluster. You can change one or more database configuration parameters by specifying these parameters and the new values in the request. ",
                "operationId": "ModifyDBCluster",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DBCluster": {
                                            "description": "<p>Contains the details of an Amazon Neptune DB cluster. </p> <p>This data type is used as a response element in the <a>DescribeDBClusters</a> action. </p>",
                                            "properties": {
                                                "AllocatedStorage": {
                                                    "description": " <code>AllocatedStorage</code> always returns 1, because Neptune DB cluster storage size is not fixed, but instead automatically adjusts as needed.",
                                                    "type": "integer"
                                                },
                                                "AssociatedRoles": {
                                                    "description": "Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.",
                                                    "items": {
                                                        "description": "Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.",
                                                        "properties": {
                                                            "RoleArn": {
                                                                "description": "The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.",
                                                                "type": "string"
                                                            },
                                                            "Status": {
                                                                "description": "<p>Describes the state of association between the IAM role and the DB cluster. The Status property returns one of the following values:</p> <ul> <li> <p> <code>ACTIVE</code> - the IAM role ARN is associated with the DB cluster and can be used to access other AWS services on your behalf.</p> </li> <li> <p> <code>PENDING</code> - the IAM role ARN is being associated with the DB cluster.</p> </li> <li> <p> <code>INVALID</code> - the IAM role ARN is associated with the DB cluster, but the DB cluster is unable to assume the IAM role in order to access other AWS services on your behalf.</p> </li> </ul>",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "AvailabilityZones": {
                                                    "description": "Provides the list of EC2 Availability Zones that instances in the DB cluster can be created in.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "BackupRetentionPeriod": {
                                                    "description": "Specifies the number of days for which automatic DB snapshots are retained.",
                                                    "type": "integer"
                                                },
                                                "CharacterSetName": {
                                                    "description": "If present, specifies the name of the character set that this cluster is associated with.",
                                                    "type": "string"
                                                },
                                                "CloneGroupId": {
                                                    "description": "Identifies the clone group to which the DB cluster is associated.",
                                                    "type": "string"
                                                },
                                                "ClusterCreateTime": {
                                                    "description": "Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "DBClusterArn": {
                                                    "description": "The Amazon Resource Name (ARN) for the DB cluster.",
                                                    "type": "string"
                                                },
                                                "DBClusterIdentifier": {
                                                    "description": "Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.",
                                                    "type": "string"
                                                },
                                                "DBClusterMembers": {
                                                    "description": "Provides the list of instances that make up the DB cluster.",
                                                    "items": {
                                                        "description": "Contains information about an instance that is part of a DB cluster.",
                                                        "properties": {
                                                            "DBClusterParameterGroupStatus": {
                                                                "description": "Specifies the status of the DB cluster parameter group for this member of the DB cluster.",
                                                                "type": "string"
                                                            },
                                                            "DBInstanceIdentifier": {
                                                                "description": "Specifies the instance identifier for this member of the DB cluster.",
                                                                "type": "string"
                                                            },
                                                            "IsClusterWriter": {
                                                                "description": "Value that is <code>true</code> if the cluster member is the primary instance for the DB cluster and <code>false</code> otherwise.",
                                                                "type": "boolean"
                                                            },
                                                            "PromotionTier": {
                                                                "description": "A value that specifies the order in which a Read Replica is promoted to the primary instance after a failure of the existing primary instance. ",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "DBClusterOptionGroupMemberships": {
                                                    "description": "Provides the list of option group memberships for this DB cluster.",
                                                    "items": {
                                                        "description": "Contains status information for a DB cluster option group.",
                                                        "properties": {
                                                            "DBClusterOptionGroupName": {
                                                                "description": "Specifies the name of the DB cluster option group.",
                                                                "type": "string"
                                                            },
                                                            "Status": {
                                                                "description": "Specifies the status of the DB cluster option group.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "DBClusterParameterGroup": {
                                                    "description": "Specifies the name of the DB cluster parameter group for the DB cluster.",
                                                    "type": "string"
                                                },
                                                "DBSubnetGroup": {
                                                    "description": "Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group.",
                                                    "type": "string"
                                                },
                                                "DatabaseName": {
                                                    "description": "Contains the name of the initial database of this DB cluster that was provided at create time, if one was specified when the DB cluster was created. This same name is returned for the life of the DB cluster.",
                                                    "type": "string"
                                                },
                                                "DbClusterResourceId": {
                                                    "description": "The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.",
                                                    "type": "string"
                                                },
                                                "EarliestRestorableTime": {
                                                    "description": "Specifies the earliest time to which a database can be restored with point-in-time restore.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Endpoint": {
                                                    "description": "Specifies the connection endpoint for the primary instance of the DB cluster.",
                                                    "type": "string"
                                                },
                                                "Engine": {
                                                    "description": "Provides the name of the database engine to be used for this DB cluster.",
                                                    "type": "string"
                                                },
                                                "EngineVersion": {
                                                    "description": "Indicates the database engine version.",
                                                    "type": "string"
                                                },
                                                "HostedZoneId": {
                                                    "description": "Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.",
                                                    "type": "string"
                                                },
                                                "IAMDatabaseAuthenticationEnabled": {
                                                    "description": "True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.",
                                                    "type": "boolean"
                                                },
                                                "KmsKeyId": {
                                                    "description": "If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB cluster.",
                                                    "type": "string"
                                                },
                                                "LatestRestorableTime": {
                                                    "description": "Specifies the latest time to which a database can be restored with point-in-time restore.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "MasterUsername": {
                                                    "description": "Contains the master username for the DB cluster.",
                                                    "type": "string"
                                                },
                                                "MultiAZ": {
                                                    "description": "Specifies whether the DB cluster has instances in multiple Availability Zones.",
                                                    "type": "boolean"
                                                },
                                                "PercentProgress": {
                                                    "description": "Specifies the progress of the operation as a percentage.",
                                                    "type": "string"
                                                },
                                                "Port": {
                                                    "description": "Specifies the port that the database engine is listening on.",
                                                    "type": "integer"
                                                },
                                                "PreferredBackupWindow": {
                                                    "description": "Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. ",
                                                    "type": "string"
                                                },
                                                "PreferredMaintenanceWindow": {
                                                    "description": "Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
                                                    "type": "string"
                                                },
                                                "ReadReplicaIdentifiers": {
                                                    "description": "Contains one or more identifiers of the Read Replicas associated with this DB cluster.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "ReaderEndpoint": {
                                                    "description": "<p>The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances connections across the Read Replicas that are available in a DB cluster. As clients request new connections to the reader endpoint, Neptune distributes the connection requests among the Read Replicas in the DB cluster. This functionality can help balance your read workload across multiple Read Replicas in your DB cluster. </p> <p>If a failover occurs, and the Read Replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Read Replicas in the cluster, you can then reconnect to the reader endpoint.</p>",
                                                    "type": "string"
                                                },
                                                "ReplicationSourceIdentifier": {
                                                    "description": "Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "Specifies the current state of this DB cluster.",
                                                    "type": "string"
                                                },
                                                "StorageEncrypted": {
                                                    "description": "Specifies whether the DB cluster is encrypted.",
                                                    "type": "boolean"
                                                },
                                                "VpcSecurityGroups": {
                                                    "description": "Provides a list of VPC security groups that the DB cluster belongs to.",
                                                    "items": {
                                                        "description": "This data type is used as a response element for queries on VPC security group membership.",
                                                        "properties": {
                                                            "Status": {
                                                                "description": "The status of the VPC security group.",
                                                                "type": "string"
                                                            },
                                                            "VpcSecurityGroupId": {
                                                                "description": "The name of the VPC security group.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DBClusterNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBClusterIdentifier</i> does not refer to an existing DB cluster. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidDBClusterStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The DB cluster is not in a valid state.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "482": {
                        "description": "StorageQuotaExceededFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Request would result in user exceeding the allowed amount of storage available across all DB instances.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "483": {
                        "description": "DBSubnetGroupNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "484": {
                        "description": "InvalidVPCNetworkStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "DB subnet group does not cover all Availability Zones after it is created because users' change.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "485": {
                        "description": "InvalidDBSubnetGroupStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The DB subnet group cannot be deleted because it is in use.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "486": {
                        "description": "InvalidSubnet",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The requested subnet is invalid, or multiple subnets were requested that are not all in a common VPC.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "487": {
                        "description": "DBClusterParameterGroupNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBClusterParameterGroupName</i> does not refer to an existing DB Cluster parameter group. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "488": {
                        "description": "InvalidDBSecurityGroupStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The state of the DB security group does not allow deletion.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "489": {
                        "description": "InvalidDBInstanceStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " The specified DB instance is not in the <i>available</i> state. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "490": {
                        "description": "DBClusterAlreadyExistsFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "User already has a DB cluster with the given identifier.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "ApplyImmediately": {
                                        "description": "<p>A value that specifies whether the modifications in this request and any pending modifications are asynchronously applied as soon as possible, regardless of the <code>PreferredMaintenanceWindow</code> setting for the DB cluster. If this parameter is set to <code>false</code>, changes to the DB cluster are applied during the next maintenance window.</p> <p>The <code>ApplyImmediately</code> parameter only affects the <code>NewDBClusterIdentifier</code> and <code>MasterUserPassword</code> values. If you set the <code>ApplyImmediately</code> parameter value to false, then changes to the <code>NewDBClusterIdentifier</code> and <code>MasterUserPassword</code> values are applied during the next maintenance window. All other changes are applied immediately, regardless of the value of the <code>ApplyImmediately</code> parameter.</p> <p>Default: <code>false</code> </p>",
                                        "type": "boolean"
                                    },
                                    "BackupRetentionPeriod": {
                                        "description": "<p>The number of days for which automated backups are retained. You must specify a minimum value of 1.</p> <p>Default: 1</p> <p>Constraints:</p> <ul> <li> <p>Must be a value from 1 to 35</p> </li> </ul>",
                                        "type": "integer"
                                    },
                                    "DBClusterIdentifier": {
                                        "description": "<p>The DB cluster identifier for the cluster being modified. This parameter is not case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBCluster.</p> </li> </ul>",
                                        "type": "string"
                                    },
                                    "DBClusterParameterGroupName": {
                                        "description": "The name of the DB cluster parameter group to use for the DB cluster.",
                                        "type": "string"
                                    },
                                    "EnableIAMDatabaseAuthentication": {
                                        "description": "<p>True to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts, and otherwise false.</p> <p>Default: <code>false</code> </p>",
                                        "type": "boolean"
                                    },
                                    "EngineVersion": {
                                        "description": "<p>The version number of the database engine to which you want to upgrade. Changing this parameter results in an outage. The change is applied during the next maintenance window unless the ApplyImmediately parameter is set to true.</p> <p>For a list of valid engine versions, see <a>CreateDBInstance</a>, or call <a>DescribeDBEngineVersions</a>.</p>",
                                        "type": "string"
                                    },
                                    "MasterUserPassword": {
                                        "description": "<p>The new password for the master database user. This password can contain any printable ASCII character except \"/\", \"\"\", or \"@\".</p> <p>Constraints: Must contain from 8 to 41 characters.</p>",
                                        "type": "string"
                                    },
                                    "NewDBClusterIdentifier": {
                                        "description": "<p>The new DB cluster identifier for the DB cluster when renaming a DB cluster. This value is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens</p> </li> <li> <p>The first character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-cluster2</code> </p>",
                                        "type": "string"
                                    },
                                    "OptionGroupName": {
                                        "description": "<p>A value that indicates that the DB cluster should be associated with the specified option group. Changing this parameter doesn't result in an outage except in the following case, and the change is applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is set to <code>true</code> for this request. If the parameter change results in an option group that enables OEM, this change can cause a brief (sub-second) period during which new connections are rejected but existing connections are not interrupted. </p> <p>Permanent options can't be removed from an option group. The option group can't be removed from a DB cluster once it is associated with a DB cluster.</p>",
                                        "type": "string"
                                    },
                                    "Port": {
                                        "description": "<p>The port number on which the DB cluster accepts connections.</p> <p>Constraints: Value must be <code>1150-65535</code> </p> <p>Default: The same port as the original DB cluster.</p>",
                                        "type": "integer"
                                    },
                                    "PreferredBackupWindow": {
                                        "description": "<p>The daily time range during which automated backups are created if automated backups are enabled, using the <code>BackupRetentionPeriod</code> parameter. </p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region. </p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred maintenance window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul>",
                                        "type": "string"
                                    },
                                    "PreferredMaintenanceWindow": {
                                        "description": "<p>The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).</p> <p>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region, occurring on a random day of the week. </p> <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</p> <p>Constraints: Minimum 30-minute window.</p>",
                                        "type": "string"
                                    },
                                    "VpcSecurityGroupIds": {
                                        "description": "A list of VPC security groups that the DB cluster will belong to.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "DBClusterIdentifier"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ModifyDBClusterParameterGroup": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p> Modifies the parameters of a DB cluster parameter group. To modify more than one parameter, submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>, and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single request. </p> <note> <p>Changes to dynamic parameters are applied immediately. Changes to static parameters require a reboot without failover to the DB cluster associated with the parameter group before the change can take effect.</p> </note> <important> <p>After you create a DB cluster parameter group, you should wait at least 5 minutes before creating your first DB cluster that uses that DB cluster parameter group as the default parameter group. This allows Amazon Neptune to fully complete the create action before the parameter group is used as the default for a new DB cluster. This is especially important for parameters that are critical when creating the default database for a DB cluster, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the Amazon Neptune console or the <a>DescribeDBClusterParameters</a> command to verify that your DB cluster parameter group has been created or modified.</p> </important>",
                "operationId": "ModifyDBClusterParameterGroup",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "<p/>",
                                    "properties": {
                                        "DBClusterParameterGroupName": {
                                            "description": "<p>The name of the DB cluster parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters or numbers.</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <note> <p>This value is stored as a lowercase string.</p> </note>",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DBParameterGroupNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBParameterGroupName</i> does not refer to an existing DB parameter group. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidDBParameterGroupStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The DB parameter group is in use or is in an invalid state. If you are attempting to delete the parameter group, you cannot delete it when the parameter group is in this state.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "DBClusterParameterGroupName": {
                                        "description": "The name of the DB cluster parameter group to modify.",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "A list of parameters in the DB cluster parameter group to modify.",
                                        "items": {
                                            "description": "<p> This data type is used as a request parameter in the <a>ModifyDBParameterGroup</a> and <a>ResetDBParameterGroup</a> actions. </p> <p>This data type is used as a response element in the <a>DescribeEngineDefaultParameters</a> and <a>DescribeDBParameters</a> actions.</p>",
                                            "properties": {
                                                "AllowedValues": {
                                                    "description": "Specifies the valid range of values for the parameter.",
                                                    "type": "string"
                                                },
                                                "ApplyMethod": {
                                                    "description": "Indicates when to apply parameter updates.",
                                                    "enum": [
                                                        "immediate",
                                                        "pending-reboot"
                                                    ],
                                                    "type": "string"
                                                },
                                                "ApplyType": {
                                                    "description": "Specifies the engine specific parameters type.",
                                                    "type": "string"
                                                },
                                                "DataType": {
                                                    "description": "Specifies the valid data type for the parameter.",
                                                    "type": "string"
                                                },
                                                "Description": {
                                                    "description": "Provides a description of the parameter.",
                                                    "type": "string"
                                                },
                                                "IsModifiable": {
                                                    "description": " Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed. ",
                                                    "type": "boolean"
                                                },
                                                "MinimumEngineVersion": {
                                                    "description": "The earliest engine version to which the parameter can apply.",
                                                    "type": "string"
                                                },
                                                "ParameterName": {
                                                    "description": "Specifies the name of the parameter.",
                                                    "type": "string"
                                                },
                                                "ParameterValue": {
                                                    "description": "Specifies the value of the parameter.",
                                                    "type": "string"
                                                },
                                                "Source": {
                                                    "description": "Indicates the source of the parameter value.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "DBClusterParameterGroupName",
                                    "Parameters"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ModifyDBClusterSnapshotAttribute": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Adds an attribute and values to, or removes an attribute and values from, a manual DB cluster snapshot.</p> <p>To share a manual DB cluster snapshot with other AWS accounts, specify <code>restore</code> as the <code>AttributeName</code> and use the <code>ValuesToAdd</code> parameter to add a list of IDs of the AWS accounts that are authorized to restore the manual DB cluster snapshot. Use the value <code>all</code> to make the manual DB cluster snapshot public, which means that it can be copied or restored by all AWS accounts. Do not add the <code>all</code> value for any manual DB cluster snapshots that contain private information that you don't want available to all AWS accounts. If a manual DB cluster snapshot is encrypted, it can be shared, but only by specifying a list of authorized AWS account IDs for the <code>ValuesToAdd</code> parameter. You can't use <code>all</code> as a value for that parameter in this case.</p> <p>To view which AWS accounts have access to copy or restore a manual DB cluster snapshot, or whether a manual DB cluster snapshot public or private, use the <a>DescribeDBClusterSnapshotAttributes</a> API action.</p>",
                "operationId": "ModifyDBClusterSnapshotAttribute",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DBClusterSnapshotAttributesResult": {
                                            "description": "<p>Contains the results of a successful call to the <a>DescribeDBClusterSnapshotAttributes</a> API action.</p> <p>Manual DB cluster snapshot attributes are used to authorize other AWS accounts to copy or restore a manual DB cluster snapshot. For more information, see the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>",
                                            "properties": {
                                                "DBClusterSnapshotAttributes": {
                                                    "description": "The list of attributes and values for the manual DB cluster snapshot.",
                                                    "items": {
                                                        "description": "<p>Contains the name and values of a manual DB cluster snapshot attribute.</p> <p>Manual DB cluster snapshot attributes are used to authorize other AWS accounts to restore a manual DB cluster snapshot. For more information, see the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>",
                                                        "properties": {
                                                            "AttributeName": {
                                                                "description": "<p>The name of the manual DB cluster snapshot attribute.</p> <p>The attribute named <code>restore</code> refers to the list of AWS accounts that have permission to copy or restore the manual DB cluster snapshot. For more information, see the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>",
                                                                "type": "string"
                                                            },
                                                            "AttributeValues": {
                                                                "description": "<p>The value(s) for the manual DB cluster snapshot attribute.</p> <p>If the <code>AttributeName</code> field is set to <code>restore</code>, then this element returns a list of IDs of the AWS accounts that are authorized to copy or restore the manual DB cluster snapshot. If a value of <code>all</code> is in the list, then the manual DB cluster snapshot is public and available for any AWS account to copy or restore.</p>",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "DBClusterSnapshotIdentifier": {
                                                    "description": "The identifier of the manual DB cluster snapshot that the attributes apply to.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DBClusterSnapshotNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidDBClusterSnapshotStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The supplied value is not a valid DB cluster snapshot state.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "482": {
                        "description": "SharedSnapshotQuotaExceededFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "You have exceeded the maximum number of accounts that you can share a manual DB snapshot with.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "AttributeName": {
                                        "description": "<p>The name of the DB cluster snapshot attribute to modify.</p> <p>To manage authorization for other AWS accounts to copy or restore a manual DB cluster snapshot, set this value to <code>restore</code>.</p>",
                                        "type": "string"
                                    },
                                    "DBClusterSnapshotIdentifier": {
                                        "description": "The identifier for the DB cluster snapshot to modify the attributes for.",
                                        "type": "string"
                                    },
                                    "ValuesToAdd": {
                                        "description": "<p>A list of DB cluster snapshot attributes to add to the attribute specified by <code>AttributeName</code>.</p> <p>To authorize other AWS accounts to copy or restore a manual DB cluster snapshot, set this list to include one or more AWS account IDs, or <code>all</code> to make the manual DB cluster snapshot restorable by any AWS account. Do not add the <code>all</code> value for any manual DB cluster snapshots that contain private information that you don't want available to all AWS accounts.</p>",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "ValuesToRemove": {
                                        "description": "<p>A list of DB cluster snapshot attributes to remove from the attribute specified by <code>AttributeName</code>.</p> <p>To remove authorization for other AWS accounts to copy or restore a manual DB cluster snapshot, set this list to include one or more AWS account identifiers, or <code>all</code> to remove authorization for any AWS account to copy or restore the DB cluster snapshot. If you specify <code>all</code>, an AWS account whose account ID is explicitly added to the <code>restore</code> attribute can still copy or restore a manual DB cluster snapshot.</p>",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "DBClusterSnapshotIdentifier",
                                    "AttributeName"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ModifyDBInstance": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Modifies settings for a DB instance. You can change one or more database configuration parameters by specifying these parameters and the new values in the request. To learn what modifications you can make to your DB instance, call <a>DescribeValidDBInstanceModifications</a> before you call <a>ModifyDBInstance</a>. ",
                "operationId": "ModifyDBInstance",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DBInstance": {
                                            "description": "<p>Contains the details of an Amazon Neptune DB instance. </p> <p>This data type is used as a response element in the <a>DescribeDBInstances</a> action. </p>",
                                            "properties": {
                                                "AllocatedStorage": {
                                                    "description": "Specifies the allocated storage size specified in gibibytes.",
                                                    "type": "integer"
                                                },
                                                "AutoMinorVersionUpgrade": {
                                                    "description": "Indicates that minor version patches are applied automatically.",
                                                    "type": "boolean"
                                                },
                                                "AvailabilityZone": {
                                                    "description": "Specifies the name of the Availability Zone the DB instance is located in.",
                                                    "type": "string"
                                                },
                                                "BackupRetentionPeriod": {
                                                    "description": "Specifies the number of days for which automatic DB snapshots are retained.",
                                                    "type": "integer"
                                                },
                                                "CACertificateIdentifier": {
                                                    "description": "The identifier of the CA certificate for this DB instance.",
                                                    "type": "string"
                                                },
                                                "CharacterSetName": {
                                                    "description": "If present, specifies the name of the character set that this instance is associated with.",
                                                    "type": "string"
                                                },
                                                "CopyTagsToSnapshot": {
                                                    "description": "Specifies whether tags are copied from the DB instance to snapshots of the DB instance.",
                                                    "type": "boolean"
                                                },
                                                "DBClusterIdentifier": {
                                                    "description": "If the DB instance is a member of a DB cluster, contains the name of the DB cluster that the DB instance is a member of.",
                                                    "type": "string"
                                                },
                                                "DBInstanceArn": {
                                                    "description": "The Amazon Resource Name (ARN) for the DB instance.",
                                                    "type": "string"
                                                },
                                                "DBInstanceClass": {
                                                    "description": "Contains the name of the compute and memory capacity class of the DB instance.",
                                                    "type": "string"
                                                },
                                                "DBInstanceIdentifier": {
                                                    "description": "Contains a user-supplied database identifier. This identifier is the unique key that identifies a DB instance.",
                                                    "type": "string"
                                                },
                                                "DBInstanceStatus": {
                                                    "description": "Specifies the current state of this database.",
                                                    "type": "string"
                                                },
                                                "DBName": {
                                                    "description": "The database name.",
                                                    "type": "string"
                                                },
                                                "DBParameterGroups": {
                                                    "description": "Provides the list of DB parameter groups applied to this DB instance.",
                                                    "items": {
                                                        "description": "<p>The status of the DB parameter group.</p> <p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>CreateDBInstance</a> </p> </li> <li> <p> <a>DeleteDBInstance</a> </p> </li> <li> <p> <a>ModifyDBInstance</a> </p> </li> <li> <p> <a>RebootDBInstance</a> </p> </li> </ul>",
                                                        "properties": {
                                                            "DBParameterGroupName": {
                                                                "description": "The name of the DP parameter group.",
                                                                "type": "string"
                                                            },
                                                            "ParameterApplyStatus": {
                                                                "description": "The status of parameter updates.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "DBSecurityGroups": {
                                                    "description": " Provides List of DB security group elements containing only <code>DBSecurityGroup.Name</code> and <code>DBSecurityGroup.Status</code> subelements. ",
                                                    "items": {
                                                        "description": "<p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>ModifyDBInstance</a> </p> </li> <li> <p> <a>RebootDBInstance</a> </p> </li> </ul>",
                                                        "properties": {
                                                            "DBSecurityGroupName": {
                                                                "description": "The name of the DB security group.",
                                                                "type": "string"
                                                            },
                                                            "Status": {
                                                                "description": "The status of the DB security group.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "DBSubnetGroup": {
                                                    "description": "Specifies information on the subnet group associated with the DB instance, including the name, description, and subnets in the subnet group.",
                                                    "properties": {
                                                        "DBSubnetGroupArn": {
                                                            "description": "The Amazon Resource Name (ARN) for the DB subnet group.",
                                                            "type": "string"
                                                        },
                                                        "DBSubnetGroupDescription": {
                                                            "description": "Provides the description of the DB subnet group.",
                                                            "type": "string"
                                                        },
                                                        "DBSubnetGroupName": {
                                                            "description": "The name of the DB subnet group.",
                                                            "type": "string"
                                                        },
                                                        "SubnetGroupStatus": {
                                                            "description": "Provides the status of the DB subnet group.",
                                                            "type": "string"
                                                        },
                                                        "Subnets": {
                                                            "description": " Contains a list of <a>Subnet</a> elements. ",
                                                            "items": {
                                                                "description": " This data type is used as a response element in the <a>DescribeDBSubnetGroups</a> action. ",
                                                                "properties": {
                                                                    "SubnetAvailabilityZone": {
                                                                        "description": "<p>Contains Availability Zone information.</p> <p> This data type is used as an element in the following data type:</p> <ul> <li> <p> <a>OrderableDBInstanceOption</a> </p> </li> </ul>",
                                                                        "properties": {
                                                                            "Name": {
                                                                                "description": "The name of the availability zone.",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "SubnetIdentifier": {
                                                                        "description": "Specifies the identifier of the subnet.",
                                                                        "type": "string"
                                                                    },
                                                                    "SubnetStatus": {
                                                                        "description": "Specifies the status of the subnet.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "VpcId": {
                                                            "description": "Provides the VpcId of the DB subnet group.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "DbInstancePort": {
                                                    "description": "Specifies the port that the DB instance listens on. If the DB instance is part of a DB cluster, this can be a different port than the DB cluster port.",
                                                    "type": "integer"
                                                },
                                                "DbiResourceId": {
                                                    "description": "The AWS Region-unique, immutable identifier for the DB instance. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.",
                                                    "type": "string"
                                                },
                                                "DomainMemberships": {
                                                    "description": "Not supported",
                                                    "items": {
                                                        "description": "An Active Directory Domain membership record associated with the DB instance.",
                                                        "properties": {
                                                            "Domain": {
                                                                "description": "The identifier of the Active Directory Domain.",
                                                                "type": "string"
                                                            },
                                                            "FQDN": {
                                                                "description": "The fully qualified domain name of the Active Directory Domain.",
                                                                "type": "string"
                                                            },
                                                            "IAMRoleName": {
                                                                "description": "The name of the IAM role to be used when making API calls to the Directory Service.",
                                                                "type": "string"
                                                            },
                                                            "Status": {
                                                                "description": "The status of the DB instance's Active Directory Domain membership, such as joined, pending-join, failed etc).",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "EnabledCloudwatchLogsExports": {
                                                    "description": "A list of log types that this DB instance is configured to export to CloudWatch Logs.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "Endpoint": {
                                                    "description": "Specifies the connection endpoint.",
                                                    "properties": {
                                                        "Address": {
                                                            "description": "Specifies the DNS address of the DB instance.",
                                                            "type": "string"
                                                        },
                                                        "HostedZoneId": {
                                                            "description": "Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.",
                                                            "type": "string"
                                                        },
                                                        "Port": {
                                                            "description": "Specifies the port that the database engine is listening on.",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Engine": {
                                                    "description": "Provides the name of the database engine to be used for this DB instance.",
                                                    "type": "string"
                                                },
                                                "EngineVersion": {
                                                    "description": "Indicates the database engine version.",
                                                    "type": "string"
                                                },
                                                "EnhancedMonitoringResourceArn": {
                                                    "description": "The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the Enhanced Monitoring metrics data for the DB instance.",
                                                    "type": "string"
                                                },
                                                "IAMDatabaseAuthenticationEnabled": {
                                                    "description": "True if AWS Identity and Access Management (IAM) authentication is enabled, and otherwise false.",
                                                    "type": "boolean"
                                                },
                                                "InstanceCreateTime": {
                                                    "description": "Provides the date and time the DB instance was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Iops": {
                                                    "description": "Specifies the Provisioned IOPS (I/O operations per second) value.",
                                                    "type": "integer"
                                                },
                                                "KmsKeyId": {
                                                    "description": " If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB instance. ",
                                                    "type": "string"
                                                },
                                                "LatestRestorableTime": {
                                                    "description": "Specifies the latest time to which a database can be restored with point-in-time restore.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "LicenseModel": {
                                                    "description": "License model information for this DB instance.",
                                                    "type": "string"
                                                },
                                                "MasterUsername": {
                                                    "description": "Contains the master username for the DB instance.",
                                                    "type": "string"
                                                },
                                                "MonitoringInterval": {
                                                    "description": "The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance.",
                                                    "type": "integer"
                                                },
                                                "MonitoringRoleArn": {
                                                    "description": "The ARN for the IAM role that permits Neptune to send Enhanced Monitoring metrics to Amazon CloudWatch Logs.",
                                                    "type": "string"
                                                },
                                                "MultiAZ": {
                                                    "description": "Specifies if the DB instance is a Multi-AZ deployment.",
                                                    "type": "boolean"
                                                },
                                                "OptionGroupMemberships": {
                                                    "description": "Provides the list of option group memberships for this DB instance.",
                                                    "items": {
                                                        "description": "Provides information on the option groups the DB instance is a member of.",
                                                        "properties": {
                                                            "OptionGroupName": {
                                                                "description": "The name of the option group that the instance belongs to.",
                                                                "type": "string"
                                                            },
                                                            "Status": {
                                                                "description": "The status of the DB instance's option group membership. Valid values are: <code>in-sync</code>, <code>pending-apply</code>, <code>pending-removal</code>, <code>pending-maintenance-apply</code>, <code>pending-maintenance-removal</code>, <code>applying</code>, <code>removing</code>, and <code>failed</code>. ",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "PendingModifiedValues": {
                                                    "description": "Specifies that changes to the DB instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements.",
                                                    "properties": {
                                                        "AllocatedStorage": {
                                                            "description": " Contains the new <code>AllocatedStorage</code> size for the DB instance that will be applied or is currently being applied. ",
                                                            "type": "integer"
                                                        },
                                                        "BackupRetentionPeriod": {
                                                            "description": "Specifies the pending number of days for which automated backups are retained.",
                                                            "type": "integer"
                                                        },
                                                        "CACertificateIdentifier": {
                                                            "description": "Specifies the identifier of the CA certificate for the DB instance.",
                                                            "type": "string"
                                                        },
                                                        "DBInstanceClass": {
                                                            "description": " Contains the new <code>DBInstanceClass</code> for the DB instance that will be applied or is currently being applied. ",
                                                            "type": "string"
                                                        },
                                                        "DBInstanceIdentifier": {
                                                            "description": " Contains the new <code>DBInstanceIdentifier</code> for the DB instance that will be applied or is currently being applied. ",
                                                            "type": "string"
                                                        },
                                                        "DBSubnetGroupName": {
                                                            "description": "The new DB subnet group for the DB instance. ",
                                                            "type": "string"
                                                        },
                                                        "EngineVersion": {
                                                            "description": "Indicates the database engine version.",
                                                            "type": "string"
                                                        },
                                                        "Iops": {
                                                            "description": "Specifies the new Provisioned IOPS value for the DB instance that will be applied or is currently being applied.",
                                                            "type": "integer"
                                                        },
                                                        "LicenseModel": {
                                                            "description": "<p>The license model for the DB instance.</p> <p>Valid values: <code>license-included</code> | <code>bring-your-own-license</code> | <code>general-public-license</code> </p>",
                                                            "type": "string"
                                                        },
                                                        "MasterUserPassword": {
                                                            "description": "Contains the pending or currently-in-progress change of the master credentials for the DB instance.",
                                                            "type": "string"
                                                        },
                                                        "MultiAZ": {
                                                            "description": "Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.",
                                                            "type": "boolean"
                                                        },
                                                        "PendingCloudwatchLogsExports": {
                                                            "description": "A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated.",
                                                            "properties": {
                                                                "LogTypesToDisable": {
                                                                    "description": "Log types that are in the process of being enabled. After they are enabled, these log types are exported to CloudWatch Logs.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "LogTypesToEnable": {
                                                                    "description": "Log types that are in the process of being deactivated. After they are deactivated, these log types aren't exported to CloudWatch Logs.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "Port": {
                                                            "description": "Specifies the pending port for the DB instance.",
                                                            "type": "integer"
                                                        },
                                                        "StorageType": {
                                                            "description": "Specifies the storage type to be associated with the DB instance.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "PerformanceInsightsEnabled": {
                                                    "description": "True if Performance Insights is enabled for the DB instance, and otherwise false.",
                                                    "type": "boolean"
                                                },
                                                "PerformanceInsightsKMSKeyId": {
                                                    "description": "The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.",
                                                    "type": "string"
                                                },
                                                "PreferredBackupWindow": {
                                                    "description": " Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. ",
                                                    "type": "string"
                                                },
                                                "PreferredMaintenanceWindow": {
                                                    "description": "Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
                                                    "type": "string"
                                                },
                                                "PromotionTier": {
                                                    "description": "A value that specifies the order in which a Read Replica is promoted to the primary instance after a failure of the existing primary instance. ",
                                                    "type": "integer"
                                                },
                                                "PubliclyAccessible": {
                                                    "description": "This parameter is not supported.",
                                                    "type": "boolean"
                                                },
                                                "ReadReplicaDBClusterIdentifiers": {
                                                    "description": "Contains one or more identifiers of DB clusters that are Read Replicas of this DB instance.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "ReadReplicaDBInstanceIdentifiers": {
                                                    "description": "Contains one or more identifiers of the Read Replicas associated with this DB instance.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "ReadReplicaSourceDBInstanceIdentifier": {
                                                    "description": "Contains the identifier of the source DB instance if this DB instance is a Read Replica.",
                                                    "type": "string"
                                                },
                                                "SecondaryAvailabilityZone": {
                                                    "description": "If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support.",
                                                    "type": "string"
                                                },
                                                "StatusInfos": {
                                                    "description": "The status of a Read Replica. If the instance is not a Read Replica, this is blank.",
                                                    "items": {
                                                        "description": "Provides a list of status information for a DB instance.",
                                                        "properties": {
                                                            "Message": {
                                                                "description": "Details of the error if there is an error for the instance. If the instance is not in an error state, this value is blank.",
                                                                "type": "string"
                                                            },
                                                            "Normal": {
                                                                "description": "Boolean value that is true if the instance is operating normally, or false if the instance is in an error state.",
                                                                "type": "boolean"
                                                            },
                                                            "Status": {
                                                                "description": "Status of the DB instance. For a StatusType of read replica, the values can be replicating, error, stopped, or terminated.",
                                                                "type": "string"
                                                            },
                                                            "StatusType": {
                                                                "description": "This value is currently \"read replication.\"",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "StorageEncrypted": {
                                                    "description": "Specifies whether the DB instance is encrypted.",
                                                    "type": "boolean"
                                                },
                                                "StorageType": {
                                                    "description": "Specifies the storage type associated with DB instance.",
                                                    "type": "string"
                                                },
                                                "TdeCredentialArn": {
                                                    "description": "The ARN from the key store with which the instance is associated for TDE encryption.",
                                                    "type": "string"
                                                },
                                                "Timezone": {
                                                    "description": "Not supported. ",
                                                    "type": "string"
                                                },
                                                "VpcSecurityGroups": {
                                                    "description": "Provides a list of VPC security group elements that the DB instance belongs to.",
                                                    "items": {
                                                        "description": "This data type is used as a response element for queries on VPC security group membership.",
                                                        "properties": {
                                                            "Status": {
                                                                "description": "The status of the VPC security group.",
                                                                "type": "string"
                                                            },
                                                            "VpcSecurityGroupId": {
                                                                "description": "The name of the VPC security group.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidDBInstanceStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " The specified DB instance is not in the <i>available</i> state. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidDBSecurityGroupStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The state of the DB security group does not allow deletion.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "482": {
                        "description": "DBInstanceAlreadyExistsFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "User already has a DB instance with the given identifier.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "483": {
                        "description": "DBInstanceNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBInstanceIdentifier</i> does not refer to an existing DB instance. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "484": {
                        "description": "DBSecurityGroupNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBSecurityGroupName</i> does not refer to an existing DB security group. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "485": {
                        "description": "DBParameterGroupNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBParameterGroupName</i> does not refer to an existing DB parameter group. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "486": {
                        "description": "InsufficientDBInstanceCapacityFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Specified DB instance class is not available in the specified Availability Zone.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "487": {
                        "description": "StorageQuotaExceededFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Request would result in user exceeding the allowed amount of storage available across all DB instances.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "488": {
                        "description": "InvalidVPCNetworkStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "DB subnet group does not cover all Availability Zones after it is created because users' change.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "489": {
                        "description": "ProvisionedIopsNotAvailableInAZFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Provisioned IOPS not available in the specified Availability Zone.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "490": {
                        "description": "OptionGroupNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "491": {
                        "description": "DBUpgradeDependencyFailureFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The DB upgrade failed because a resource the DB depends on could not be modified.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "492": {
                        "description": "StorageTypeNotSupportedFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>StorageType</i> specified cannot be associated with the DB Instance. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "493": {
                        "description": "AuthorizationNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "<p>Specified CIDRIP or EC2 security group is not authorized for the specified DB security group.</p> <p>Neptune may not also be authorized via IAM to perform necessary actions on your behalf.</p>",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "494": {
                        "description": "CertificateNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>CertificateIdentifier</i> does not refer to an existing certificate. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "495": {
                        "description": "DomainNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>Domain</i> does not refer to an existing Active Directory Domain. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "AllocatedStorage": {
                                        "description": "<p>The new amount of storage (in gibibytes) to allocate for the DB instance. </p> <p>Not applicable. Storage is managed by the DB Cluster.</p>",
                                        "type": "integer"
                                    },
                                    "AllowMajorVersionUpgrade": {
                                        "description": "<p>Indicates that major version upgrades are allowed. Changing this parameter doesn't result in an outage and the change is asynchronously applied as soon as possible.</p> <p>Constraints: This parameter must be set to true when specifying a value for the EngineVersion parameter that is a different major version than the DB instance's current version.</p>",
                                        "type": "boolean"
                                    },
                                    "ApplyImmediately": {
                                        "description": "<p>Specifies whether the modifications in this request and any pending modifications are asynchronously applied as soon as possible, regardless of the <code>PreferredMaintenanceWindow</code> setting for the DB instance. </p> <p> If this parameter is set to <code>false</code>, changes to the DB instance are applied during the next maintenance window. Some parameter changes can cause an outage and are applied on the next call to <a>RebootDBInstance</a>, or the next failure reboot. </p> <p>Default: <code>false</code> </p>",
                                        "type": "boolean"
                                    },
                                    "AutoMinorVersionUpgrade": {
                                        "description": " Indicates that minor version upgrades are applied automatically to the DB instance during the maintenance window. Changing this parameter doesn't result in an outage except in the following case and the change is asynchronously applied as soon as possible. An outage will result if this parameter is set to <code>true</code> during the maintenance window, and a newer minor version is available, and Neptune has enabled auto patching for that engine version. ",
                                        "type": "boolean"
                                    },
                                    "BackupRetentionPeriod": {
                                        "description": "<p>The number of days to retain automated backups. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups.</p> <p>Not applicable. The retention period for automated backups is managed by the DB cluster. For more information, see <a>ModifyDBCluster</a>.</p> <p>Default: Uses existing setting</p>",
                                        "type": "integer"
                                    },
                                    "CACertificateIdentifier": {
                                        "description": "Indicates the certificate that needs to be associated with the instance.",
                                        "type": "string"
                                    },
                                    "CloudwatchLogsExportConfiguration": {
                                        "description": "The configuration setting for the log types to be enabled for export to CloudWatch Logs for a specific DB instance or DB cluster.",
                                        "properties": {
                                            "DisableLogTypes": {
                                                "description": "The list of log types to disable.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "EnableLogTypes": {
                                                "description": "The list of log types to enable.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "CopyTagsToSnapshot": {
                                        "description": "True to copy all tags from the DB instance to snapshots of the DB instance, and otherwise false. The default is false.",
                                        "type": "boolean"
                                    },
                                    "DBInstanceClass": {
                                        "description": "<p>The new compute and memory capacity of the DB instance, for example, <code>db.m4.large</code>. Not all DB instance classes are available in all AWS Regions. </p> <p>If you modify the DB instance class, an outage occurs during the change. The change is applied during the next maintenance window, unless <code>ApplyImmediately</code> is specified as <code>true</code> for this request. </p> <p>Default: Uses existing setting</p>",
                                        "type": "string"
                                    },
                                    "DBInstanceIdentifier": {
                                        "description": "<p>The DB instance identifier. This value is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBInstance.</p> </li> </ul>",
                                        "type": "string"
                                    },
                                    "DBParameterGroupName": {
                                        "description": "<p>The name of the DB parameter group to apply to the DB instance. Changing this setting doesn't result in an outage. The parameter group name itself is changed immediately, but the actual parameter changes are not applied until you reboot the instance without failover. The db instance will NOT be rebooted automatically and the parameter changes will NOT be applied during the next maintenance window.</p> <p>Default: Uses existing setting</p> <p>Constraints: The DB parameter group must be in the same DB parameter group family as this DB instance.</p>",
                                        "type": "string"
                                    },
                                    "DBPortNumber": {
                                        "description": "<p>The port number on which the database accepts connections.</p> <p>The value of the <code>DBPortNumber</code> parameter must not match any of the port values specified for options in the option group for the DB instance.</p> <p>Your database will restart when you change the <code>DBPortNumber</code> value regardless of the value of the <code>ApplyImmediately</code> parameter.</p> <p> Default: <code>8182</code> </p>",
                                        "type": "integer"
                                    },
                                    "DBSecurityGroups": {
                                        "description": "<p>A list of DB security groups to authorize on this DB instance. Changing this setting doesn't result in an outage and the change is asynchronously applied as soon as possible.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match existing DBSecurityGroups.</p> </li> </ul>",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "DBSubnetGroupName": {
                                        "description": "<p>The new DB subnet group for the DB instance. You can use this parameter to move your DB instance to a different VPC. </p> <p>Changing the subnet group causes an outage during the change. The change is applied during the next maintenance window, unless you specify <code>true</code> for the <code>ApplyImmediately</code> parameter. </p> <p>Constraints: If supplied, must match the name of an existing DBSubnetGroup.</p> <p>Example: <code>mySubnetGroup</code> </p>",
                                        "type": "string"
                                    },
                                    "Domain": {
                                        "description": "Not supported. ",
                                        "type": "string"
                                    },
                                    "DomainIAMRoleName": {
                                        "description": "Not supported",
                                        "type": "string"
                                    },
                                    "EnableIAMDatabaseAuthentication": {
                                        "description": "<p>True to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts, and otherwise false.</p> <p>You can enable IAM database authentication for the following database engines</p> <p>Not applicable. Mapping AWS IAM accounts to database accounts is managed by the DB cluster. For more information, see <a>ModifyDBCluster</a>.</p> <p>Default: <code>false</code> </p>",
                                        "type": "boolean"
                                    },
                                    "EnablePerformanceInsights": {
                                        "description": "True to enable Performance Insights for the DB instance, and otherwise false.",
                                        "type": "boolean"
                                    },
                                    "EngineVersion": {
                                        "description": "<p> The version number of the database engine to upgrade to. Changing this parameter results in an outage and the change is applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is set to <code>true</code> for this request. </p> <p>For major version upgrades, if a nondefault DB parameter group is currently in use, a new DB parameter group in the DB parameter group family for the new engine version must be specified. The new DB parameter group can be the default for that DB parameter group family.</p>",
                                        "type": "string"
                                    },
                                    "Iops": {
                                        "description": "<p>The new Provisioned IOPS (I/O operations per second) value for the instance. </p> <p>Changing this setting doesn't result in an outage and the change is applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is set to <code>true</code> for this request.</p> <p>Default: Uses existing setting</p>",
                                        "type": "integer"
                                    },
                                    "LicenseModel": {
                                        "description": "<p>The license model for the DB instance.</p> <p>Valid values: <code>license-included</code> | <code>bring-your-own-license</code> | <code>general-public-license</code> </p>",
                                        "type": "string"
                                    },
                                    "MasterUserPassword": {
                                        "description": "<p>The new password for the master user. The password can include any printable ASCII character except \"/\", \"\"\", or \"@\".</p> <p>Not applicable. </p> <p>Default: Uses existing setting</p>",
                                        "type": "string"
                                    },
                                    "MonitoringInterval": {
                                        "description": "<p>The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0.</p> <p>If <code>MonitoringRoleArn</code> is specified, then you must also set <code>MonitoringInterval</code> to a value other than 0.</p> <p>Valid Values: <code>0, 1, 5, 10, 15, 30, 60</code> </p>",
                                        "type": "integer"
                                    },
                                    "MonitoringRoleArn": {
                                        "description": "<p>The ARN for the IAM role that permits Neptune to send enhanced monitoring metrics to Amazon CloudWatch Logs. For example, <code>arn:aws:iam:123456789012:role/emaccess</code>. </p> <p>If <code>MonitoringInterval</code> is set to a value other than 0, then you must supply a <code>MonitoringRoleArn</code> value.</p>",
                                        "type": "string"
                                    },
                                    "MultiAZ": {
                                        "description": "Specifies if the DB instance is a Multi-AZ deployment. Changing this parameter doesn't result in an outage and the change is applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is set to <code>true</code> for this request. ",
                                        "type": "boolean"
                                    },
                                    "NewDBInstanceIdentifier": {
                                        "description": "<p> The new DB instance identifier for the DB instance when renaming a DB instance. When you change the DB instance identifier, an instance reboot will occur immediately if you set <code>Apply Immediately</code> to true, or will occur during the next maintenance window if <code>Apply Immediately</code> to false. This value is stored as a lowercase string. </p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>The first character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>mydbinstance</code> </p>",
                                        "type": "string"
                                    },
                                    "OptionGroupName": {
                                        "description": "<p> Indicates that the DB instance should be associated with the specified option group. Changing this parameter doesn't result in an outage except in the following case and the change is applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is set to <code>true</code> for this request. If the parameter change results in an option group that enables OEM, this change can cause a brief (sub-second) period during which new connections are rejected but existing connections are not interrupted. </p> <p>Permanent options, such as the TDE option for Oracle Advanced Security TDE, can't be removed from an option group, and that option group can't be removed from a DB instance once it is associated with a DB instance</p>",
                                        "type": "string"
                                    },
                                    "PerformanceInsightsKMSKeyId": {
                                        "description": "The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.",
                                        "type": "string"
                                    },
                                    "PreferredBackupWindow": {
                                        "description": "<p> The daily time range during which automated backups are created if automated backups are enabled. </p> <p>Not applicable. The daily time range for creating automated backups is managed by the DB cluster. For more information, see <a>ModifyDBCluster</a>.</p> <p>Constraints:</p> <ul> <li> <p>Must be in the format hh24:mi-hh24:mi</p> </li> <li> <p>Must be in Universal Time Coordinated (UTC)</p> </li> <li> <p>Must not conflict with the preferred maintenance window</p> </li> <li> <p>Must be at least 30 minutes</p> </li> </ul>",
                                        "type": "string"
                                    },
                                    "PreferredMaintenanceWindow": {
                                        "description": "<p>The weekly time range (in UTC) during which system maintenance can occur, which might result in an outage. Changing this parameter doesn't result in an outage, except in the following situation, and the change is asynchronously applied as soon as possible. If there are pending actions that cause a reboot, and the maintenance window is changed to include the current time, then changing this parameter will cause a reboot of the DB instance. If moving this window to the current time, there must be at least 30 minutes between the current time and end of the window to ensure pending changes are applied.</p> <p>Default: Uses existing setting</p> <p>Format: ddd:hh24:mi-ddd:hh24:mi</p> <p>Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun</p> <p>Constraints: Must be at least 30 minutes</p>",
                                        "type": "string"
                                    },
                                    "PromotionTier": {
                                        "description": "<p>A value that specifies the order in which a Read Replica is promoted to the primary instance after a failure of the existing primary instance. </p> <p>Default: 1</p> <p>Valid Values: 0 - 15</p>",
                                        "type": "integer"
                                    },
                                    "PubliclyAccessible": {
                                        "description": "This parameter is not supported.",
                                        "type": "boolean"
                                    },
                                    "StorageType": {
                                        "description": "<p>Specifies the storage type to be associated with the DB instance. </p> <p>If you specify Provisioned IOPS (<code>io1</code>), you must also include a value for the <code>Iops</code> parameter. </p> <p>If you choose to migrate your DB instance from using standard storage to using Provisioned IOPS, or from using Provisioned IOPS to using standard storage, the process can take time. The duration of the migration depends on several factors such as database load, storage size, storage type (standard or Provisioned IOPS), amount of IOPS provisioned (if any), and the number of prior scale storage operations. Typical migration times are under 24 hours, but the process can take up to several days in some cases. During the migration, the DB instance is available for use, but might experience performance degradation. While the migration takes place, nightly backups for the instance are suspended. No other Amazon Neptune operations can take place for the instance, including modifying the instance, rebooting the instance, deleting the instance, creating a Read Replica for the instance, and creating a DB snapshot of the instance. </p> <p> Valid values: <code>standard | gp2 | io1</code> </p> <p>Default: <code>io1</code> if the <code>Iops</code> parameter is specified, otherwise <code>standard</code> </p>",
                                        "type": "string"
                                    },
                                    "TdeCredentialArn": {
                                        "description": "The ARN from the key store with which to associate the instance for TDE encryption.",
                                        "type": "string"
                                    },
                                    "TdeCredentialPassword": {
                                        "description": "The password for the given ARN from the key store in order to access the device.",
                                        "type": "string"
                                    },
                                    "VpcSecurityGroupIds": {
                                        "description": "<p>A list of EC2 VPC security groups to authorize on this DB instance. This change is asynchronously applied as soon as possible.</p> <p>Not applicable. The associated list of EC2 VPC security groups is managed by the DB cluster. For more information, see <a>ModifyDBCluster</a>.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match existing VpcSecurityGroupIds.</p> </li> </ul>",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "DBInstanceIdentifier"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ModifyDBParameterGroup": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p> Modifies the parameters of a DB parameter group. To modify more than one parameter, submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>, and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single request. </p> <note> <p>Changes to dynamic parameters are applied immediately. Changes to static parameters require a reboot without failover to the DB instance associated with the parameter group before the change can take effect.</p> </note> <important> <p>After you modify a DB parameter group, you should wait at least 5 minutes before creating your first DB instance that uses that DB parameter group as the default parameter group. This allows Amazon Neptune to fully complete the modify action before the parameter group is used as the default for a new DB instance. This is especially important for parameters that are critical when creating the default database for a DB instance, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the Amazon Neptune console or the <i>DescribeDBParameters</i> command to verify that your DB parameter group has been created or modified.</p> </important>",
                "operationId": "ModifyDBParameterGroup",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " Contains the result of a successful invocation of the <a>ModifyDBParameterGroup</a> or <a>ResetDBParameterGroup</a> action. ",
                                    "properties": {
                                        "DBParameterGroupName": {
                                            "description": "Provides the name of the DB parameter group.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DBParameterGroupNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBParameterGroupName</i> does not refer to an existing DB parameter group. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidDBParameterGroupStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The DB parameter group is in use or is in an invalid state. If you are attempting to delete the parameter group, you cannot delete it when the parameter group is in this state.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "DBParameterGroupName": {
                                        "description": "<p>The name of the DB parameter group.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DBParameterGroup.</p> </li> </ul>",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "<p>An array of parameter names, values, and the apply method for the parameter update. At least one parameter name, value, and apply method must be supplied; subsequent arguments are optional. A maximum of 20 parameters can be modified in a single request.</p> <p>Valid Values (for the application method): <code>immediate | pending-reboot</code> </p> <note> <p>You can use the immediate value with dynamic parameters only. You can use the pending-reboot value for both dynamic and static parameters, and changes are applied when you reboot the DB instance without failover.</p> </note>",
                                        "items": {
                                            "description": "<p> This data type is used as a request parameter in the <a>ModifyDBParameterGroup</a> and <a>ResetDBParameterGroup</a> actions. </p> <p>This data type is used as a response element in the <a>DescribeEngineDefaultParameters</a> and <a>DescribeDBParameters</a> actions.</p>",
                                            "properties": {
                                                "AllowedValues": {
                                                    "description": "Specifies the valid range of values for the parameter.",
                                                    "type": "string"
                                                },
                                                "ApplyMethod": {
                                                    "description": "Indicates when to apply parameter updates.",
                                                    "enum": [
                                                        "immediate",
                                                        "pending-reboot"
                                                    ],
                                                    "type": "string"
                                                },
                                                "ApplyType": {
                                                    "description": "Specifies the engine specific parameters type.",
                                                    "type": "string"
                                                },
                                                "DataType": {
                                                    "description": "Specifies the valid data type for the parameter.",
                                                    "type": "string"
                                                },
                                                "Description": {
                                                    "description": "Provides a description of the parameter.",
                                                    "type": "string"
                                                },
                                                "IsModifiable": {
                                                    "description": " Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed. ",
                                                    "type": "boolean"
                                                },
                                                "MinimumEngineVersion": {
                                                    "description": "The earliest engine version to which the parameter can apply.",
                                                    "type": "string"
                                                },
                                                "ParameterName": {
                                                    "description": "Specifies the name of the parameter.",
                                                    "type": "string"
                                                },
                                                "ParameterValue": {
                                                    "description": "Specifies the value of the parameter.",
                                                    "type": "string"
                                                },
                                                "Source": {
                                                    "description": "Indicates the source of the parameter value.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "DBParameterGroupName",
                                    "Parameters"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ModifyDBSubnetGroup": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Modifies an existing DB subnet group. DB subnet groups must contain at least one subnet in at least two AZs in the AWS Region.",
                "operationId": "ModifyDBSubnetGroup",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DBSubnetGroup": {
                                            "description": "<p>Contains the details of an Amazon Neptune DB subnet group. </p> <p>This data type is used as a response element in the <a>DescribeDBSubnetGroups</a> action. </p>",
                                            "properties": {
                                                "DBSubnetGroupArn": {
                                                    "description": "The Amazon Resource Name (ARN) for the DB subnet group.",
                                                    "type": "string"
                                                },
                                                "DBSubnetGroupDescription": {
                                                    "description": "Provides the description of the DB subnet group.",
                                                    "type": "string"
                                                },
                                                "DBSubnetGroupName": {
                                                    "description": "The name of the DB subnet group.",
                                                    "type": "string"
                                                },
                                                "SubnetGroupStatus": {
                                                    "description": "Provides the status of the DB subnet group.",
                                                    "type": "string"
                                                },
                                                "Subnets": {
                                                    "description": " Contains a list of <a>Subnet</a> elements. ",
                                                    "items": {
                                                        "description": " This data type is used as a response element in the <a>DescribeDBSubnetGroups</a> action. ",
                                                        "properties": {
                                                            "SubnetAvailabilityZone": {
                                                                "description": "<p>Contains Availability Zone information.</p> <p> This data type is used as an element in the following data type:</p> <ul> <li> <p> <a>OrderableDBInstanceOption</a> </p> </li> </ul>",
                                                                "properties": {
                                                                    "Name": {
                                                                        "description": "The name of the availability zone.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "SubnetIdentifier": {
                                                                "description": "Specifies the identifier of the subnet.",
                                                                "type": "string"
                                                            },
                                                            "SubnetStatus": {
                                                                "description": "Specifies the status of the subnet.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "VpcId": {
                                                    "description": "Provides the VpcId of the DB subnet group.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DBSubnetGroupNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "DBSubnetQuotaExceededFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Request would result in user exceeding the allowed number of subnets in a DB subnet groups.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "482": {
                        "description": "SubnetAlreadyInUse",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The DB subnet is already in use in the Availability Zone.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "483": {
                        "description": "DBSubnetGroupDoesNotCoverEnoughAZs",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Subnets in the DB subnet group should cover at least two Availability Zones unless there is only one Availability Zone.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "484": {
                        "description": "InvalidSubnet",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The requested subnet is invalid, or multiple subnets were requested that are not all in a common VPC.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "DBSubnetGroupDescription": {
                                        "description": "The description for the DB subnet group.",
                                        "type": "string"
                                    },
                                    "DBSubnetGroupName": {
                                        "description": "<p>The name for the DB subnet group. This value is stored as a lowercase string. You can't modify the default subnet group. </p> <p>Constraints: Must match the name of an existing DBSubnetGroup. Must not be default.</p> <p>Example: <code>mySubnetgroup</code> </p>",
                                        "type": "string"
                                    },
                                    "SubnetIds": {
                                        "description": "The EC2 subnet IDs for the DB subnet group.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "DBSubnetGroupName",
                                    "SubnetIds"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ModifyEventSubscription": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Modifies an existing event notification subscription. Note that you can't modify the source identifiers using this call; to change source identifiers for a subscription, use the <a>AddSourceIdentifierToSubscription</a> and <a>RemoveSourceIdentifierFromSubscription</a> calls.</p> <p>You can see a list of the event categories for a given SourceType by using the <b>DescribeEventCategories</b> action.</p>",
                "operationId": "ModifyEventSubscription",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "EventSubscription": {
                                            "description": "Contains the results of a successful invocation of the <a>DescribeEventSubscriptions</a> action.",
                                            "properties": {
                                                "CustSubscriptionId": {
                                                    "description": "The event notification subscription Id.",
                                                    "type": "string"
                                                },
                                                "CustomerAwsId": {
                                                    "description": "The AWS customer account associated with the event notification subscription.",
                                                    "type": "string"
                                                },
                                                "Enabled": {
                                                    "description": "A Boolean value indicating if the subscription is enabled. True indicates the subscription is enabled.",
                                                    "type": "boolean"
                                                },
                                                "EventCategoriesList": {
                                                    "description": "A list of event categories for the event notification subscription.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "EventSubscriptionArn": {
                                                    "description": "The Amazon Resource Name (ARN) for the event subscription.",
                                                    "type": "string"
                                                },
                                                "SnsTopicArn": {
                                                    "description": "The topic ARN of the event notification subscription.",
                                                    "type": "string"
                                                },
                                                "SourceIdsList": {
                                                    "description": "A list of source IDs for the event notification subscription.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "SourceType": {
                                                    "description": "The source type for the event notification subscription.",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "<p>The status of the event notification subscription.</p> <p>Constraints:</p> <p>Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist</p> <p>The status \"no-permission\" indicates that Neptune no longer has permission to post to the SNS topic. The status \"topic-not-exist\" indicates that the topic was deleted after the subscription was created.</p>",
                                                    "type": "string"
                                                },
                                                "SubscriptionCreationTime": {
                                                    "description": "The time the event notification subscription was created.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "EventSubscriptionQuotaExceededFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "SubscriptionNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "482": {
                        "description": "SNSInvalidTopicFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "483": {
                        "description": "SNSNoAuthorizationFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "484": {
                        "description": "SNSTopicArnNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "485": {
                        "description": "SubscriptionCategoryNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "Enabled": {
                                        "description": " A Boolean value; set to <b>true</b> to activate the subscription. ",
                                        "type": "boolean"
                                    },
                                    "EventCategories": {
                                        "description": " A list of event categories for a SourceType that you want to subscribe to. You can see a list of the categories for a given SourceType by using the <b>DescribeEventCategories</b> action. ",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "SnsTopicArn": {
                                        "description": "The Amazon Resource Name (ARN) of the SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it.",
                                        "type": "string"
                                    },
                                    "SourceType": {
                                        "description": "<p>The type of source that is generating the events. For example, if you want to be notified of events generated by a DB instance, you would set this parameter to db-instance. if this value is not specified, all events are returned.</p> <p>Valid values: db-instance | db-parameter-group | db-security-group | db-snapshot</p>",
                                        "type": "string"
                                    },
                                    "SubscriptionName": {
                                        "description": "The name of the event notification subscription.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SubscriptionName"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#PromoteReadReplicaDBCluster": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Promotes a Read Replica DB cluster to a standalone DB cluster.",
                "operationId": "PromoteReadReplicaDBCluster",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DBCluster": {
                                            "description": "<p>Contains the details of an Amazon Neptune DB cluster. </p> <p>This data type is used as a response element in the <a>DescribeDBClusters</a> action. </p>",
                                            "properties": {
                                                "AllocatedStorage": {
                                                    "description": " <code>AllocatedStorage</code> always returns 1, because Neptune DB cluster storage size is not fixed, but instead automatically adjusts as needed.",
                                                    "type": "integer"
                                                },
                                                "AssociatedRoles": {
                                                    "description": "Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.",
                                                    "items": {
                                                        "description": "Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.",
                                                        "properties": {
                                                            "RoleArn": {
                                                                "description": "The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.",
                                                                "type": "string"
                                                            },
                                                            "Status": {
                                                                "description": "<p>Describes the state of association between the IAM role and the DB cluster. The Status property returns one of the following values:</p> <ul> <li> <p> <code>ACTIVE</code> - the IAM role ARN is associated with the DB cluster and can be used to access other AWS services on your behalf.</p> </li> <li> <p> <code>PENDING</code> - the IAM role ARN is being associated with the DB cluster.</p> </li> <li> <p> <code>INVALID</code> - the IAM role ARN is associated with the DB cluster, but the DB cluster is unable to assume the IAM role in order to access other AWS services on your behalf.</p> </li> </ul>",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "AvailabilityZones": {
                                                    "description": "Provides the list of EC2 Availability Zones that instances in the DB cluster can be created in.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "BackupRetentionPeriod": {
                                                    "description": "Specifies the number of days for which automatic DB snapshots are retained.",
                                                    "type": "integer"
                                                },
                                                "CharacterSetName": {
                                                    "description": "If present, specifies the name of the character set that this cluster is associated with.",
                                                    "type": "string"
                                                },
                                                "CloneGroupId": {
                                                    "description": "Identifies the clone group to which the DB cluster is associated.",
                                                    "type": "string"
                                                },
                                                "ClusterCreateTime": {
                                                    "description": "Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "DBClusterArn": {
                                                    "description": "The Amazon Resource Name (ARN) for the DB cluster.",
                                                    "type": "string"
                                                },
                                                "DBClusterIdentifier": {
                                                    "description": "Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.",
                                                    "type": "string"
                                                },
                                                "DBClusterMembers": {
                                                    "description": "Provides the list of instances that make up the DB cluster.",
                                                    "items": {
                                                        "description": "Contains information about an instance that is part of a DB cluster.",
                                                        "properties": {
                                                            "DBClusterParameterGroupStatus": {
                                                                "description": "Specifies the status of the DB cluster parameter group for this member of the DB cluster.",
                                                                "type": "string"
                                                            },
                                                            "DBInstanceIdentifier": {
                                                                "description": "Specifies the instance identifier for this member of the DB cluster.",
                                                                "type": "string"
                                                            },
                                                            "IsClusterWriter": {
                                                                "description": "Value that is <code>true</code> if the cluster member is the primary instance for the DB cluster and <code>false</code> otherwise.",
                                                                "type": "boolean"
                                                            },
                                                            "PromotionTier": {
                                                                "description": "A value that specifies the order in which a Read Replica is promoted to the primary instance after a failure of the existing primary instance. ",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "DBClusterOptionGroupMemberships": {
                                                    "description": "Provides the list of option group memberships for this DB cluster.",
                                                    "items": {
                                                        "description": "Contains status information for a DB cluster option group.",
                                                        "properties": {
                                                            "DBClusterOptionGroupName": {
                                                                "description": "Specifies the name of the DB cluster option group.",
                                                                "type": "string"
                                                            },
                                                            "Status": {
                                                                "description": "Specifies the status of the DB cluster option group.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "DBClusterParameterGroup": {
                                                    "description": "Specifies the name of the DB cluster parameter group for the DB cluster.",
                                                    "type": "string"
                                                },
                                                "DBSubnetGroup": {
                                                    "description": "Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group.",
                                                    "type": "string"
                                                },
                                                "DatabaseName": {
                                                    "description": "Contains the name of the initial database of this DB cluster that was provided at create time, if one was specified when the DB cluster was created. This same name is returned for the life of the DB cluster.",
                                                    "type": "string"
                                                },
                                                "DbClusterResourceId": {
                                                    "description": "The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.",
                                                    "type": "string"
                                                },
                                                "EarliestRestorableTime": {
                                                    "description": "Specifies the earliest time to which a database can be restored with point-in-time restore.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Endpoint": {
                                                    "description": "Specifies the connection endpoint for the primary instance of the DB cluster.",
                                                    "type": "string"
                                                },
                                                "Engine": {
                                                    "description": "Provides the name of the database engine to be used for this DB cluster.",
                                                    "type": "string"
                                                },
                                                "EngineVersion": {
                                                    "description": "Indicates the database engine version.",
                                                    "type": "string"
                                                },
                                                "HostedZoneId": {
                                                    "description": "Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.",
                                                    "type": "string"
                                                },
                                                "IAMDatabaseAuthenticationEnabled": {
                                                    "description": "True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.",
                                                    "type": "boolean"
                                                },
                                                "KmsKeyId": {
                                                    "description": "If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB cluster.",
                                                    "type": "string"
                                                },
                                                "LatestRestorableTime": {
                                                    "description": "Specifies the latest time to which a database can be restored with point-in-time restore.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "MasterUsername": {
                                                    "description": "Contains the master username for the DB cluster.",
                                                    "type": "string"
                                                },
                                                "MultiAZ": {
                                                    "description": "Specifies whether the DB cluster has instances in multiple Availability Zones.",
                                                    "type": "boolean"
                                                },
                                                "PercentProgress": {
                                                    "description": "Specifies the progress of the operation as a percentage.",
                                                    "type": "string"
                                                },
                                                "Port": {
                                                    "description": "Specifies the port that the database engine is listening on.",
                                                    "type": "integer"
                                                },
                                                "PreferredBackupWindow": {
                                                    "description": "Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. ",
                                                    "type": "string"
                                                },
                                                "PreferredMaintenanceWindow": {
                                                    "description": "Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
                                                    "type": "string"
                                                },
                                                "ReadReplicaIdentifiers": {
                                                    "description": "Contains one or more identifiers of the Read Replicas associated with this DB cluster.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "ReaderEndpoint": {
                                                    "description": "<p>The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances connections across the Read Replicas that are available in a DB cluster. As clients request new connections to the reader endpoint, Neptune distributes the connection requests among the Read Replicas in the DB cluster. This functionality can help balance your read workload across multiple Read Replicas in your DB cluster. </p> <p>If a failover occurs, and the Read Replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Read Replicas in the cluster, you can then reconnect to the reader endpoint.</p>",
                                                    "type": "string"
                                                },
                                                "ReplicationSourceIdentifier": {
                                                    "description": "Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "Specifies the current state of this DB cluster.",
                                                    "type": "string"
                                                },
                                                "StorageEncrypted": {
                                                    "description": "Specifies whether the DB cluster is encrypted.",
                                                    "type": "boolean"
                                                },
                                                "VpcSecurityGroups": {
                                                    "description": "Provides a list of VPC security groups that the DB cluster belongs to.",
                                                    "items": {
                                                        "description": "This data type is used as a response element for queries on VPC security group membership.",
                                                        "properties": {
                                                            "Status": {
                                                                "description": "The status of the VPC security group.",
                                                                "type": "string"
                                                            },
                                                            "VpcSecurityGroupId": {
                                                                "description": "The name of the VPC security group.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DBClusterNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBClusterIdentifier</i> does not refer to an existing DB cluster. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidDBClusterStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The DB cluster is not in a valid state.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "DBClusterIdentifier": {
                                        "description": "<p>The identifier of the DB cluster Read Replica to promote. This parameter is not case-sensitive. </p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBCluster Read Replica.</p> </li> </ul> <p>Example: <code>my-cluster-replica1</code> </p>",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "DBClusterIdentifier"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#RebootDBInstance": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>You might need to reboot your DB instance, usually for maintenance reasons. For example, if you make certain modifications, or if you change the DB parameter group associated with the DB instance, you must reboot the instance for the changes to take effect. </p> <p>Rebooting a DB instance restarts the database engine service. Rebooting a DB instance results in a momentary outage, during which the DB instance status is set to rebooting. </p>",
                "operationId": "RebootDBInstance",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DBInstance": {
                                            "description": "<p>Contains the details of an Amazon Neptune DB instance. </p> <p>This data type is used as a response element in the <a>DescribeDBInstances</a> action. </p>",
                                            "properties": {
                                                "AllocatedStorage": {
                                                    "description": "Specifies the allocated storage size specified in gibibytes.",
                                                    "type": "integer"
                                                },
                                                "AutoMinorVersionUpgrade": {
                                                    "description": "Indicates that minor version patches are applied automatically.",
                                                    "type": "boolean"
                                                },
                                                "AvailabilityZone": {
                                                    "description": "Specifies the name of the Availability Zone the DB instance is located in.",
                                                    "type": "string"
                                                },
                                                "BackupRetentionPeriod": {
                                                    "description": "Specifies the number of days for which automatic DB snapshots are retained.",
                                                    "type": "integer"
                                                },
                                                "CACertificateIdentifier": {
                                                    "description": "The identifier of the CA certificate for this DB instance.",
                                                    "type": "string"
                                                },
                                                "CharacterSetName": {
                                                    "description": "If present, specifies the name of the character set that this instance is associated with.",
                                                    "type": "string"
                                                },
                                                "CopyTagsToSnapshot": {
                                                    "description": "Specifies whether tags are copied from the DB instance to snapshots of the DB instance.",
                                                    "type": "boolean"
                                                },
                                                "DBClusterIdentifier": {
                                                    "description": "If the DB instance is a member of a DB cluster, contains the name of the DB cluster that the DB instance is a member of.",
                                                    "type": "string"
                                                },
                                                "DBInstanceArn": {
                                                    "description": "The Amazon Resource Name (ARN) for the DB instance.",
                                                    "type": "string"
                                                },
                                                "DBInstanceClass": {
                                                    "description": "Contains the name of the compute and memory capacity class of the DB instance.",
                                                    "type": "string"
                                                },
                                                "DBInstanceIdentifier": {
                                                    "description": "Contains a user-supplied database identifier. This identifier is the unique key that identifies a DB instance.",
                                                    "type": "string"
                                                },
                                                "DBInstanceStatus": {
                                                    "description": "Specifies the current state of this database.",
                                                    "type": "string"
                                                },
                                                "DBName": {
                                                    "description": "The database name.",
                                                    "type": "string"
                                                },
                                                "DBParameterGroups": {
                                                    "description": "Provides the list of DB parameter groups applied to this DB instance.",
                                                    "items": {
                                                        "description": "<p>The status of the DB parameter group.</p> <p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>CreateDBInstance</a> </p> </li> <li> <p> <a>DeleteDBInstance</a> </p> </li> <li> <p> <a>ModifyDBInstance</a> </p> </li> <li> <p> <a>RebootDBInstance</a> </p> </li> </ul>",
                                                        "properties": {
                                                            "DBParameterGroupName": {
                                                                "description": "The name of the DP parameter group.",
                                                                "type": "string"
                                                            },
                                                            "ParameterApplyStatus": {
                                                                "description": "The status of parameter updates.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "DBSecurityGroups": {
                                                    "description": " Provides List of DB security group elements containing only <code>DBSecurityGroup.Name</code> and <code>DBSecurityGroup.Status</code> subelements. ",
                                                    "items": {
                                                        "description": "<p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>ModifyDBInstance</a> </p> </li> <li> <p> <a>RebootDBInstance</a> </p> </li> </ul>",
                                                        "properties": {
                                                            "DBSecurityGroupName": {
                                                                "description": "The name of the DB security group.",
                                                                "type": "string"
                                                            },
                                                            "Status": {
                                                                "description": "The status of the DB security group.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "DBSubnetGroup": {
                                                    "description": "Specifies information on the subnet group associated with the DB instance, including the name, description, and subnets in the subnet group.",
                                                    "properties": {
                                                        "DBSubnetGroupArn": {
                                                            "description": "The Amazon Resource Name (ARN) for the DB subnet group.",
                                                            "type": "string"
                                                        },
                                                        "DBSubnetGroupDescription": {
                                                            "description": "Provides the description of the DB subnet group.",
                                                            "type": "string"
                                                        },
                                                        "DBSubnetGroupName": {
                                                            "description": "The name of the DB subnet group.",
                                                            "type": "string"
                                                        },
                                                        "SubnetGroupStatus": {
                                                            "description": "Provides the status of the DB subnet group.",
                                                            "type": "string"
                                                        },
                                                        "Subnets": {
                                                            "description": " Contains a list of <a>Subnet</a> elements. ",
                                                            "items": {
                                                                "description": " This data type is used as a response element in the <a>DescribeDBSubnetGroups</a> action. ",
                                                                "properties": {
                                                                    "SubnetAvailabilityZone": {
                                                                        "description": "<p>Contains Availability Zone information.</p> <p> This data type is used as an element in the following data type:</p> <ul> <li> <p> <a>OrderableDBInstanceOption</a> </p> </li> </ul>",
                                                                        "properties": {
                                                                            "Name": {
                                                                                "description": "The name of the availability zone.",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "SubnetIdentifier": {
                                                                        "description": "Specifies the identifier of the subnet.",
                                                                        "type": "string"
                                                                    },
                                                                    "SubnetStatus": {
                                                                        "description": "Specifies the status of the subnet.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "VpcId": {
                                                            "description": "Provides the VpcId of the DB subnet group.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "DbInstancePort": {
                                                    "description": "Specifies the port that the DB instance listens on. If the DB instance is part of a DB cluster, this can be a different port than the DB cluster port.",
                                                    "type": "integer"
                                                },
                                                "DbiResourceId": {
                                                    "description": "The AWS Region-unique, immutable identifier for the DB instance. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.",
                                                    "type": "string"
                                                },
                                                "DomainMemberships": {
                                                    "description": "Not supported",
                                                    "items": {
                                                        "description": "An Active Directory Domain membership record associated with the DB instance.",
                                                        "properties": {
                                                            "Domain": {
                                                                "description": "The identifier of the Active Directory Domain.",
                                                                "type": "string"
                                                            },
                                                            "FQDN": {
                                                                "description": "The fully qualified domain name of the Active Directory Domain.",
                                                                "type": "string"
                                                            },
                                                            "IAMRoleName": {
                                                                "description": "The name of the IAM role to be used when making API calls to the Directory Service.",
                                                                "type": "string"
                                                            },
                                                            "Status": {
                                                                "description": "The status of the DB instance's Active Directory Domain membership, such as joined, pending-join, failed etc).",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "EnabledCloudwatchLogsExports": {
                                                    "description": "A list of log types that this DB instance is configured to export to CloudWatch Logs.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "Endpoint": {
                                                    "description": "Specifies the connection endpoint.",
                                                    "properties": {
                                                        "Address": {
                                                            "description": "Specifies the DNS address of the DB instance.",
                                                            "type": "string"
                                                        },
                                                        "HostedZoneId": {
                                                            "description": "Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.",
                                                            "type": "string"
                                                        },
                                                        "Port": {
                                                            "description": "Specifies the port that the database engine is listening on.",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "Engine": {
                                                    "description": "Provides the name of the database engine to be used for this DB instance.",
                                                    "type": "string"
                                                },
                                                "EngineVersion": {
                                                    "description": "Indicates the database engine version.",
                                                    "type": "string"
                                                },
                                                "EnhancedMonitoringResourceArn": {
                                                    "description": "The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the Enhanced Monitoring metrics data for the DB instance.",
                                                    "type": "string"
                                                },
                                                "IAMDatabaseAuthenticationEnabled": {
                                                    "description": "True if AWS Identity and Access Management (IAM) authentication is enabled, and otherwise false.",
                                                    "type": "boolean"
                                                },
                                                "InstanceCreateTime": {
                                                    "description": "Provides the date and time the DB instance was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Iops": {
                                                    "description": "Specifies the Provisioned IOPS (I/O operations per second) value.",
                                                    "type": "integer"
                                                },
                                                "KmsKeyId": {
                                                    "description": " If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB instance. ",
                                                    "type": "string"
                                                },
                                                "LatestRestorableTime": {
                                                    "description": "Specifies the latest time to which a database can be restored with point-in-time restore.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "LicenseModel": {
                                                    "description": "License model information for this DB instance.",
                                                    "type": "string"
                                                },
                                                "MasterUsername": {
                                                    "description": "Contains the master username for the DB instance.",
                                                    "type": "string"
                                                },
                                                "MonitoringInterval": {
                                                    "description": "The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance.",
                                                    "type": "integer"
                                                },
                                                "MonitoringRoleArn": {
                                                    "description": "The ARN for the IAM role that permits Neptune to send Enhanced Monitoring metrics to Amazon CloudWatch Logs.",
                                                    "type": "string"
                                                },
                                                "MultiAZ": {
                                                    "description": "Specifies if the DB instance is a Multi-AZ deployment.",
                                                    "type": "boolean"
                                                },
                                                "OptionGroupMemberships": {
                                                    "description": "Provides the list of option group memberships for this DB instance.",
                                                    "items": {
                                                        "description": "Provides information on the option groups the DB instance is a member of.",
                                                        "properties": {
                                                            "OptionGroupName": {
                                                                "description": "The name of the option group that the instance belongs to.",
                                                                "type": "string"
                                                            },
                                                            "Status": {
                                                                "description": "The status of the DB instance's option group membership. Valid values are: <code>in-sync</code>, <code>pending-apply</code>, <code>pending-removal</code>, <code>pending-maintenance-apply</code>, <code>pending-maintenance-removal</code>, <code>applying</code>, <code>removing</code>, and <code>failed</code>. ",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "PendingModifiedValues": {
                                                    "description": "Specifies that changes to the DB instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements.",
                                                    "properties": {
                                                        "AllocatedStorage": {
                                                            "description": " Contains the new <code>AllocatedStorage</code> size for the DB instance that will be applied or is currently being applied. ",
                                                            "type": "integer"
                                                        },
                                                        "BackupRetentionPeriod": {
                                                            "description": "Specifies the pending number of days for which automated backups are retained.",
                                                            "type": "integer"
                                                        },
                                                        "CACertificateIdentifier": {
                                                            "description": "Specifies the identifier of the CA certificate for the DB instance.",
                                                            "type": "string"
                                                        },
                                                        "DBInstanceClass": {
                                                            "description": " Contains the new <code>DBInstanceClass</code> for the DB instance that will be applied or is currently being applied. ",
                                                            "type": "string"
                                                        },
                                                        "DBInstanceIdentifier": {
                                                            "description": " Contains the new <code>DBInstanceIdentifier</code> for the DB instance that will be applied or is currently being applied. ",
                                                            "type": "string"
                                                        },
                                                        "DBSubnetGroupName": {
                                                            "description": "The new DB subnet group for the DB instance. ",
                                                            "type": "string"
                                                        },
                                                        "EngineVersion": {
                                                            "description": "Indicates the database engine version.",
                                                            "type": "string"
                                                        },
                                                        "Iops": {
                                                            "description": "Specifies the new Provisioned IOPS value for the DB instance that will be applied or is currently being applied.",
                                                            "type": "integer"
                                                        },
                                                        "LicenseModel": {
                                                            "description": "<p>The license model for the DB instance.</p> <p>Valid values: <code>license-included</code> | <code>bring-your-own-license</code> | <code>general-public-license</code> </p>",
                                                            "type": "string"
                                                        },
                                                        "MasterUserPassword": {
                                                            "description": "Contains the pending or currently-in-progress change of the master credentials for the DB instance.",
                                                            "type": "string"
                                                        },
                                                        "MultiAZ": {
                                                            "description": "Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.",
                                                            "type": "boolean"
                                                        },
                                                        "PendingCloudwatchLogsExports": {
                                                            "description": "A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated.",
                                                            "properties": {
                                                                "LogTypesToDisable": {
                                                                    "description": "Log types that are in the process of being enabled. After they are enabled, these log types are exported to CloudWatch Logs.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "LogTypesToEnable": {
                                                                    "description": "Log types that are in the process of being deactivated. After they are deactivated, these log types aren't exported to CloudWatch Logs.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "Port": {
                                                            "description": "Specifies the pending port for the DB instance.",
                                                            "type": "integer"
                                                        },
                                                        "StorageType": {
                                                            "description": "Specifies the storage type to be associated with the DB instance.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "PerformanceInsightsEnabled": {
                                                    "description": "True if Performance Insights is enabled for the DB instance, and otherwise false.",
                                                    "type": "boolean"
                                                },
                                                "PerformanceInsightsKMSKeyId": {
                                                    "description": "The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.",
                                                    "type": "string"
                                                },
                                                "PreferredBackupWindow": {
                                                    "description": " Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. ",
                                                    "type": "string"
                                                },
                                                "PreferredMaintenanceWindow": {
                                                    "description": "Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
                                                    "type": "string"
                                                },
                                                "PromotionTier": {
                                                    "description": "A value that specifies the order in which a Read Replica is promoted to the primary instance after a failure of the existing primary instance. ",
                                                    "type": "integer"
                                                },
                                                "PubliclyAccessible": {
                                                    "description": "This parameter is not supported.",
                                                    "type": "boolean"
                                                },
                                                "ReadReplicaDBClusterIdentifiers": {
                                                    "description": "Contains one or more identifiers of DB clusters that are Read Replicas of this DB instance.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "ReadReplicaDBInstanceIdentifiers": {
                                                    "description": "Contains one or more identifiers of the Read Replicas associated with this DB instance.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "ReadReplicaSourceDBInstanceIdentifier": {
                                                    "description": "Contains the identifier of the source DB instance if this DB instance is a Read Replica.",
                                                    "type": "string"
                                                },
                                                "SecondaryAvailabilityZone": {
                                                    "description": "If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support.",
                                                    "type": "string"
                                                },
                                                "StatusInfos": {
                                                    "description": "The status of a Read Replica. If the instance is not a Read Replica, this is blank.",
                                                    "items": {
                                                        "description": "Provides a list of status information for a DB instance.",
                                                        "properties": {
                                                            "Message": {
                                                                "description": "Details of the error if there is an error for the instance. If the instance is not in an error state, this value is blank.",
                                                                "type": "string"
                                                            },
                                                            "Normal": {
                                                                "description": "Boolean value that is true if the instance is operating normally, or false if the instance is in an error state.",
                                                                "type": "boolean"
                                                            },
                                                            "Status": {
                                                                "description": "Status of the DB instance. For a StatusType of read replica, the values can be replicating, error, stopped, or terminated.",
                                                                "type": "string"
                                                            },
                                                            "StatusType": {
                                                                "description": "This value is currently \"read replication.\"",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "StorageEncrypted": {
                                                    "description": "Specifies whether the DB instance is encrypted.",
                                                    "type": "boolean"
                                                },
                                                "StorageType": {
                                                    "description": "Specifies the storage type associated with DB instance.",
                                                    "type": "string"
                                                },
                                                "TdeCredentialArn": {
                                                    "description": "The ARN from the key store with which the instance is associated for TDE encryption.",
                                                    "type": "string"
                                                },
                                                "Timezone": {
                                                    "description": "Not supported. ",
                                                    "type": "string"
                                                },
                                                "VpcSecurityGroups": {
                                                    "description": "Provides a list of VPC security group elements that the DB instance belongs to.",
                                                    "items": {
                                                        "description": "This data type is used as a response element for queries on VPC security group membership.",
                                                        "properties": {
                                                            "Status": {
                                                                "description": "The status of the VPC security group.",
                                                                "type": "string"
                                                            },
                                                            "VpcSecurityGroupId": {
                                                                "description": "The name of the VPC security group.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidDBInstanceStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " The specified DB instance is not in the <i>available</i> state. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "DBInstanceNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBInstanceIdentifier</i> does not refer to an existing DB instance. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "DBInstanceIdentifier": {
                                        "description": "<p>The DB instance identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBInstance.</p> </li> </ul>",
                                        "type": "string"
                                    },
                                    "ForceFailover": {
                                        "description": "<p> When <code>true</code>, the reboot is conducted through a MultiAZ failover. </p> <p>Constraint: You can't specify <code>true</code> if the instance is not configured for MultiAZ.</p>",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "DBInstanceIdentifier"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#RemoveRoleFromDBCluster": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Disassociates an Identity and Access Management (IAM) role from a DB cluster. ",
                "operationId": "RemoveRoleFromDBCluster",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "DBClusterNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBClusterIdentifier</i> does not refer to an existing DB cluster. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "DBClusterRoleNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The specified IAM role Amazon Resource Name (ARN) is not associated with the specified DB cluster.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidDBClusterStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The DB cluster is not in a valid state.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "DBClusterIdentifier": {
                                        "description": "The name of the DB cluster to disassociate the IAM role from.",
                                        "type": "string"
                                    },
                                    "RoleArn": {
                                        "description": "The Amazon Resource Name (ARN) of the IAM role to disassociate from the DB cluster, for example <code>arn:aws:iam::123456789012:role/NeptuneAccessRole</code>.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "DBClusterIdentifier",
                                    "RoleArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#RemoveSourceIdentifierFromSubscription": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Removes a source identifier from an existing event notification subscription.",
                "operationId": "RemoveSourceIdentifierFromSubscription",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "EventSubscription": {
                                            "description": "Contains the results of a successful invocation of the <a>DescribeEventSubscriptions</a> action.",
                                            "properties": {
                                                "CustSubscriptionId": {
                                                    "description": "The event notification subscription Id.",
                                                    "type": "string"
                                                },
                                                "CustomerAwsId": {
                                                    "description": "The AWS customer account associated with the event notification subscription.",
                                                    "type": "string"
                                                },
                                                "Enabled": {
                                                    "description": "A Boolean value indicating if the subscription is enabled. True indicates the subscription is enabled.",
                                                    "type": "boolean"
                                                },
                                                "EventCategoriesList": {
                                                    "description": "A list of event categories for the event notification subscription.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "EventSubscriptionArn": {
                                                    "description": "The Amazon Resource Name (ARN) for the event subscription.",
                                                    "type": "string"
                                                },
                                                "SnsTopicArn": {
                                                    "description": "The topic ARN of the event notification subscription.",
                                                    "type": "string"
                                                },
                                                "SourceIdsList": {
                                                    "description": "A list of source IDs for the event notification subscription.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "SourceType": {
                                                    "description": "The source type for the event notification subscription.",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "<p>The status of the event notification subscription.</p> <p>Constraints:</p> <p>Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist</p> <p>The status \"no-permission\" indicates that Neptune no longer has permission to post to the SNS topic. The status \"topic-not-exist\" indicates that the topic was deleted after the subscription was created.</p>",
                                                    "type": "string"
                                                },
                                                "SubscriptionCreationTime": {
                                                    "description": "The time the event notification subscription was created.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "SubscriptionNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "SourceNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "SourceIdentifier": {
                                        "description": " The source identifier to be removed from the subscription, such as the <b>DB instance identifier</b> for a DB instance or the name of a security group. ",
                                        "type": "string"
                                    },
                                    "SubscriptionName": {
                                        "description": "The name of the event notification subscription you want to remove a source identifier from.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "SubscriptionName",
                                    "SourceIdentifier"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#RemoveTagsFromResource": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Removes metadata tags from an Amazon Neptune resource.",
                "operationId": "RemoveTagsFromResource",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "DBInstanceNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBInstanceIdentifier</i> does not refer to an existing DB instance. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "DBSnapshotNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBSnapshotIdentifier</i> does not refer to an existing DB snapshot. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "482": {
                        "description": "DBClusterNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBClusterIdentifier</i> does not refer to an existing DB cluster. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "ResourceName": {
                                        "description": "The Amazon Neptune resource that the tags are removed from. This value is an Amazon Resource Name (ARN). For information about creating an ARN, see <a href=\"http://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing\"> Constructing an Amazon Resource Name (ARN)</a>.",
                                        "type": "string"
                                    },
                                    "TagKeys": {
                                        "description": "The tag key (name) of the tag to be removed.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "ResourceName",
                                    "TagKeys"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ResetDBClusterParameterGroup": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p> Modifies the parameters of a DB cluster parameter group to the default value. To reset specific parameters submit a list of the following: <code>ParameterName</code> and <code>ApplyMethod</code>. To reset the entire DB cluster parameter group, specify the <code>DBClusterParameterGroupName</code> and <code>ResetAllParameters</code> parameters. </p> <p> When resetting the entire group, dynamic parameters are updated immediately and static parameters are set to <code>pending-reboot</code> to take effect on the next DB instance restart or <a>RebootDBInstance</a> request. You must call <a>RebootDBInstance</a> for every DB instance in your DB cluster that you want the updated static parameter to apply to.</p>",
                "operationId": "ResetDBClusterParameterGroup",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "<p/>",
                                    "properties": {
                                        "DBClusterParameterGroupName": {
                                            "description": "<p>The name of the DB cluster parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters or numbers.</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <note> <p>This value is stored as a lowercase string.</p> </note>",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidDBParameterGroupStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The DB parameter group is in use or is in an invalid state. If you are attempting to delete the parameter group, you cannot delete it when the parameter group is in this state.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "DBParameterGroupNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBParameterGroupName</i> does not refer to an existing DB parameter group. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "DBClusterParameterGroupName": {
                                        "description": "The name of the DB cluster parameter group to reset.",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "A list of parameter names in the DB cluster parameter group to reset to the default values. You can't use this parameter if the <code>ResetAllParameters</code> parameter is set to <code>true</code>.",
                                        "items": {
                                            "description": "<p> This data type is used as a request parameter in the <a>ModifyDBParameterGroup</a> and <a>ResetDBParameterGroup</a> actions. </p> <p>This data type is used as a response element in the <a>DescribeEngineDefaultParameters</a> and <a>DescribeDBParameters</a> actions.</p>",
                                            "properties": {
                                                "AllowedValues": {
                                                    "description": "Specifies the valid range of values for the parameter.",
                                                    "type": "string"
                                                },
                                                "ApplyMethod": {
                                                    "description": "Indicates when to apply parameter updates.",
                                                    "enum": [
                                                        "immediate",
                                                        "pending-reboot"
                                                    ],
                                                    "type": "string"
                                                },
                                                "ApplyType": {
                                                    "description": "Specifies the engine specific parameters type.",
                                                    "type": "string"
                                                },
                                                "DataType": {
                                                    "description": "Specifies the valid data type for the parameter.",
                                                    "type": "string"
                                                },
                                                "Description": {
                                                    "description": "Provides a description of the parameter.",
                                                    "type": "string"
                                                },
                                                "IsModifiable": {
                                                    "description": " Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed. ",
                                                    "type": "boolean"
                                                },
                                                "MinimumEngineVersion": {
                                                    "description": "The earliest engine version to which the parameter can apply.",
                                                    "type": "string"
                                                },
                                                "ParameterName": {
                                                    "description": "Specifies the name of the parameter.",
                                                    "type": "string"
                                                },
                                                "ParameterValue": {
                                                    "description": "Specifies the value of the parameter.",
                                                    "type": "string"
                                                },
                                                "Source": {
                                                    "description": "Indicates the source of the parameter value.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "ResetAllParameters": {
                                        "description": "A value that is set to <code>true</code> to reset all parameters in the DB cluster parameter group to their default values, and <code>false</code> otherwise. You can't use this parameter if there is a list of parameter names specified for the <code>Parameters</code> parameter.",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "DBClusterParameterGroupName"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ResetDBParameterGroup": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Modifies the parameters of a DB parameter group to the engine/system default value. To reset specific parameters, provide a list of the following: <code>ParameterName</code> and <code>ApplyMethod</code>. To reset the entire DB parameter group, specify the <code>DBParameterGroup</code> name and <code>ResetAllParameters</code> parameters. When resetting the entire group, dynamic parameters are updated immediately and static parameters are set to <code>pending-reboot</code> to take effect on the next DB instance restart or <code>RebootDBInstance</code> request. ",
                "operationId": "ResetDBParameterGroup",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " Contains the result of a successful invocation of the <a>ModifyDBParameterGroup</a> or <a>ResetDBParameterGroup</a> action. ",
                                    "properties": {
                                        "DBParameterGroupName": {
                                            "description": "Provides the name of the DB parameter group.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidDBParameterGroupStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The DB parameter group is in use or is in an invalid state. If you are attempting to delete the parameter group, you cannot delete it when the parameter group is in this state.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "DBParameterGroupNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBParameterGroupName</i> does not refer to an existing DB parameter group. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "DBParameterGroupName": {
                                        "description": "<p>The name of the DB parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must match the name of an existing DBParameterGroup.</p> </li> </ul>",
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "<p>To reset the entire DB parameter group, specify the <code>DBParameterGroup</code> name and <code>ResetAllParameters</code> parameters. To reset specific parameters, provide a list of the following: <code>ParameterName</code> and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single request.</p> <p>Valid Values (for Apply method): <code>pending-reboot</code> </p>",
                                        "items": {
                                            "description": "<p> This data type is used as a request parameter in the <a>ModifyDBParameterGroup</a> and <a>ResetDBParameterGroup</a> actions. </p> <p>This data type is used as a response element in the <a>DescribeEngineDefaultParameters</a> and <a>DescribeDBParameters</a> actions.</p>",
                                            "properties": {
                                                "AllowedValues": {
                                                    "description": "Specifies the valid range of values for the parameter.",
                                                    "type": "string"
                                                },
                                                "ApplyMethod": {
                                                    "description": "Indicates when to apply parameter updates.",
                                                    "enum": [
                                                        "immediate",
                                                        "pending-reboot"
                                                    ],
                                                    "type": "string"
                                                },
                                                "ApplyType": {
                                                    "description": "Specifies the engine specific parameters type.",
                                                    "type": "string"
                                                },
                                                "DataType": {
                                                    "description": "Specifies the valid data type for the parameter.",
                                                    "type": "string"
                                                },
                                                "Description": {
                                                    "description": "Provides a description of the parameter.",
                                                    "type": "string"
                                                },
                                                "IsModifiable": {
                                                    "description": " Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed. ",
                                                    "type": "boolean"
                                                },
                                                "MinimumEngineVersion": {
                                                    "description": "The earliest engine version to which the parameter can apply.",
                                                    "type": "string"
                                                },
                                                "ParameterName": {
                                                    "description": "Specifies the name of the parameter.",
                                                    "type": "string"
                                                },
                                                "ParameterValue": {
                                                    "description": "Specifies the value of the parameter.",
                                                    "type": "string"
                                                },
                                                "Source": {
                                                    "description": "Indicates the source of the parameter value.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "ResetAllParameters": {
                                        "description": "<p> Specifies whether (<code>true</code>) or not (<code>false</code>) to reset all parameters in the DB parameter group to default values. </p> <p>Default: <code>true</code> </p>",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "DBParameterGroupName"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#RestoreDBClusterFromSnapshot": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Creates a new DB cluster from a DB snapshot or DB cluster snapshot.</p> <p>If a DB snapshot is specified, the target DB cluster is created from the source DB snapshot with a default configuration and default security group.</p> <p>If a DB cluster snapshot is specified, the target DB cluster is created from the source DB cluster restore point with the same configuration as the original source DB cluster, except that the new DB cluster is created with the default security group.</p>",
                "operationId": "RestoreDBClusterFromSnapshot",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DBCluster": {
                                            "description": "<p>Contains the details of an Amazon Neptune DB cluster. </p> <p>This data type is used as a response element in the <a>DescribeDBClusters</a> action. </p>",
                                            "properties": {
                                                "AllocatedStorage": {
                                                    "description": " <code>AllocatedStorage</code> always returns 1, because Neptune DB cluster storage size is not fixed, but instead automatically adjusts as needed.",
                                                    "type": "integer"
                                                },
                                                "AssociatedRoles": {
                                                    "description": "Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.",
                                                    "items": {
                                                        "description": "Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.",
                                                        "properties": {
                                                            "RoleArn": {
                                                                "description": "The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.",
                                                                "type": "string"
                                                            },
                                                            "Status": {
                                                                "description": "<p>Describes the state of association between the IAM role and the DB cluster. The Status property returns one of the following values:</p> <ul> <li> <p> <code>ACTIVE</code> - the IAM role ARN is associated with the DB cluster and can be used to access other AWS services on your behalf.</p> </li> <li> <p> <code>PENDING</code> - the IAM role ARN is being associated with the DB cluster.</p> </li> <li> <p> <code>INVALID</code> - the IAM role ARN is associated with the DB cluster, but the DB cluster is unable to assume the IAM role in order to access other AWS services on your behalf.</p> </li> </ul>",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "AvailabilityZones": {
                                                    "description": "Provides the list of EC2 Availability Zones that instances in the DB cluster can be created in.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "BackupRetentionPeriod": {
                                                    "description": "Specifies the number of days for which automatic DB snapshots are retained.",
                                                    "type": "integer"
                                                },
                                                "CharacterSetName": {
                                                    "description": "If present, specifies the name of the character set that this cluster is associated with.",
                                                    "type": "string"
                                                },
                                                "CloneGroupId": {
                                                    "description": "Identifies the clone group to which the DB cluster is associated.",
                                                    "type": "string"
                                                },
                                                "ClusterCreateTime": {
                                                    "description": "Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "DBClusterArn": {
                                                    "description": "The Amazon Resource Name (ARN) for the DB cluster.",
                                                    "type": "string"
                                                },
                                                "DBClusterIdentifier": {
                                                    "description": "Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.",
                                                    "type": "string"
                                                },
                                                "DBClusterMembers": {
                                                    "description": "Provides the list of instances that make up the DB cluster.",
                                                    "items": {
                                                        "description": "Contains information about an instance that is part of a DB cluster.",
                                                        "properties": {
                                                            "DBClusterParameterGroupStatus": {
                                                                "description": "Specifies the status of the DB cluster parameter group for this member of the DB cluster.",
                                                                "type": "string"
                                                            },
                                                            "DBInstanceIdentifier": {
                                                                "description": "Specifies the instance identifier for this member of the DB cluster.",
                                                                "type": "string"
                                                            },
                                                            "IsClusterWriter": {
                                                                "description": "Value that is <code>true</code> if the cluster member is the primary instance for the DB cluster and <code>false</code> otherwise.",
                                                                "type": "boolean"
                                                            },
                                                            "PromotionTier": {
                                                                "description": "A value that specifies the order in which a Read Replica is promoted to the primary instance after a failure of the existing primary instance. ",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "DBClusterOptionGroupMemberships": {
                                                    "description": "Provides the list of option group memberships for this DB cluster.",
                                                    "items": {
                                                        "description": "Contains status information for a DB cluster option group.",
                                                        "properties": {
                                                            "DBClusterOptionGroupName": {
                                                                "description": "Specifies the name of the DB cluster option group.",
                                                                "type": "string"
                                                            },
                                                            "Status": {
                                                                "description": "Specifies the status of the DB cluster option group.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "DBClusterParameterGroup": {
                                                    "description": "Specifies the name of the DB cluster parameter group for the DB cluster.",
                                                    "type": "string"
                                                },
                                                "DBSubnetGroup": {
                                                    "description": "Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group.",
                                                    "type": "string"
                                                },
                                                "DatabaseName": {
                                                    "description": "Contains the name of the initial database of this DB cluster that was provided at create time, if one was specified when the DB cluster was created. This same name is returned for the life of the DB cluster.",
                                                    "type": "string"
                                                },
                                                "DbClusterResourceId": {
                                                    "description": "The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.",
                                                    "type": "string"
                                                },
                                                "EarliestRestorableTime": {
                                                    "description": "Specifies the earliest time to which a database can be restored with point-in-time restore.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Endpoint": {
                                                    "description": "Specifies the connection endpoint for the primary instance of the DB cluster.",
                                                    "type": "string"
                                                },
                                                "Engine": {
                                                    "description": "Provides the name of the database engine to be used for this DB cluster.",
                                                    "type": "string"
                                                },
                                                "EngineVersion": {
                                                    "description": "Indicates the database engine version.",
                                                    "type": "string"
                                                },
                                                "HostedZoneId": {
                                                    "description": "Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.",
                                                    "type": "string"
                                                },
                                                "IAMDatabaseAuthenticationEnabled": {
                                                    "description": "True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.",
                                                    "type": "boolean"
                                                },
                                                "KmsKeyId": {
                                                    "description": "If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB cluster.",
                                                    "type": "string"
                                                },
                                                "LatestRestorableTime": {
                                                    "description": "Specifies the latest time to which a database can be restored with point-in-time restore.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "MasterUsername": {
                                                    "description": "Contains the master username for the DB cluster.",
                                                    "type": "string"
                                                },
                                                "MultiAZ": {
                                                    "description": "Specifies whether the DB cluster has instances in multiple Availability Zones.",
                                                    "type": "boolean"
                                                },
                                                "PercentProgress": {
                                                    "description": "Specifies the progress of the operation as a percentage.",
                                                    "type": "string"
                                                },
                                                "Port": {
                                                    "description": "Specifies the port that the database engine is listening on.",
                                                    "type": "integer"
                                                },
                                                "PreferredBackupWindow": {
                                                    "description": "Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. ",
                                                    "type": "string"
                                                },
                                                "PreferredMaintenanceWindow": {
                                                    "description": "Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
                                                    "type": "string"
                                                },
                                                "ReadReplicaIdentifiers": {
                                                    "description": "Contains one or more identifiers of the Read Replicas associated with this DB cluster.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "ReaderEndpoint": {
                                                    "description": "<p>The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances connections across the Read Replicas that are available in a DB cluster. As clients request new connections to the reader endpoint, Neptune distributes the connection requests among the Read Replicas in the DB cluster. This functionality can help balance your read workload across multiple Read Replicas in your DB cluster. </p> <p>If a failover occurs, and the Read Replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Read Replicas in the cluster, you can then reconnect to the reader endpoint.</p>",
                                                    "type": "string"
                                                },
                                                "ReplicationSourceIdentifier": {
                                                    "description": "Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "Specifies the current state of this DB cluster.",
                                                    "type": "string"
                                                },
                                                "StorageEncrypted": {
                                                    "description": "Specifies whether the DB cluster is encrypted.",
                                                    "type": "boolean"
                                                },
                                                "VpcSecurityGroups": {
                                                    "description": "Provides a list of VPC security groups that the DB cluster belongs to.",
                                                    "items": {
                                                        "description": "This data type is used as a response element for queries on VPC security group membership.",
                                                        "properties": {
                                                            "Status": {
                                                                "description": "The status of the VPC security group.",
                                                                "type": "string"
                                                            },
                                                            "VpcSecurityGroupId": {
                                                                "description": "The name of the VPC security group.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DBClusterAlreadyExistsFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "User already has a DB cluster with the given identifier.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "DBClusterQuotaExceededFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "User attempted to create a new DB cluster and the user has already reached the maximum allowed DB cluster quota.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "482": {
                        "description": "StorageQuotaExceededFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Request would result in user exceeding the allowed amount of storage available across all DB instances.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "483": {
                        "description": "DBSubnetGroupNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "484": {
                        "description": "DBSnapshotNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBSnapshotIdentifier</i> does not refer to an existing DB snapshot. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "485": {
                        "description": "DBClusterSnapshotNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "486": {
                        "description": "InsufficientDBClusterCapacityFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The DB cluster does not have enough capacity for the current operation.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "487": {
                        "description": "InsufficientStorageClusterCapacityFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "There is insufficient storage available for the current action. You may be able to resolve this error by updating your subnet group to use different Availability Zones that have more storage available.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "488": {
                        "description": "InvalidDBSnapshotStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The state of the DB snapshot does not allow deletion.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "489": {
                        "description": "InvalidDBClusterSnapshotStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The supplied value is not a valid DB cluster snapshot state.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "490": {
                        "description": "StorageQuotaExceededFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Request would result in user exceeding the allowed amount of storage available across all DB instances.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "491": {
                        "description": "InvalidVPCNetworkStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "DB subnet group does not cover all Availability Zones after it is created because users' change.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "492": {
                        "description": "InvalidRestoreFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Cannot restore from vpc backup to non-vpc DB instance.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "493": {
                        "description": "DBSubnetGroupNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "494": {
                        "description": "InvalidSubnet",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The requested subnet is invalid, or multiple subnets were requested that are not all in a common VPC.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "495": {
                        "description": "OptionGroupNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "496": {
                        "description": "KMSKeyNotAccessibleFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Error accessing KMS key.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "AvailabilityZones": {
                                        "description": "Provides the list of EC2 Availability Zones that instances in the restored DB cluster can be created in.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "DBClusterIdentifier": {
                                        "description": "<p>The name of the DB cluster to create from the DB snapshot or DB cluster snapshot. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-snapshot-id</code> </p>",
                                        "type": "string"
                                    },
                                    "DBSubnetGroupName": {
                                        "description": "<p>The name of the DB subnet group to use for the new DB cluster.</p> <p>Constraints: If supplied, must match the name of an existing DBSubnetGroup.</p> <p>Example: <code>mySubnetgroup</code> </p>",
                                        "type": "string"
                                    },
                                    "DatabaseName": {
                                        "description": "The database name for the restored DB cluster.",
                                        "type": "string"
                                    },
                                    "EnableIAMDatabaseAuthentication": {
                                        "description": "<p>True to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts, and otherwise false.</p> <p>Default: <code>false</code> </p>",
                                        "type": "boolean"
                                    },
                                    "Engine": {
                                        "description": "<p>The database engine to use for the new DB cluster.</p> <p>Default: The same as source</p> <p>Constraint: Must be compatible with the engine of the source</p>",
                                        "type": "string"
                                    },
                                    "EngineVersion": {
                                        "description": "The version of the database engine to use for the new DB cluster.",
                                        "type": "string"
                                    },
                                    "KmsKeyId": {
                                        "description": "<p>The AWS KMS key identifier to use when restoring an encrypted DB cluster from a DB snapshot or DB cluster snapshot.</p> <p>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are restoring a DB cluster with the same AWS account that owns the KMS encryption key used to encrypt the new DB cluster, then you can use the KMS key alias instead of the ARN for the KMS encryption key.</p> <p>If you do not specify a value for the <code>KmsKeyId</code> parameter, then the following will occur:</p> <ul> <li> <p>If the DB snapshot or DB cluster snapshot in <code>SnapshotIdentifier</code> is encrypted, then the restored DB cluster is encrypted using the KMS key that was used to encrypt the DB snapshot or DB cluster snapshot.</p> </li> <li> <p>If the DB snapshot or DB cluster snapshot in <code>SnapshotIdentifier</code> is not encrypted, then the restored DB cluster is not encrypted.</p> </li> </ul>",
                                        "type": "string"
                                    },
                                    "OptionGroupName": {
                                        "description": "The name of the option group to use for the restored DB cluster.",
                                        "type": "string"
                                    },
                                    "Port": {
                                        "description": "<p>The port number on which the new DB cluster accepts connections.</p> <p>Constraints: Value must be <code>1150-65535</code> </p> <p>Default: The same port as the original DB cluster.</p>",
                                        "type": "integer"
                                    },
                                    "SnapshotIdentifier": {
                                        "description": "<p>The identifier for the DB snapshot or DB cluster snapshot to restore from.</p> <p>You can use either the name or the Amazon Resource Name (ARN) to specify a DB cluster snapshot. However, you can use only the ARN to specify a DB snapshot.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing Snapshot.</p> </li> </ul>",
                                        "type": "string"
                                    },
                                    "Tags": {
                                        "description": "The tags to be assigned to the restored DB cluster.",
                                        "items": {
                                            "description": "Metadata assigned to an Amazon Neptune resource consisting of a key-value pair.",
                                            "properties": {
                                                "Key": {
                                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "VpcSecurityGroupIds": {
                                        "description": "A list of VPC security groups that the new DB cluster will belong to.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "DBClusterIdentifier",
                                    "SnapshotIdentifier",
                                    "Engine"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#RestoreDBClusterToPointInTime": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Restores a DB cluster to an arbitrary point in time. Users can restore to any point in time before <code>LatestRestorableTime</code> for up to <code>BackupRetentionPeriod</code> days. The target DB cluster is created from the source DB cluster with the same configuration as the original DB cluster, except that the new DB cluster is created with the default DB security group. </p> <note> <p>This action only restores the DB cluster, not the DB instances for that DB cluster. You must invoke the <a>CreateDBInstance</a> action to create DB instances for the restored DB cluster, specifying the identifier of the restored DB cluster in <code>DBClusterIdentifier</code>. You can create DB instances only after the <code>RestoreDBClusterToPointInTime</code> action has completed and the DB cluster is available.</p> </note>",
                "operationId": "RestoreDBClusterToPointInTime",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {
                                        "DBCluster": {
                                            "description": "<p>Contains the details of an Amazon Neptune DB cluster. </p> <p>This data type is used as a response element in the <a>DescribeDBClusters</a> action. </p>",
                                            "properties": {
                                                "AllocatedStorage": {
                                                    "description": " <code>AllocatedStorage</code> always returns 1, because Neptune DB cluster storage size is not fixed, but instead automatically adjusts as needed.",
                                                    "type": "integer"
                                                },
                                                "AssociatedRoles": {
                                                    "description": "Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.",
                                                    "items": {
                                                        "description": "Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.",
                                                        "properties": {
                                                            "RoleArn": {
                                                                "description": "The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.",
                                                                "type": "string"
                                                            },
                                                            "Status": {
                                                                "description": "<p>Describes the state of association between the IAM role and the DB cluster. The Status property returns one of the following values:</p> <ul> <li> <p> <code>ACTIVE</code> - the IAM role ARN is associated with the DB cluster and can be used to access other AWS services on your behalf.</p> </li> <li> <p> <code>PENDING</code> - the IAM role ARN is being associated with the DB cluster.</p> </li> <li> <p> <code>INVALID</code> - the IAM role ARN is associated with the DB cluster, but the DB cluster is unable to assume the IAM role in order to access other AWS services on your behalf.</p> </li> </ul>",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "AvailabilityZones": {
                                                    "description": "Provides the list of EC2 Availability Zones that instances in the DB cluster can be created in.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "BackupRetentionPeriod": {
                                                    "description": "Specifies the number of days for which automatic DB snapshots are retained.",
                                                    "type": "integer"
                                                },
                                                "CharacterSetName": {
                                                    "description": "If present, specifies the name of the character set that this cluster is associated with.",
                                                    "type": "string"
                                                },
                                                "CloneGroupId": {
                                                    "description": "Identifies the clone group to which the DB cluster is associated.",
                                                    "type": "string"
                                                },
                                                "ClusterCreateTime": {
                                                    "description": "Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "DBClusterArn": {
                                                    "description": "The Amazon Resource Name (ARN) for the DB cluster.",
                                                    "type": "string"
                                                },
                                                "DBClusterIdentifier": {
                                                    "description": "Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.",
                                                    "type": "string"
                                                },
                                                "DBClusterMembers": {
                                                    "description": "Provides the list of instances that make up the DB cluster.",
                                                    "items": {
                                                        "description": "Contains information about an instance that is part of a DB cluster.",
                                                        "properties": {
                                                            "DBClusterParameterGroupStatus": {
                                                                "description": "Specifies the status of the DB cluster parameter group for this member of the DB cluster.",
                                                                "type": "string"
                                                            },
                                                            "DBInstanceIdentifier": {
                                                                "description": "Specifies the instance identifier for this member of the DB cluster.",
                                                                "type": "string"
                                                            },
                                                            "IsClusterWriter": {
                                                                "description": "Value that is <code>true</code> if the cluster member is the primary instance for the DB cluster and <code>false</code> otherwise.",
                                                                "type": "boolean"
                                                            },
                                                            "PromotionTier": {
                                                                "description": "A value that specifies the order in which a Read Replica is promoted to the primary instance after a failure of the existing primary instance. ",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "DBClusterOptionGroupMemberships": {
                                                    "description": "Provides the list of option group memberships for this DB cluster.",
                                                    "items": {
                                                        "description": "Contains status information for a DB cluster option group.",
                                                        "properties": {
                                                            "DBClusterOptionGroupName": {
                                                                "description": "Specifies the name of the DB cluster option group.",
                                                                "type": "string"
                                                            },
                                                            "Status": {
                                                                "description": "Specifies the status of the DB cluster option group.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "DBClusterParameterGroup": {
                                                    "description": "Specifies the name of the DB cluster parameter group for the DB cluster.",
                                                    "type": "string"
                                                },
                                                "DBSubnetGroup": {
                                                    "description": "Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group.",
                                                    "type": "string"
                                                },
                                                "DatabaseName": {
                                                    "description": "Contains the name of the initial database of this DB cluster that was provided at create time, if one was specified when the DB cluster was created. This same name is returned for the life of the DB cluster.",
                                                    "type": "string"
                                                },
                                                "DbClusterResourceId": {
                                                    "description": "The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.",
                                                    "type": "string"
                                                },
                                                "EarliestRestorableTime": {
                                                    "description": "Specifies the earliest time to which a database can be restored with point-in-time restore.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Endpoint": {
                                                    "description": "Specifies the connection endpoint for the primary instance of the DB cluster.",
                                                    "type": "string"
                                                },
                                                "Engine": {
                                                    "description": "Provides the name of the database engine to be used for this DB cluster.",
                                                    "type": "string"
                                                },
                                                "EngineVersion": {
                                                    "description": "Indicates the database engine version.",
                                                    "type": "string"
                                                },
                                                "HostedZoneId": {
                                                    "description": "Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.",
                                                    "type": "string"
                                                },
                                                "IAMDatabaseAuthenticationEnabled": {
                                                    "description": "True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.",
                                                    "type": "boolean"
                                                },
                                                "KmsKeyId": {
                                                    "description": "If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB cluster.",
                                                    "type": "string"
                                                },
                                                "LatestRestorableTime": {
                                                    "description": "Specifies the latest time to which a database can be restored with point-in-time restore.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "MasterUsername": {
                                                    "description": "Contains the master username for the DB cluster.",
                                                    "type": "string"
                                                },
                                                "MultiAZ": {
                                                    "description": "Specifies whether the DB cluster has instances in multiple Availability Zones.",
                                                    "type": "boolean"
                                                },
                                                "PercentProgress": {
                                                    "description": "Specifies the progress of the operation as a percentage.",
                                                    "type": "string"
                                                },
                                                "Port": {
                                                    "description": "Specifies the port that the database engine is listening on.",
                                                    "type": "integer"
                                                },
                                                "PreferredBackupWindow": {
                                                    "description": "Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. ",
                                                    "type": "string"
                                                },
                                                "PreferredMaintenanceWindow": {
                                                    "description": "Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
                                                    "type": "string"
                                                },
                                                "ReadReplicaIdentifiers": {
                                                    "description": "Contains one or more identifiers of the Read Replicas associated with this DB cluster.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "ReaderEndpoint": {
                                                    "description": "<p>The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances connections across the Read Replicas that are available in a DB cluster. As clients request new connections to the reader endpoint, Neptune distributes the connection requests among the Read Replicas in the DB cluster. This functionality can help balance your read workload across multiple Read Replicas in your DB cluster. </p> <p>If a failover occurs, and the Read Replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Read Replicas in the cluster, you can then reconnect to the reader endpoint.</p>",
                                                    "type": "string"
                                                },
                                                "ReplicationSourceIdentifier": {
                                                    "description": "Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "Specifies the current state of this DB cluster.",
                                                    "type": "string"
                                                },
                                                "StorageEncrypted": {
                                                    "description": "Specifies whether the DB cluster is encrypted.",
                                                    "type": "boolean"
                                                },
                                                "VpcSecurityGroups": {
                                                    "description": "Provides a list of VPC security groups that the DB cluster belongs to.",
                                                    "items": {
                                                        "description": "This data type is used as a response element for queries on VPC security group membership.",
                                                        "properties": {
                                                            "Status": {
                                                                "description": "The status of the VPC security group.",
                                                                "type": "string"
                                                            },
                                                            "VpcSecurityGroupId": {
                                                                "description": "The name of the VPC security group.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "DBClusterAlreadyExistsFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "User already has a DB cluster with the given identifier.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "481": {
                        "description": "DBClusterNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBClusterIdentifier</i> does not refer to an existing DB cluster. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "482": {
                        "description": "DBClusterQuotaExceededFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "User attempted to create a new DB cluster and the user has already reached the maximum allowed DB cluster quota.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "483": {
                        "description": "DBClusterSnapshotNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "484": {
                        "description": "DBSubnetGroupNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": " <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group. ",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "485": {
                        "description": "InsufficientDBClusterCapacityFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The DB cluster does not have enough capacity for the current operation.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "486": {
                        "description": "InsufficientStorageClusterCapacityFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "There is insufficient storage available for the current action. You may be able to resolve this error by updating your subnet group to use different Availability Zones that have more storage available.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "487": {
                        "description": "InvalidDBClusterSnapshotStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The supplied value is not a valid DB cluster snapshot state.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "488": {
                        "description": "InvalidDBClusterStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The DB cluster is not in a valid state.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "489": {
                        "description": "InvalidDBSnapshotStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The state of the DB snapshot does not allow deletion.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "490": {
                        "description": "InvalidRestoreFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Cannot restore from vpc backup to non-vpc DB instance.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "491": {
                        "description": "InvalidSubnet",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "The requested subnet is invalid, or multiple subnets were requested that are not all in a common VPC.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "492": {
                        "description": "InvalidVPCNetworkStateFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "DB subnet group does not cover all Availability Zones after it is created because users' change.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "493": {
                        "description": "KMSKeyNotAccessibleFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Error accessing KMS key.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "494": {
                        "description": "OptionGroupNotFoundFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "495": {
                        "description": "StorageQuotaExceededFault",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "description": "Request would result in user exceeding the allowed amount of storage available across all DB instances.",
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "properties": {
                                    "DBClusterIdentifier": {
                                        "description": "<p>The name of the new DB cluster to be created.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>",
                                        "type": "string"
                                    },
                                    "DBSubnetGroupName": {
                                        "description": "<p>The DB subnet group name to use for the new DB cluster.</p> <p>Constraints: If supplied, must match the name of an existing DBSubnetGroup.</p> <p>Example: <code>mySubnetgroup</code> </p>",
                                        "type": "string"
                                    },
                                    "EnableIAMDatabaseAuthentication": {
                                        "description": "<p>True to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts, and otherwise false.</p> <p>Default: <code>false</code> </p>",
                                        "type": "boolean"
                                    },
                                    "KmsKeyId": {
                                        "description": "<p>The AWS KMS key identifier to use when restoring an encrypted DB cluster from an encrypted DB cluster.</p> <p>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are restoring a DB cluster with the same AWS account that owns the KMS encryption key used to encrypt the new DB cluster, then you can use the KMS key alias instead of the ARN for the KMS encryption key.</p> <p>You can restore to a new DB cluster and encrypt the new DB cluster with a KMS key that is different than the KMS key used to encrypt the source DB cluster. The new DB cluster is encrypted with the KMS key identified by the <code>KmsKeyId</code> parameter.</p> <p>If you do not specify a value for the <code>KmsKeyId</code> parameter, then the following will occur:</p> <ul> <li> <p>If the DB cluster is encrypted, then the restored DB cluster is encrypted using the KMS key that was used to encrypt the source DB cluster.</p> </li> <li> <p>If the DB cluster is not encrypted, then the restored DB cluster is not encrypted.</p> </li> </ul> <p>If <code>DBClusterIdentifier</code> refers to a DB cluster that is not encrypted, then the restore request is rejected.</p>",
                                        "type": "string"
                                    },
                                    "OptionGroupName": {
                                        "description": "The name of the option group for the new DB cluster.",
                                        "type": "string"
                                    },
                                    "Port": {
                                        "description": "<p>The port number on which the new DB cluster accepts connections.</p> <p>Constraints: Value must be <code>1150-65535</code> </p> <p>Default: The same port as the original DB cluster.</p>",
                                        "type": "integer"
                                    },
                                    "RestoreToTime": {
                                        "description": "<p>The date and time to restore the DB cluster to.</p> <p>Valid Values: Value must be a time in Universal Coordinated Time (UTC) format</p> <p>Constraints:</p> <ul> <li> <p>Must be before the latest restorable time for the DB instance</p> </li> <li> <p>Must be specified if <code>UseLatestRestorableTime</code> parameter is not provided</p> </li> <li> <p>Cannot be specified if <code>UseLatestRestorableTime</code> parameter is true</p> </li> <li> <p>Cannot be specified if <code>RestoreType</code> parameter is <code>copy-on-write</code> </p> </li> </ul> <p>Example: <code>2015-03-07T23:45:00Z</code> </p>",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "RestoreType": {
                                        "description": "<p>The type of restore to be performed. You can specify one of the following values:</p> <ul> <li> <p> <code>full-copy</code> - The new DB cluster is restored as a full copy of the source DB cluster.</p> </li> <li> <p> <code>copy-on-write</code> - The new DB cluster is restored as a clone of the source DB cluster.</p> </li> </ul> <p>Constraints: You can't specify <code>copy-on-write</code> if the engine version of the source DB cluster is earlier than 1.11.</p> <p>If you don't specify a <code>RestoreType</code> value, then the new DB cluster is restored as a full copy of the source DB cluster.</p>",
                                        "type": "string"
                                    },
                                    "SourceDBClusterIdentifier": {
                                        "description": "<p>The identifier of the source DB cluster from which to restore.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBCluster.</p> </li> </ul>",
                                        "type": "string"
                                    },
                                    "Tags": {
                                        "description": "A list of tags. For more information, see <a href=\"http://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html\">Tagging Amazon Neptune Resources</a>. ",
                                        "items": {
                                            "description": "Metadata assigned to an Amazon Neptune resource consisting of a key-value pair.",
                                            "properties": {
                                                "Key": {
                                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "UseLatestRestorableTime": {
                                        "description": "<p>A value that is set to <code>true</code> to restore the DB cluster to the latest restorable backup time, and <code>false</code> otherwise. </p> <p>Default: <code>false</code> </p> <p>Constraints: Cannot be specified if <code>RestoreToTime</code> parameter is provided.</p>",
                                        "type": "boolean"
                                    },
                                    "VpcSecurityGroupIds": {
                                        "description": "A list of VPC security groups that the new DB cluster belongs to.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "DBClusterIdentifier",
                                    "SourceDBClusterIdentifier"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AddRoleToDBClusterMessage": {
                "properties": {
                    "DBClusterIdentifier": {
                        "description": "The name of the DB cluster to associate the IAM role with.",
                        "type": "string"
                    },
                    "RoleArn": {
                        "description": "The Amazon Resource Name (ARN) of the IAM role to associate with the Neptune DB cluster, for example <code>arn:aws:iam::123456789012:role/NeptuneAccessRole</code>.",
                        "type": "string"
                    }
                },
                "required": [
                    "DBClusterIdentifier",
                    "RoleArn"
                ],
                "type": "object"
            },
            "AddSourceIdentifierToSubscriptionMessage": {
                "description": "<p/>",
                "properties": {
                    "SourceIdentifier": {
                        "description": "<p>The identifier of the event source to be added.</p> <p>Constraints:</p> <ul> <li> <p>If the source type is a DB instance, then a <code>DBInstanceIdentifier</code> must be supplied.</p> </li> <li> <p>If the source type is a DB security group, a <code>DBSecurityGroupName</code> must be supplied.</p> </li> <li> <p>If the source type is a DB parameter group, a <code>DBParameterGroupName</code> must be supplied.</p> </li> <li> <p>If the source type is a DB snapshot, a <code>DBSnapshotIdentifier</code> must be supplied.</p> </li> </ul>",
                        "type": "string"
                    },
                    "SubscriptionName": {
                        "description": "The name of the event notification subscription you want to add a source identifier to.",
                        "type": "string"
                    }
                },
                "required": [
                    "SubscriptionName",
                    "SourceIdentifier"
                ],
                "type": "object"
            },
            "AddSourceIdentifierToSubscriptionResult": {
                "properties": {
                    "EventSubscription": {
                        "description": "Contains the results of a successful invocation of the <a>DescribeEventSubscriptions</a> action.",
                        "properties": {
                            "CustSubscriptionId": {
                                "description": "The event notification subscription Id.",
                                "type": "string"
                            },
                            "CustomerAwsId": {
                                "description": "The AWS customer account associated with the event notification subscription.",
                                "type": "string"
                            },
                            "Enabled": {
                                "description": "A Boolean value indicating if the subscription is enabled. True indicates the subscription is enabled.",
                                "type": "boolean"
                            },
                            "EventCategoriesList": {
                                "description": "A list of event categories for the event notification subscription.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "EventSubscriptionArn": {
                                "description": "The Amazon Resource Name (ARN) for the event subscription.",
                                "type": "string"
                            },
                            "SnsTopicArn": {
                                "description": "The topic ARN of the event notification subscription.",
                                "type": "string"
                            },
                            "SourceIdsList": {
                                "description": "A list of source IDs for the event notification subscription.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "SourceType": {
                                "description": "The source type for the event notification subscription.",
                                "type": "string"
                            },
                            "Status": {
                                "description": "<p>The status of the event notification subscription.</p> <p>Constraints:</p> <p>Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist</p> <p>The status \"no-permission\" indicates that Neptune no longer has permission to post to the SNS topic. The status \"topic-not-exist\" indicates that the topic was deleted after the subscription was created.</p>",
                                "type": "string"
                            },
                            "SubscriptionCreationTime": {
                                "description": "The time the event notification subscription was created.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "AddTagsToResourceMessage": {
                "description": "<p/>",
                "properties": {
                    "ResourceName": {
                        "description": "The Amazon Neptune resource that the tags are added to. This value is an Amazon Resource Name (ARN). For information about creating an ARN, see <a href=\"http://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing\"> Constructing an Amazon Resource Name (ARN)</a>.",
                        "type": "string"
                    },
                    "Tags": {
                        "description": "The tags to be assigned to the Amazon Neptune resource.",
                        "items": {
                            "description": "Metadata assigned to an Amazon Neptune resource consisting of a key-value pair.",
                            "properties": {
                                "Key": {
                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "ResourceName",
                    "Tags"
                ],
                "type": "object"
            },
            "ApplyMethod": {
                "enum": [
                    "immediate",
                    "pending-reboot"
                ],
                "type": "string"
            },
            "ApplyPendingMaintenanceActionMessage": {
                "description": "<p/>",
                "properties": {
                    "ApplyAction": {
                        "description": "<p>The pending maintenance action to apply to this resource.</p> <p>Valid values: <code>system-update</code>, <code>db-upgrade</code> </p>",
                        "type": "string"
                    },
                    "OptInType": {
                        "description": "<p>A value that specifies the type of opt-in request, or undoes an opt-in request. An opt-in request of type <code>immediate</code> can't be undone.</p> <p>Valid values:</p> <ul> <li> <p> <code>immediate</code> - Apply the maintenance action immediately.</p> </li> <li> <p> <code>next-maintenance</code> - Apply the maintenance action during the next maintenance window for the resource.</p> </li> <li> <p> <code>undo-opt-in</code> - Cancel any existing <code>next-maintenance</code> opt-in requests.</p> </li> </ul>",
                        "type": "string"
                    },
                    "ResourceIdentifier": {
                        "description": "The Amazon Resource Name (ARN) of the resource that the pending maintenance action applies to. For information about creating an ARN, see <a href=\"http://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing\"> Constructing an Amazon Resource Name (ARN)</a>.",
                        "type": "string"
                    }
                },
                "required": [
                    "ResourceIdentifier",
                    "ApplyAction",
                    "OptInType"
                ],
                "type": "object"
            },
            "ApplyPendingMaintenanceActionResult": {
                "properties": {
                    "ResourcePendingMaintenanceActions": {
                        "description": "Describes the pending maintenance actions for a resource.",
                        "properties": {
                            "PendingMaintenanceActionDetails": {
                                "description": "A list that provides details about the pending maintenance actions for the resource.",
                                "items": {
                                    "description": "Provides information about a pending maintenance action for a resource.",
                                    "properties": {
                                        "Action": {
                                            "description": "The type of pending maintenance action that is available for the resource.",
                                            "type": "string"
                                        },
                                        "AutoAppliedAfterDate": {
                                            "description": "The date of the maintenance window when the action is applied. The maintenance action is applied to the resource during its first maintenance window after this date. If this date is specified, any <code>next-maintenance</code> opt-in requests are ignored.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "CurrentApplyDate": {
                                            "description": "The effective date when the pending maintenance action is applied to the resource. This date takes into account opt-in requests received from the <a>ApplyPendingMaintenanceAction</a> API, the <code>AutoAppliedAfterDate</code>, and the <code>ForcedApplyDate</code>. This value is blank if an opt-in request has not been received and nothing has been specified as <code>AutoAppliedAfterDate</code> or <code>ForcedApplyDate</code>.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Description": {
                                            "description": "A description providing more detail about the maintenance action.",
                                            "type": "string"
                                        },
                                        "ForcedApplyDate": {
                                            "description": "The date when the maintenance action is automatically applied. The maintenance action is applied to the resource on this date regardless of the maintenance window for the resource. If this date is specified, any <code>immediate</code> opt-in requests are ignored.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "OptInStatus": {
                                            "description": "Indicates the type of opt-in request that has been received for the resource.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "ResourceIdentifier": {
                                "description": "The ARN of the resource that has pending maintenance actions.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "AttributeValueList": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "AuthorizationNotFoundFault": {
                "description": "<p>Specified CIDRIP or EC2 security group is not authorized for the specified DB security group.</p> <p>Neptune may not also be authorized via IAM to perform necessary actions on your behalf.</p>",
                "properties": {},
                "type": "object"
            },
            "AvailabilityZone": {
                "description": "<p>Contains Availability Zone information.</p> <p> This data type is used as an element in the following data type:</p> <ul> <li> <p> <a>OrderableDBInstanceOption</a> </p> </li> </ul>",
                "properties": {
                    "Name": {
                        "description": "The name of the availability zone.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AvailabilityZoneList": {
                "items": {
                    "description": "<p>Contains Availability Zone information.</p> <p> This data type is used as an element in the following data type:</p> <ul> <li> <p> <a>OrderableDBInstanceOption</a> </p> </li> </ul>",
                    "properties": {
                        "Name": {
                            "description": "The name of the availability zone.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "AvailabilityZones": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "Boolean": {
                "type": "boolean"
            },
            "BooleanOptional": {
                "type": "boolean"
            },
            "CertificateNotFoundFault": {
                "description": " <i>CertificateIdentifier</i> does not refer to an existing certificate. ",
                "properties": {},
                "type": "object"
            },
            "CharacterSet": {
                "description": " This data type is used as a response element in the action <a>DescribeDBEngineVersions</a>. ",
                "properties": {
                    "CharacterSetDescription": {
                        "description": "The description of the character set.",
                        "type": "string"
                    },
                    "CharacterSetName": {
                        "description": "The name of the character set.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CloudwatchLogsExportConfiguration": {
                "description": "The configuration setting for the log types to be enabled for export to CloudWatch Logs for a specific DB instance or DB cluster.",
                "properties": {
                    "DisableLogTypes": {
                        "description": "The list of log types to disable.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "EnableLogTypes": {
                        "description": "The list of log types to enable.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "CopyDBClusterParameterGroupMessage": {
                "properties": {
                    "SourceDBClusterParameterGroupIdentifier": {
                        "description": "<p>The identifier or Amazon Resource Name (ARN) for the source DB cluster parameter group. For information about creating an ARN, see <a href=\"http://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing\"> Constructing an Amazon Resource Name (ARN)</a>. </p> <p>Constraints:</p> <ul> <li> <p>Must specify a valid DB cluster parameter group.</p> </li> <li> <p>If the source DB cluster parameter group is in the same AWS Region as the copy, specify a valid DB parameter group identifier, for example <code>my-db-cluster-param-group</code>, or a valid ARN.</p> </li> <li> <p>If the source DB parameter group is in a different AWS Region than the copy, specify a valid DB cluster parameter group ARN, for example <code>arn:aws:rds:us-east-1:123456789012:cluster-pg:custom-cluster-group1</code>.</p> </li> </ul>",
                        "type": "string"
                    },
                    "Tags": {
                        "description": "A list of tags. For more information, see <a href=\"http://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html\">Tagging Amazon Neptune Resources</a>. ",
                        "items": {
                            "description": "Metadata assigned to an Amazon Neptune resource consisting of a key-value pair.",
                            "properties": {
                                "Key": {
                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "TargetDBClusterParameterGroupDescription": {
                        "description": "A description for the copied DB cluster parameter group.",
                        "type": "string"
                    },
                    "TargetDBClusterParameterGroupIdentifier": {
                        "description": "<p>The identifier for the copied DB cluster parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Cannot be null, empty, or blank</p> </li> <li> <p>Must contain from 1 to 255 letters, numbers, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-cluster-param-group1</code> </p>",
                        "type": "string"
                    }
                },
                "required": [
                    "SourceDBClusterParameterGroupIdentifier",
                    "TargetDBClusterParameterGroupIdentifier",
                    "TargetDBClusterParameterGroupDescription"
                ],
                "type": "object"
            },
            "CopyDBClusterParameterGroupResult": {
                "properties": {
                    "DBClusterParameterGroup": {
                        "description": "<p>Contains the details of an Amazon Neptune DB cluster parameter group. </p> <p>This data type is used as a response element in the <a>DescribeDBClusterParameterGroups</a> action. </p>",
                        "properties": {
                            "DBClusterParameterGroupArn": {
                                "description": "The Amazon Resource Name (ARN) for the DB cluster parameter group.",
                                "type": "string"
                            },
                            "DBClusterParameterGroupName": {
                                "description": "Provides the name of the DB cluster parameter group.",
                                "type": "string"
                            },
                            "DBParameterGroupFamily": {
                                "description": "Provides the name of the DB parameter group family that this DB cluster parameter group is compatible with.",
                                "type": "string"
                            },
                            "Description": {
                                "description": "Provides the customer-specified description for this DB cluster parameter group.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CopyDBClusterSnapshotMessage": {
                "description": "<p/>",
                "properties": {
                    "CopyTags": {
                        "description": "True to copy all tags from the source DB cluster snapshot to the target DB cluster snapshot, and otherwise false. The default is false.",
                        "type": "boolean"
                    },
                    "KmsKeyId": {
                        "description": "<p>The AWS AWS KMS key ID for an encrypted DB cluster snapshot. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key. </p> <p>If you copy an unencrypted DB cluster snapshot and specify a value for the <code>KmsKeyId</code> parameter, Amazon Neptune encrypts the target DB cluster snapshot using the specified KMS encryption key. </p> <p>If you copy an encrypted DB cluster snapshot from your AWS account, you can specify a value for <code>KmsKeyId</code> to encrypt the copy with a new KMS encryption key. If you don't specify a value for <code>KmsKeyId</code>, then the copy of the DB cluster snapshot is encrypted with the same KMS key as the source DB cluster snapshot. </p> <p>If you copy an encrypted DB cluster snapshot that is shared from another AWS account, then you must specify a value for <code>KmsKeyId</code>. </p> <p>To copy an encrypted DB cluster snapshot to another AWS Region, you must set <code>KmsKeyId</code> to the KMS key ID you want to use to encrypt the copy of the DB cluster snapshot in the destination AWS Region. KMS encryption keys are specific to the AWS Region that they are created in, and you can't use encryption keys from one AWS Region in another AWS Region.</p>",
                        "type": "string"
                    },
                    "PreSignedUrl": {
                        "description": "<p>The URL that contains a Signature Version 4 signed request for the <code>CopyDBClusterSnapshot</code> API action in the AWS Region that contains the source DB cluster snapshot to copy. The <code>PreSignedUrl</code> parameter must be used when copying an encrypted DB cluster snapshot from another AWS Region.</p> <p>The pre-signed URL must be a valid request for the <code>CopyDBSClusterSnapshot</code> API action that can be executed in the source AWS Region that contains the encrypted DB cluster snapshot to be copied. The pre-signed URL request must contain the following parameter values:</p> <ul> <li> <p> <code>KmsKeyId</code> - The AWS KMS key identifier for the key to use to encrypt the copy of the DB cluster snapshot in the destination AWS Region. This is the same identifier for both the <code>CopyDBClusterSnapshot</code> action that is called in the destination AWS Region, and the action contained in the pre-signed URL.</p> </li> <li> <p> <code>DestinationRegion</code> - The name of the AWS Region that the DB cluster snapshot will be created in.</p> </li> <li> <p> <code>SourceDBClusterSnapshotIdentifier</code> - The DB cluster snapshot identifier for the encrypted DB cluster snapshot to be copied. This identifier must be in the Amazon Resource Name (ARN) format for the source AWS Region. For example, if you are copying an encrypted DB cluster snapshot from the us-west-2 AWS Region, then your <code>SourceDBClusterSnapshotIdentifier</code> looks like the following example: <code>arn:aws:rds:us-west-2:123456789012:cluster-snapshot:neptune-cluster1-snapshot-20161115</code>.</p> </li> </ul> <p>To learn how to generate a Signature Version 4 signed request, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html\"> Authenticating Requests: Using Query Parameters (AWS Signature Version 4)</a> and <a href=\"http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\"> Signature Version 4 Signing Process</a>.</p>",
                        "type": "string"
                    },
                    "SourceDBClusterSnapshotIdentifier": {
                        "description": "<p>The identifier of the DB cluster snapshot to copy. This parameter is not case-sensitive.</p> <p>You can't copy an encrypted, shared DB cluster snapshot from one AWS Region to another.</p> <p>Constraints:</p> <ul> <li> <p>Must specify a valid system snapshot in the \"available\" state.</p> </li> <li> <p>If the source snapshot is in the same AWS Region as the copy, specify a valid DB snapshot identifier.</p> </li> <li> <p>If the source snapshot is in a different AWS Region than the copy, specify a valid DB cluster snapshot ARN. </p> </li> </ul> <p>Example: <code>my-cluster-snapshot1</code> </p>",
                        "type": "string"
                    },
                    "Tags": {
                        "description": "A list of tags. For more information, see <a href=\"http://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html\">Tagging Amazon Neptune Resources</a>. ",
                        "items": {
                            "description": "Metadata assigned to an Amazon Neptune resource consisting of a key-value pair.",
                            "properties": {
                                "Key": {
                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "TargetDBClusterSnapshotIdentifier": {
                        "description": "<p>The identifier of the new DB cluster snapshot to create from the source DB cluster snapshot. This parameter is not case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster-snapshot2</code> </p>",
                        "type": "string"
                    }
                },
                "required": [
                    "SourceDBClusterSnapshotIdentifier",
                    "TargetDBClusterSnapshotIdentifier"
                ],
                "type": "object"
            },
            "CopyDBClusterSnapshotResult": {
                "properties": {
                    "DBClusterSnapshot": {
                        "description": "<p>Contains the details for an Amazon Neptune DB cluster snapshot </p> <p>This data type is used as a response element in the <a>DescribeDBClusterSnapshots</a> action. </p>",
                        "properties": {
                            "AllocatedStorage": {
                                "description": "Specifies the allocated storage size in gibibytes (GiB).",
                                "type": "integer"
                            },
                            "AvailabilityZones": {
                                "description": "Provides the list of EC2 Availability Zones that instances in the DB cluster snapshot can be restored in.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "ClusterCreateTime": {
                                "description": "Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).",
                                "format": "date-time",
                                "type": "string"
                            },
                            "DBClusterIdentifier": {
                                "description": "Specifies the DB cluster identifier of the DB cluster that this DB cluster snapshot was created from.",
                                "type": "string"
                            },
                            "DBClusterSnapshotArn": {
                                "description": "The Amazon Resource Name (ARN) for the DB cluster snapshot.",
                                "type": "string"
                            },
                            "DBClusterSnapshotIdentifier": {
                                "description": "Specifies the identifier for the DB cluster snapshot.",
                                "type": "string"
                            },
                            "Engine": {
                                "description": "Specifies the name of the database engine.",
                                "type": "string"
                            },
                            "EngineVersion": {
                                "description": "Provides the version of the database engine for this DB cluster snapshot.",
                                "type": "string"
                            },
                            "IAMDatabaseAuthenticationEnabled": {
                                "description": "True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.",
                                "type": "boolean"
                            },
                            "KmsKeyId": {
                                "description": "If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB cluster snapshot.",
                                "type": "string"
                            },
                            "LicenseModel": {
                                "description": "Provides the license model information for this DB cluster snapshot.",
                                "type": "string"
                            },
                            "MasterUsername": {
                                "description": "Provides the master username for the DB cluster snapshot.",
                                "type": "string"
                            },
                            "PercentProgress": {
                                "description": "Specifies the percentage of the estimated data that has been transferred.",
                                "type": "integer"
                            },
                            "Port": {
                                "description": "Specifies the port that the DB cluster was listening on at the time of the snapshot.",
                                "type": "integer"
                            },
                            "SnapshotCreateTime": {
                                "description": "Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).",
                                "format": "date-time",
                                "type": "string"
                            },
                            "SnapshotType": {
                                "description": "Provides the type of the DB cluster snapshot.",
                                "type": "string"
                            },
                            "SourceDBClusterSnapshotArn": {
                                "description": "If the DB cluster snapshot was copied from a source DB cluster snapshot, the Amazon Resource Name (ARN) for the source DB cluster snapshot, otherwise, a null value.",
                                "type": "string"
                            },
                            "Status": {
                                "description": "Specifies the status of this DB cluster snapshot.",
                                "type": "string"
                            },
                            "StorageEncrypted": {
                                "description": "Specifies whether the DB cluster snapshot is encrypted.",
                                "type": "boolean"
                            },
                            "VpcId": {
                                "description": "Provides the VPC ID associated with the DB cluster snapshot.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CopyDBParameterGroupMessage": {
                "description": "<p/>",
                "properties": {
                    "SourceDBParameterGroupIdentifier": {
                        "description": "<p> The identifier or ARN for the source DB parameter group. For information about creating an ARN, see <a href=\"http://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing\"> Constructing an Amazon Resource Name (ARN)</a>. </p> <p>Constraints:</p> <ul> <li> <p>Must specify a valid DB parameter group.</p> </li> <li> <p>Must specify a valid DB parameter group identifier, for example <code>my-db-param-group</code>, or a valid ARN.</p> </li> </ul>",
                        "type": "string"
                    },
                    "Tags": {
                        "description": "A list of tags. For more information, see <a href=\"http://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html\">Tagging Amazon Neptune Resources</a>. ",
                        "items": {
                            "description": "Metadata assigned to an Amazon Neptune resource consisting of a key-value pair.",
                            "properties": {
                                "Key": {
                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "TargetDBParameterGroupDescription": {
                        "description": "A description for the copied DB parameter group.",
                        "type": "string"
                    },
                    "TargetDBParameterGroupIdentifier": {
                        "description": "<p>The identifier for the copied DB parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Cannot be null, empty, or blank</p> </li> <li> <p>Must contain from 1 to 255 letters, numbers, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-db-parameter-group</code> </p>",
                        "type": "string"
                    }
                },
                "required": [
                    "SourceDBParameterGroupIdentifier",
                    "TargetDBParameterGroupIdentifier",
                    "TargetDBParameterGroupDescription"
                ],
                "type": "object"
            },
            "CopyDBParameterGroupResult": {
                "properties": {
                    "DBParameterGroup": {
                        "description": "<p>Contains the details of an Amazon Neptune DB parameter group. </p> <p>This data type is used as a response element in the <a>DescribeDBParameterGroups</a> action. </p>",
                        "properties": {
                            "DBParameterGroupArn": {
                                "description": "The Amazon Resource Name (ARN) for the DB parameter group.",
                                "type": "string"
                            },
                            "DBParameterGroupFamily": {
                                "description": "Provides the name of the DB parameter group family that this DB parameter group is compatible with.",
                                "type": "string"
                            },
                            "DBParameterGroupName": {
                                "description": "Provides the name of the DB parameter group.",
                                "type": "string"
                            },
                            "Description": {
                                "description": "Provides the customer-specified description for this DB parameter group.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CreateDBClusterMessage": {
                "description": "<p/>",
                "properties": {
                    "AvailabilityZones": {
                        "description": "A list of EC2 Availability Zones that instances in the DB cluster can be created in. ",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "BackupRetentionPeriod": {
                        "description": "<p>The number of days for which automated backups are retained. You must specify a minimum value of 1.</p> <p>Default: 1</p> <p>Constraints:</p> <ul> <li> <p>Must be a value from 1 to 35</p> </li> </ul>",
                        "type": "integer"
                    },
                    "CharacterSetName": {
                        "description": "A value that indicates that the DB cluster should be associated with the specified CharacterSet.",
                        "type": "string"
                    },
                    "DBClusterIdentifier": {
                        "description": "<p>The DB cluster identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster1</code> </p>",
                        "type": "string"
                    },
                    "DBClusterParameterGroupName": {
                        "description": "<p> The name of the DB cluster parameter group to associate with this DB cluster. If this argument is omitted, the default is used. </p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DBClusterParameterGroup.</p> </li> </ul>",
                        "type": "string"
                    },
                    "DBSubnetGroupName": {
                        "description": "<p>A DB subnet group to associate with this DB cluster.</p> <p>Constraints: Must match the name of an existing DBSubnetGroup. Must not be default.</p> <p>Example: <code>mySubnetgroup</code> </p>",
                        "type": "string"
                    },
                    "DatabaseName": {
                        "description": "The name for your database of up to 64 alpha-numeric characters. If you do not provide a name, Amazon Neptune will not create a database in the DB cluster you are creating.",
                        "type": "string"
                    },
                    "EnableIAMDatabaseAuthentication": {
                        "description": "<p>True to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts, and otherwise false.</p> <p>Default: <code>false</code> </p>",
                        "type": "boolean"
                    },
                    "Engine": {
                        "description": "<p>The name of the database engine to be used for this DB cluster.</p> <p>Valid Values: <code>neptune</code> </p>",
                        "type": "string"
                    },
                    "EngineVersion": {
                        "description": "<p>The version number of the database engine to use.</p> <p>Example: <code>1.0.1</code> </p>",
                        "type": "string"
                    },
                    "KmsKeyId": {
                        "description": "<p>The AWS KMS key identifier for an encrypted DB cluster.</p> <p>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are creating a DB cluster with the same AWS account that owns the KMS encryption key used to encrypt the new DB cluster, then you can use the KMS key alias instead of the ARN for the KMS encryption key.</p> <p>If an encryption key is not specified in <code>KmsKeyId</code>:</p> <ul> <li> <p>If <code>ReplicationSourceIdentifier</code> identifies an encrypted source, then Amazon Neptune will use the encryption key used to encrypt the source. Otherwise, Amazon Neptune will use your default encryption key. </p> </li> <li> <p>If the <code>StorageEncrypted</code> parameter is true and <code>ReplicationSourceIdentifier</code> is not specified, then Amazon Neptune will use your default encryption key.</p> </li> </ul> <p>AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.</p> <p>If you create a Read Replica of an encrypted DB cluster in another AWS Region, you must set <code>KmsKeyId</code> to a KMS key ID that is valid in the destination AWS Region. This key is used to encrypt the Read Replica in that AWS Region.</p>",
                        "type": "string"
                    },
                    "MasterUserPassword": {
                        "description": "<p>The password for the master database user. This password can contain any printable ASCII character except \"/\", \"\"\", or \"@\".</p> <p>Constraints: Must contain from 8 to 41 characters.</p>",
                        "type": "string"
                    },
                    "MasterUsername": {
                        "description": "<p>The name of the master user for the DB cluster.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 16 letters or numbers.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot be a reserved word for the chosen database engine.</p> </li> </ul>",
                        "type": "string"
                    },
                    "OptionGroupName": {
                        "description": "<p>A value that indicates that the DB cluster should be associated with the specified option group.</p> <p>Permanent options can't be removed from an option group. The option group can't be removed from a DB cluster once it is associated with a DB cluster.</p>",
                        "type": "string"
                    },
                    "Port": {
                        "description": "<p>The port number on which the instances in the DB cluster accept connections.</p> <p> Default: <code>8182</code> </p>",
                        "type": "integer"
                    },
                    "PreSignedUrl": {
                        "description": "<p>A URL that contains a Signature Version 4 signed request for the <code>CreateDBCluster</code> action to be called in the source AWS Region where the DB cluster is replicated from. You only need to specify <code>PreSignedUrl</code> when you are performing cross-region replication from an encrypted DB cluster.</p> <p>The pre-signed URL must be a valid request for the <code>CreateDBCluster</code> API action that can be executed in the source AWS Region that contains the encrypted DB cluster to be copied.</p> <p>The pre-signed URL request must contain the following parameter values:</p> <ul> <li> <p> <code>KmsKeyId</code> - The AWS KMS key identifier for the key to use to encrypt the copy of the DB cluster in the destination AWS Region. This should refer to the same KMS key for both the <code>CreateDBCluster</code> action that is called in the destination AWS Region, and the action contained in the pre-signed URL.</p> </li> <li> <p> <code>DestinationRegion</code> - The name of the AWS Region that Read Replica will be created in.</p> </li> <li> <p> <code>ReplicationSourceIdentifier</code> - The DB cluster identifier for the encrypted DB cluster to be copied. This identifier must be in the Amazon Resource Name (ARN) format for the source AWS Region. For example, if you are copying an encrypted DB cluster from the us-west-2 AWS Region, then your <code>ReplicationSourceIdentifier</code> would look like Example: <code>arn:aws:rds:us-west-2:123456789012:cluster:neptune-cluster1</code>.</p> </li> </ul> <p>To learn how to generate a Signature Version 4 signed request, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html\"> Authenticating Requests: Using Query Parameters (AWS Signature Version 4)</a> and <a href=\"http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\"> Signature Version 4 Signing Process</a>.</p>",
                        "type": "string"
                    },
                    "PreferredBackupWindow": {
                        "description": "<p>The daily time range during which automated backups are created if automated backups are enabled using the <code>BackupRetentionPeriod</code> parameter. </p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region. To see the time blocks available, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html\"> Adjusting the Preferred Maintenance Window</a> in the <i>Amazon Neptune User Guide.</i> </p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred maintenance window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul>",
                        "type": "string"
                    },
                    "PreferredMaintenanceWindow": {
                        "description": "<p>The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).</p> <p>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region, occurring on a random day of the week. To see the time blocks available, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html\"> Adjusting the Preferred Maintenance Window</a> in the <i>Amazon Neptune User Guide.</i> </p> <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</p> <p>Constraints: Minimum 30-minute window.</p>",
                        "type": "string"
                    },
                    "ReplicationSourceIdentifier": {
                        "description": "The Amazon Resource Name (ARN) of the source DB instance or DB cluster if this DB cluster is created as a Read Replica.",
                        "type": "string"
                    },
                    "StorageEncrypted": {
                        "description": "Specifies whether the DB cluster is encrypted.",
                        "type": "boolean"
                    },
                    "Tags": {
                        "description": "A list of tags. For more information, see <a href=\"http://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html\">Tagging Amazon Neptune Resources</a>. ",
                        "items": {
                            "description": "Metadata assigned to an Amazon Neptune resource consisting of a key-value pair.",
                            "properties": {
                                "Key": {
                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "VpcSecurityGroupIds": {
                        "description": "A list of EC2 VPC security groups to associate with this DB cluster.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "DBClusterIdentifier",
                    "Engine"
                ],
                "type": "object"
            },
            "CreateDBClusterParameterGroupMessage": {
                "description": "<p/>",
                "properties": {
                    "DBClusterParameterGroupName": {
                        "description": "<p>The name of the DB cluster parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must match the name of an existing DBClusterParameterGroup.</p> </li> </ul> <note> <p>This value is stored as a lowercase string.</p> </note>",
                        "type": "string"
                    },
                    "DBParameterGroupFamily": {
                        "description": "The DB cluster parameter group family name. A DB cluster parameter group can be associated with one and only one DB cluster parameter group family, and can be applied only to a DB cluster running a database engine and engine version compatible with that DB cluster parameter group family.",
                        "type": "string"
                    },
                    "Description": {
                        "description": "The description for the DB cluster parameter group.",
                        "type": "string"
                    },
                    "Tags": {
                        "description": "A list of tags. For more information, see <a href=\"http://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html\">Tagging Amazon Neptune Resources</a>. ",
                        "items": {
                            "description": "Metadata assigned to an Amazon Neptune resource consisting of a key-value pair.",
                            "properties": {
                                "Key": {
                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "DBClusterParameterGroupName",
                    "DBParameterGroupFamily",
                    "Description"
                ],
                "type": "object"
            },
            "CreateDBClusterParameterGroupResult": {
                "properties": {
                    "DBClusterParameterGroup": {
                        "description": "<p>Contains the details of an Amazon Neptune DB cluster parameter group. </p> <p>This data type is used as a response element in the <a>DescribeDBClusterParameterGroups</a> action. </p>",
                        "properties": {
                            "DBClusterParameterGroupArn": {
                                "description": "The Amazon Resource Name (ARN) for the DB cluster parameter group.",
                                "type": "string"
                            },
                            "DBClusterParameterGroupName": {
                                "description": "Provides the name of the DB cluster parameter group.",
                                "type": "string"
                            },
                            "DBParameterGroupFamily": {
                                "description": "Provides the name of the DB parameter group family that this DB cluster parameter group is compatible with.",
                                "type": "string"
                            },
                            "Description": {
                                "description": "Provides the customer-specified description for this DB cluster parameter group.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CreateDBClusterResult": {
                "properties": {
                    "DBCluster": {
                        "description": "<p>Contains the details of an Amazon Neptune DB cluster. </p> <p>This data type is used as a response element in the <a>DescribeDBClusters</a> action. </p>",
                        "properties": {
                            "AllocatedStorage": {
                                "description": " <code>AllocatedStorage</code> always returns 1, because Neptune DB cluster storage size is not fixed, but instead automatically adjusts as needed.",
                                "type": "integer"
                            },
                            "AssociatedRoles": {
                                "description": "Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.",
                                "items": {
                                    "description": "Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.",
                                    "properties": {
                                        "RoleArn": {
                                            "description": "The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "<p>Describes the state of association between the IAM role and the DB cluster. The Status property returns one of the following values:</p> <ul> <li> <p> <code>ACTIVE</code> - the IAM role ARN is associated with the DB cluster and can be used to access other AWS services on your behalf.</p> </li> <li> <p> <code>PENDING</code> - the IAM role ARN is being associated with the DB cluster.</p> </li> <li> <p> <code>INVALID</code> - the IAM role ARN is associated with the DB cluster, but the DB cluster is unable to assume the IAM role in order to access other AWS services on your behalf.</p> </li> </ul>",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "AvailabilityZones": {
                                "description": "Provides the list of EC2 Availability Zones that instances in the DB cluster can be created in.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "BackupRetentionPeriod": {
                                "description": "Specifies the number of days for which automatic DB snapshots are retained.",
                                "type": "integer"
                            },
                            "CharacterSetName": {
                                "description": "If present, specifies the name of the character set that this cluster is associated with.",
                                "type": "string"
                            },
                            "CloneGroupId": {
                                "description": "Identifies the clone group to which the DB cluster is associated.",
                                "type": "string"
                            },
                            "ClusterCreateTime": {
                                "description": "Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).",
                                "format": "date-time",
                                "type": "string"
                            },
                            "DBClusterArn": {
                                "description": "The Amazon Resource Name (ARN) for the DB cluster.",
                                "type": "string"
                            },
                            "DBClusterIdentifier": {
                                "description": "Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.",
                                "type": "string"
                            },
                            "DBClusterMembers": {
                                "description": "Provides the list of instances that make up the DB cluster.",
                                "items": {
                                    "description": "Contains information about an instance that is part of a DB cluster.",
                                    "properties": {
                                        "DBClusterParameterGroupStatus": {
                                            "description": "Specifies the status of the DB cluster parameter group for this member of the DB cluster.",
                                            "type": "string"
                                        },
                                        "DBInstanceIdentifier": {
                                            "description": "Specifies the instance identifier for this member of the DB cluster.",
                                            "type": "string"
                                        },
                                        "IsClusterWriter": {
                                            "description": "Value that is <code>true</code> if the cluster member is the primary instance for the DB cluster and <code>false</code> otherwise.",
                                            "type": "boolean"
                                        },
                                        "PromotionTier": {
                                            "description": "A value that specifies the order in which a Read Replica is promoted to the primary instance after a failure of the existing primary instance. ",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "DBClusterOptionGroupMemberships": {
                                "description": "Provides the list of option group memberships for this DB cluster.",
                                "items": {
                                    "description": "Contains status information for a DB cluster option group.",
                                    "properties": {
                                        "DBClusterOptionGroupName": {
                                            "description": "Specifies the name of the DB cluster option group.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "Specifies the status of the DB cluster option group.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "DBClusterParameterGroup": {
                                "description": "Specifies the name of the DB cluster parameter group for the DB cluster.",
                                "type": "string"
                            },
                            "DBSubnetGroup": {
                                "description": "Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group.",
                                "type": "string"
                            },
                            "DatabaseName": {
                                "description": "Contains the name of the initial database of this DB cluster that was provided at create time, if one was specified when the DB cluster was created. This same name is returned for the life of the DB cluster.",
                                "type": "string"
                            },
                            "DbClusterResourceId": {
                                "description": "The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.",
                                "type": "string"
                            },
                            "EarliestRestorableTime": {
                                "description": "Specifies the earliest time to which a database can be restored with point-in-time restore.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "Endpoint": {
                                "description": "Specifies the connection endpoint for the primary instance of the DB cluster.",
                                "type": "string"
                            },
                            "Engine": {
                                "description": "Provides the name of the database engine to be used for this DB cluster.",
                                "type": "string"
                            },
                            "EngineVersion": {
                                "description": "Indicates the database engine version.",
                                "type": "string"
                            },
                            "HostedZoneId": {
                                "description": "Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.",
                                "type": "string"
                            },
                            "IAMDatabaseAuthenticationEnabled": {
                                "description": "True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.",
                                "type": "boolean"
                            },
                            "KmsKeyId": {
                                "description": "If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB cluster.",
                                "type": "string"
                            },
                            "LatestRestorableTime": {
                                "description": "Specifies the latest time to which a database can be restored with point-in-time restore.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "MasterUsername": {
                                "description": "Contains the master username for the DB cluster.",
                                "type": "string"
                            },
                            "MultiAZ": {
                                "description": "Specifies whether the DB cluster has instances in multiple Availability Zones.",
                                "type": "boolean"
                            },
                            "PercentProgress": {
                                "description": "Specifies the progress of the operation as a percentage.",
                                "type": "string"
                            },
                            "Port": {
                                "description": "Specifies the port that the database engine is listening on.",
                                "type": "integer"
                            },
                            "PreferredBackupWindow": {
                                "description": "Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. ",
                                "type": "string"
                            },
                            "PreferredMaintenanceWindow": {
                                "description": "Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
                                "type": "string"
                            },
                            "ReadReplicaIdentifiers": {
                                "description": "Contains one or more identifiers of the Read Replicas associated with this DB cluster.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "ReaderEndpoint": {
                                "description": "<p>The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances connections across the Read Replicas that are available in a DB cluster. As clients request new connections to the reader endpoint, Neptune distributes the connection requests among the Read Replicas in the DB cluster. This functionality can help balance your read workload across multiple Read Replicas in your DB cluster. </p> <p>If a failover occurs, and the Read Replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Read Replicas in the cluster, you can then reconnect to the reader endpoint.</p>",
                                "type": "string"
                            },
                            "ReplicationSourceIdentifier": {
                                "description": "Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.",
                                "type": "string"
                            },
                            "Status": {
                                "description": "Specifies the current state of this DB cluster.",
                                "type": "string"
                            },
                            "StorageEncrypted": {
                                "description": "Specifies whether the DB cluster is encrypted.",
                                "type": "boolean"
                            },
                            "VpcSecurityGroups": {
                                "description": "Provides a list of VPC security groups that the DB cluster belongs to.",
                                "items": {
                                    "description": "This data type is used as a response element for queries on VPC security group membership.",
                                    "properties": {
                                        "Status": {
                                            "description": "The status of the VPC security group.",
                                            "type": "string"
                                        },
                                        "VpcSecurityGroupId": {
                                            "description": "The name of the VPC security group.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CreateDBClusterSnapshotMessage": {
                "description": "<p/>",
                "properties": {
                    "DBClusterIdentifier": {
                        "description": "<p>The identifier of the DB cluster to create a snapshot for. This parameter is not case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBCluster.</p> </li> </ul> <p>Example: <code>my-cluster1</code> </p>",
                        "type": "string"
                    },
                    "DBClusterSnapshotIdentifier": {
                        "description": "<p>The identifier of the DB cluster snapshot. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster1-snapshot1</code> </p>",
                        "type": "string"
                    },
                    "Tags": {
                        "description": "The tags to be assigned to the DB cluster snapshot.",
                        "items": {
                            "description": "Metadata assigned to an Amazon Neptune resource consisting of a key-value pair.",
                            "properties": {
                                "Key": {
                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "DBClusterSnapshotIdentifier",
                    "DBClusterIdentifier"
                ],
                "type": "object"
            },
            "CreateDBClusterSnapshotResult": {
                "properties": {
                    "DBClusterSnapshot": {
                        "description": "<p>Contains the details for an Amazon Neptune DB cluster snapshot </p> <p>This data type is used as a response element in the <a>DescribeDBClusterSnapshots</a> action. </p>",
                        "properties": {
                            "AllocatedStorage": {
                                "description": "Specifies the allocated storage size in gibibytes (GiB).",
                                "type": "integer"
                            },
                            "AvailabilityZones": {
                                "description": "Provides the list of EC2 Availability Zones that instances in the DB cluster snapshot can be restored in.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "ClusterCreateTime": {
                                "description": "Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).",
                                "format": "date-time",
                                "type": "string"
                            },
                            "DBClusterIdentifier": {
                                "description": "Specifies the DB cluster identifier of the DB cluster that this DB cluster snapshot was created from.",
                                "type": "string"
                            },
                            "DBClusterSnapshotArn": {
                                "description": "The Amazon Resource Name (ARN) for the DB cluster snapshot.",
                                "type": "string"
                            },
                            "DBClusterSnapshotIdentifier": {
                                "description": "Specifies the identifier for the DB cluster snapshot.",
                                "type": "string"
                            },
                            "Engine": {
                                "description": "Specifies the name of the database engine.",
                                "type": "string"
                            },
                            "EngineVersion": {
                                "description": "Provides the version of the database engine for this DB cluster snapshot.",
                                "type": "string"
                            },
                            "IAMDatabaseAuthenticationEnabled": {
                                "description": "True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.",
                                "type": "boolean"
                            },
                            "KmsKeyId": {
                                "description": "If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB cluster snapshot.",
                                "type": "string"
                            },
                            "LicenseModel": {
                                "description": "Provides the license model information for this DB cluster snapshot.",
                                "type": "string"
                            },
                            "MasterUsername": {
                                "description": "Provides the master username for the DB cluster snapshot.",
                                "type": "string"
                            },
                            "PercentProgress": {
                                "description": "Specifies the percentage of the estimated data that has been transferred.",
                                "type": "integer"
                            },
                            "Port": {
                                "description": "Specifies the port that the DB cluster was listening on at the time of the snapshot.",
                                "type": "integer"
                            },
                            "SnapshotCreateTime": {
                                "description": "Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).",
                                "format": "date-time",
                                "type": "string"
                            },
                            "SnapshotType": {
                                "description": "Provides the type of the DB cluster snapshot.",
                                "type": "string"
                            },
                            "SourceDBClusterSnapshotArn": {
                                "description": "If the DB cluster snapshot was copied from a source DB cluster snapshot, the Amazon Resource Name (ARN) for the source DB cluster snapshot, otherwise, a null value.",
                                "type": "string"
                            },
                            "Status": {
                                "description": "Specifies the status of this DB cluster snapshot.",
                                "type": "string"
                            },
                            "StorageEncrypted": {
                                "description": "Specifies whether the DB cluster snapshot is encrypted.",
                                "type": "boolean"
                            },
                            "VpcId": {
                                "description": "Provides the VPC ID associated with the DB cluster snapshot.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CreateDBInstanceMessage": {
                "description": "<p/>",
                "properties": {
                    "AllocatedStorage": {
                        "description": "<p>The amount of storage (in gibibytes) to allocate for the DB instance.</p> <p>Type: Integer</p> <p>Not applicable. Neptune cluster volumes automatically grow as the amount of data in your database increases, though you are only charged for the space that you use in a Neptune cluster volume.</p>",
                        "type": "integer"
                    },
                    "AutoMinorVersionUpgrade": {
                        "description": "<p>Indicates that minor engine upgrades are applied automatically to the DB instance during the maintenance window.</p> <p>Default: <code>true</code> </p>",
                        "type": "boolean"
                    },
                    "AvailabilityZone": {
                        "description": "<p> The EC2 Availability Zone that the DB instance is created in. </p> <p>Default: A random, system-chosen Availability Zone in the endpoint's AWS Region.</p> <p> Example: <code>us-east-1d</code> </p> <p> Constraint: The AvailabilityZone parameter can't be specified if the MultiAZ parameter is set to <code>true</code>. The specified Availability Zone must be in the same AWS Region as the current endpoint. </p>",
                        "type": "string"
                    },
                    "BackupRetentionPeriod": {
                        "description": "<p>The number of days for which automated backups are retained.</p> <p>Not applicable. The retention period for automated backups is managed by the DB cluster. For more information, see <a>CreateDBCluster</a>.</p> <p>Default: 1</p> <p>Constraints:</p> <ul> <li> <p>Must be a value from 0 to 35</p> </li> <li> <p>Cannot be set to 0 if the DB instance is a source to Read Replicas</p> </li> </ul>",
                        "type": "integer"
                    },
                    "CharacterSetName": {
                        "description": "<p>Indicates that the DB instance should be associated with the specified CharacterSet.</p> <p>Not applicable. The character set is managed by the DB cluster. For more information, see <a>CreateDBCluster</a>.</p>",
                        "type": "string"
                    },
                    "CopyTagsToSnapshot": {
                        "description": "True to copy all tags from the DB instance to snapshots of the DB instance, and otherwise false. The default is false.",
                        "type": "boolean"
                    },
                    "DBClusterIdentifier": {
                        "description": "<p>The identifier of the DB cluster that the instance will belong to.</p> <p>For information on creating a DB cluster, see <a>CreateDBCluster</a>.</p> <p>Type: String</p>",
                        "type": "string"
                    },
                    "DBInstanceClass": {
                        "description": "The compute and memory capacity of the DB instance, for example, <code>db.m4.large</code>. Not all DB instance classes are available in all AWS Regions. ",
                        "type": "string"
                    },
                    "DBInstanceIdentifier": {
                        "description": "<p>The DB instance identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>mydbinstance</code> </p>",
                        "type": "string"
                    },
                    "DBName": {
                        "description": "<p>The database name. </p> <p>Type: String</p>",
                        "type": "string"
                    },
                    "DBParameterGroupName": {
                        "description": "<p>The name of the DB parameter group to associate with this DB instance. If this argument is omitted, the default DBParameterGroup for the specified engine is used.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>",
                        "type": "string"
                    },
                    "DBSecurityGroups": {
                        "description": "<p>A list of DB security groups to associate with this DB instance.</p> <p>Default: The default DB security group for the database engine.</p>",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "DBSubnetGroupName": {
                        "description": "<p>A DB subnet group to associate with this DB instance.</p> <p>If there is no DB subnet group, then it is a non-VPC DB instance.</p>",
                        "type": "string"
                    },
                    "Domain": {
                        "description": "Specify the Active Directory Domain to create the instance in.",
                        "type": "string"
                    },
                    "DomainIAMRoleName": {
                        "description": "Specify the name of the IAM role to be used when making API calls to the Directory Service.",
                        "type": "string"
                    },
                    "EnableCloudwatchLogsExports": {
                        "description": "The list of log types that need to be enabled for exporting to CloudWatch Logs.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "EnableIAMDatabaseAuthentication": {
                        "description": "<p>True to enable AWS Identity and Access Management (IAM) authentication for Neptune.</p> <p>Default: <code>false</code> </p>",
                        "type": "boolean"
                    },
                    "EnablePerformanceInsights": {
                        "description": "True to enable Performance Insights for the DB instance, and otherwise false. ",
                        "type": "boolean"
                    },
                    "Engine": {
                        "description": "<p>The name of the database engine to be used for this instance. </p> <p>Valid Values: <code>neptune</code> </p>",
                        "type": "string"
                    },
                    "EngineVersion": {
                        "description": "The version number of the database engine to use.",
                        "type": "string"
                    },
                    "Iops": {
                        "description": "The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for the DB instance. ",
                        "type": "integer"
                    },
                    "KmsKeyId": {
                        "description": "<p>The AWS KMS key identifier for an encrypted DB instance.</p> <p>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are creating a DB instance with the same AWS account that owns the KMS encryption key used to encrypt the new DB instance, then you can use the KMS key alias instead of the ARN for the KM encryption key.</p> <p>Not applicable. The KMS key identifier is managed by the DB cluster. For more information, see <a>CreateDBCluster</a>.</p> <p>If the <code>StorageEncrypted</code> parameter is true, and you do not specify a value for the <code>KmsKeyId</code> parameter, then Amazon Neptune will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.</p>",
                        "type": "string"
                    },
                    "LicenseModel": {
                        "description": "<p>License model information for this DB instance.</p> <p> Valid values: <code>license-included</code> | <code>bring-your-own-license</code> | <code>general-public-license</code> </p>",
                        "type": "string"
                    },
                    "MasterUserPassword": {
                        "description": "<p>The password for the master user. The password can include any printable ASCII character except \"/\", \"\"\", or \"@\".</p> <p> Not used. </p>",
                        "type": "string"
                    },
                    "MasterUsername": {
                        "description": "The name for the master user. Not used.",
                        "type": "string"
                    },
                    "MonitoringInterval": {
                        "description": "<p>The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0.</p> <p>If <code>MonitoringRoleArn</code> is specified, then you must also set <code>MonitoringInterval</code> to a value other than 0.</p> <p>Valid Values: <code>0, 1, 5, 10, 15, 30, 60</code> </p>",
                        "type": "integer"
                    },
                    "MonitoringRoleArn": {
                        "description": "<p>The ARN for the IAM role that permits Neptune to send enhanced monitoring metrics to Amazon CloudWatch Logs. For example, <code>arn:aws:iam:123456789012:role/emaccess</code>.</p> <p>If <code>MonitoringInterval</code> is set to a value other than 0, then you must supply a <code>MonitoringRoleArn</code> value.</p>",
                        "type": "string"
                    },
                    "MultiAZ": {
                        "description": "Specifies if the DB instance is a Multi-AZ deployment. You can't set the AvailabilityZone parameter if the MultiAZ parameter is set to true.",
                        "type": "boolean"
                    },
                    "OptionGroupName": {
                        "description": "<p>Indicates that the DB instance should be associated with the specified option group.</p> <p>Permanent options, such as the TDE option for Oracle Advanced Security TDE, can't be removed from an option group, and that option group can't be removed from a DB instance once it is associated with a DB instance</p>",
                        "type": "string"
                    },
                    "PerformanceInsightsKMSKeyId": {
                        "description": "The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.",
                        "type": "string"
                    },
                    "Port": {
                        "description": "<p>The port number on which the database accepts connections.</p> <p>Not applicable. The port is managed by the DB cluster. For more information, see <a>CreateDBCluster</a>.</p> <p> Default: <code>8182</code> </p> <p>Type: Integer</p>",
                        "type": "integer"
                    },
                    "PreferredBackupWindow": {
                        "description": "<p> The daily time range during which automated backups are created. </p> <p>Not applicable. The daily time range for creating automated backups is managed by the DB cluster. For more information, see <a>CreateDBCluster</a>.</p>",
                        "type": "string"
                    },
                    "PreferredMaintenanceWindow": {
                        "description": "<p>The time range each week during which system maintenance can occur, in Universal Coordinated Time (UTC). </p> <p> Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region, occurring on a random day of the week. </p> <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</p> <p>Constraints: Minimum 30-minute window.</p>",
                        "type": "string"
                    },
                    "PromotionTier": {
                        "description": "<p>A value that specifies the order in which an Read Replica is promoted to the primary instance after a failure of the existing primary instance. </p> <p>Default: 1</p> <p>Valid Values: 0 - 15</p>",
                        "type": "integer"
                    },
                    "PubliclyAccessible": {
                        "description": "This parameter is not supported.",
                        "type": "boolean"
                    },
                    "StorageEncrypted": {
                        "description": "<p>Specifies whether the DB instance is encrypted.</p> <p>Not applicable. The encryption for DB instances is managed by the DB cluster. For more information, see <a>CreateDBCluster</a>.</p> <p>Default: false</p>",
                        "type": "boolean"
                    },
                    "StorageType": {
                        "description": "<p>Specifies the storage type to be associated with the DB instance.</p> <p>Not applicable. Storage is managed by the DB Cluster.</p>",
                        "type": "string"
                    },
                    "Tags": {
                        "description": "A list of tags. For more information, see <a href=\"http://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html\">Tagging Amazon Neptune Resources</a>. ",
                        "items": {
                            "description": "Metadata assigned to an Amazon Neptune resource consisting of a key-value pair.",
                            "properties": {
                                "Key": {
                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "TdeCredentialArn": {
                        "description": "The ARN from the key store with which to associate the instance for TDE encryption.",
                        "type": "string"
                    },
                    "TdeCredentialPassword": {
                        "description": "The password for the given ARN from the key store in order to access the device.",
                        "type": "string"
                    },
                    "Timezone": {
                        "description": "The time zone of the DB instance. ",
                        "type": "string"
                    },
                    "VpcSecurityGroupIds": {
                        "description": "<p>A list of EC2 VPC security groups to associate with this DB instance.</p> <p>Not applicable. The associated list of EC2 VPC security groups is managed by the DB cluster. For more information, see <a>CreateDBCluster</a>.</p> <p>Default: The default EC2 VPC security group for the DB subnet group's VPC.</p>",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "DBInstanceIdentifier",
                    "DBInstanceClass",
                    "Engine"
                ],
                "type": "object"
            },
            "CreateDBInstanceResult": {
                "properties": {
                    "DBInstance": {
                        "description": "<p>Contains the details of an Amazon Neptune DB instance. </p> <p>This data type is used as a response element in the <a>DescribeDBInstances</a> action. </p>",
                        "properties": {
                            "AllocatedStorage": {
                                "description": "Specifies the allocated storage size specified in gibibytes.",
                                "type": "integer"
                            },
                            "AutoMinorVersionUpgrade": {
                                "description": "Indicates that minor version patches are applied automatically.",
                                "type": "boolean"
                            },
                            "AvailabilityZone": {
                                "description": "Specifies the name of the Availability Zone the DB instance is located in.",
                                "type": "string"
                            },
                            "BackupRetentionPeriod": {
                                "description": "Specifies the number of days for which automatic DB snapshots are retained.",
                                "type": "integer"
                            },
                            "CACertificateIdentifier": {
                                "description": "The identifier of the CA certificate for this DB instance.",
                                "type": "string"
                            },
                            "CharacterSetName": {
                                "description": "If present, specifies the name of the character set that this instance is associated with.",
                                "type": "string"
                            },
                            "CopyTagsToSnapshot": {
                                "description": "Specifies whether tags are copied from the DB instance to snapshots of the DB instance.",
                                "type": "boolean"
                            },
                            "DBClusterIdentifier": {
                                "description": "If the DB instance is a member of a DB cluster, contains the name of the DB cluster that the DB instance is a member of.",
                                "type": "string"
                            },
                            "DBInstanceArn": {
                                "description": "The Amazon Resource Name (ARN) for the DB instance.",
                                "type": "string"
                            },
                            "DBInstanceClass": {
                                "description": "Contains the name of the compute and memory capacity class of the DB instance.",
                                "type": "string"
                            },
                            "DBInstanceIdentifier": {
                                "description": "Contains a user-supplied database identifier. This identifier is the unique key that identifies a DB instance.",
                                "type": "string"
                            },
                            "DBInstanceStatus": {
                                "description": "Specifies the current state of this database.",
                                "type": "string"
                            },
                            "DBName": {
                                "description": "The database name.",
                                "type": "string"
                            },
                            "DBParameterGroups": {
                                "description": "Provides the list of DB parameter groups applied to this DB instance.",
                                "items": {
                                    "description": "<p>The status of the DB parameter group.</p> <p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>CreateDBInstance</a> </p> </li> <li> <p> <a>DeleteDBInstance</a> </p> </li> <li> <p> <a>ModifyDBInstance</a> </p> </li> <li> <p> <a>RebootDBInstance</a> </p> </li> </ul>",
                                    "properties": {
                                        "DBParameterGroupName": {
                                            "description": "The name of the DP parameter group.",
                                            "type": "string"
                                        },
                                        "ParameterApplyStatus": {
                                            "description": "The status of parameter updates.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "DBSecurityGroups": {
                                "description": " Provides List of DB security group elements containing only <code>DBSecurityGroup.Name</code> and <code>DBSecurityGroup.Status</code> subelements. ",
                                "items": {
                                    "description": "<p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>ModifyDBInstance</a> </p> </li> <li> <p> <a>RebootDBInstance</a> </p> </li> </ul>",
                                    "properties": {
                                        "DBSecurityGroupName": {
                                            "description": "The name of the DB security group.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of the DB security group.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "DBSubnetGroup": {
                                "description": "Specifies information on the subnet group associated with the DB instance, including the name, description, and subnets in the subnet group.",
                                "properties": {
                                    "DBSubnetGroupArn": {
                                        "description": "The Amazon Resource Name (ARN) for the DB subnet group.",
                                        "type": "string"
                                    },
                                    "DBSubnetGroupDescription": {
                                        "description": "Provides the description of the DB subnet group.",
                                        "type": "string"
                                    },
                                    "DBSubnetGroupName": {
                                        "description": "The name of the DB subnet group.",
                                        "type": "string"
                                    },
                                    "SubnetGroupStatus": {
                                        "description": "Provides the status of the DB subnet group.",
                                        "type": "string"
                                    },
                                    "Subnets": {
                                        "description": " Contains a list of <a>Subnet</a> elements. ",
                                        "items": {
                                            "description": " This data type is used as a response element in the <a>DescribeDBSubnetGroups</a> action. ",
                                            "properties": {
                                                "SubnetAvailabilityZone": {
                                                    "description": "<p>Contains Availability Zone information.</p> <p> This data type is used as an element in the following data type:</p> <ul> <li> <p> <a>OrderableDBInstanceOption</a> </p> </li> </ul>",
                                                    "properties": {
                                                        "Name": {
                                                            "description": "The name of the availability zone.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "SubnetIdentifier": {
                                                    "description": "Specifies the identifier of the subnet.",
                                                    "type": "string"
                                                },
                                                "SubnetStatus": {
                                                    "description": "Specifies the status of the subnet.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "VpcId": {
                                        "description": "Provides the VpcId of the DB subnet group.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "DbInstancePort": {
                                "description": "Specifies the port that the DB instance listens on. If the DB instance is part of a DB cluster, this can be a different port than the DB cluster port.",
                                "type": "integer"
                            },
                            "DbiResourceId": {
                                "description": "The AWS Region-unique, immutable identifier for the DB instance. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.",
                                "type": "string"
                            },
                            "DomainMemberships": {
                                "description": "Not supported",
                                "items": {
                                    "description": "An Active Directory Domain membership record associated with the DB instance.",
                                    "properties": {
                                        "Domain": {
                                            "description": "The identifier of the Active Directory Domain.",
                                            "type": "string"
                                        },
                                        "FQDN": {
                                            "description": "The fully qualified domain name of the Active Directory Domain.",
                                            "type": "string"
                                        },
                                        "IAMRoleName": {
                                            "description": "The name of the IAM role to be used when making API calls to the Directory Service.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of the DB instance's Active Directory Domain membership, such as joined, pending-join, failed etc).",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "EnabledCloudwatchLogsExports": {
                                "description": "A list of log types that this DB instance is configured to export to CloudWatch Logs.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "Endpoint": {
                                "description": "Specifies the connection endpoint.",
                                "properties": {
                                    "Address": {
                                        "description": "Specifies the DNS address of the DB instance.",
                                        "type": "string"
                                    },
                                    "HostedZoneId": {
                                        "description": "Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.",
                                        "type": "string"
                                    },
                                    "Port": {
                                        "description": "Specifies the port that the database engine is listening on.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "Engine": {
                                "description": "Provides the name of the database engine to be used for this DB instance.",
                                "type": "string"
                            },
                            "EngineVersion": {
                                "description": "Indicates the database engine version.",
                                "type": "string"
                            },
                            "EnhancedMonitoringResourceArn": {
                                "description": "The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the Enhanced Monitoring metrics data for the DB instance.",
                                "type": "string"
                            },
                            "IAMDatabaseAuthenticationEnabled": {
                                "description": "True if AWS Identity and Access Management (IAM) authentication is enabled, and otherwise false.",
                                "type": "boolean"
                            },
                            "InstanceCreateTime": {
                                "description": "Provides the date and time the DB instance was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "Iops": {
                                "description": "Specifies the Provisioned IOPS (I/O operations per second) value.",
                                "type": "integer"
                            },
                            "KmsKeyId": {
                                "description": " If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB instance. ",
                                "type": "string"
                            },
                            "LatestRestorableTime": {
                                "description": "Specifies the latest time to which a database can be restored with point-in-time restore.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "LicenseModel": {
                                "description": "License model information for this DB instance.",
                                "type": "string"
                            },
                            "MasterUsername": {
                                "description": "Contains the master username for the DB instance.",
                                "type": "string"
                            },
                            "MonitoringInterval": {
                                "description": "The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance.",
                                "type": "integer"
                            },
                            "MonitoringRoleArn": {
                                "description": "The ARN for the IAM role that permits Neptune to send Enhanced Monitoring metrics to Amazon CloudWatch Logs.",
                                "type": "string"
                            },
                            "MultiAZ": {
                                "description": "Specifies if the DB instance is a Multi-AZ deployment.",
                                "type": "boolean"
                            },
                            "OptionGroupMemberships": {
                                "description": "Provides the list of option group memberships for this DB instance.",
                                "items": {
                                    "description": "Provides information on the option groups the DB instance is a member of.",
                                    "properties": {
                                        "OptionGroupName": {
                                            "description": "The name of the option group that the instance belongs to.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of the DB instance's option group membership. Valid values are: <code>in-sync</code>, <code>pending-apply</code>, <code>pending-removal</code>, <code>pending-maintenance-apply</code>, <code>pending-maintenance-removal</code>, <code>applying</code>, <code>removing</code>, and <code>failed</code>. ",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "PendingModifiedValues": {
                                "description": "Specifies that changes to the DB instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements.",
                                "properties": {
                                    "AllocatedStorage": {
                                        "description": " Contains the new <code>AllocatedStorage</code> size for the DB instance that will be applied or is currently being applied. ",
                                        "type": "integer"
                                    },
                                    "BackupRetentionPeriod": {
                                        "description": "Specifies the pending number of days for which automated backups are retained.",
                                        "type": "integer"
                                    },
                                    "CACertificateIdentifier": {
                                        "description": "Specifies the identifier of the CA certificate for the DB instance.",
                                        "type": "string"
                                    },
                                    "DBInstanceClass": {
                                        "description": " Contains the new <code>DBInstanceClass</code> for the DB instance that will be applied or is currently being applied. ",
                                        "type": "string"
                                    },
                                    "DBInstanceIdentifier": {
                                        "description": " Contains the new <code>DBInstanceIdentifier</code> for the DB instance that will be applied or is currently being applied. ",
                                        "type": "string"
                                    },
                                    "DBSubnetGroupName": {
                                        "description": "The new DB subnet group for the DB instance. ",
                                        "type": "string"
                                    },
                                    "EngineVersion": {
                                        "description": "Indicates the database engine version.",
                                        "type": "string"
                                    },
                                    "Iops": {
                                        "description": "Specifies the new Provisioned IOPS value for the DB instance that will be applied or is currently being applied.",
                                        "type": "integer"
                                    },
                                    "LicenseModel": {
                                        "description": "<p>The license model for the DB instance.</p> <p>Valid values: <code>license-included</code> | <code>bring-your-own-license</code> | <code>general-public-license</code> </p>",
                                        "type": "string"
                                    },
                                    "MasterUserPassword": {
                                        "description": "Contains the pending or currently-in-progress change of the master credentials for the DB instance.",
                                        "type": "string"
                                    },
                                    "MultiAZ": {
                                        "description": "Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.",
                                        "type": "boolean"
                                    },
                                    "PendingCloudwatchLogsExports": {
                                        "description": "A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated.",
                                        "properties": {
                                            "LogTypesToDisable": {
                                                "description": "Log types that are in the process of being enabled. After they are enabled, these log types are exported to CloudWatch Logs.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "LogTypesToEnable": {
                                                "description": "Log types that are in the process of being deactivated. After they are deactivated, these log types aren't exported to CloudWatch Logs.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Port": {
                                        "description": "Specifies the pending port for the DB instance.",
                                        "type": "integer"
                                    },
                                    "StorageType": {
                                        "description": "Specifies the storage type to be associated with the DB instance.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "PerformanceInsightsEnabled": {
                                "description": "True if Performance Insights is enabled for the DB instance, and otherwise false.",
                                "type": "boolean"
                            },
                            "PerformanceInsightsKMSKeyId": {
                                "description": "The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.",
                                "type": "string"
                            },
                            "PreferredBackupWindow": {
                                "description": " Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. ",
                                "type": "string"
                            },
                            "PreferredMaintenanceWindow": {
                                "description": "Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
                                "type": "string"
                            },
                            "PromotionTier": {
                                "description": "A value that specifies the order in which a Read Replica is promoted to the primary instance after a failure of the existing primary instance. ",
                                "type": "integer"
                            },
                            "PubliclyAccessible": {
                                "description": "This parameter is not supported.",
                                "type": "boolean"
                            },
                            "ReadReplicaDBClusterIdentifiers": {
                                "description": "Contains one or more identifiers of DB clusters that are Read Replicas of this DB instance.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "ReadReplicaDBInstanceIdentifiers": {
                                "description": "Contains one or more identifiers of the Read Replicas associated with this DB instance.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "ReadReplicaSourceDBInstanceIdentifier": {
                                "description": "Contains the identifier of the source DB instance if this DB instance is a Read Replica.",
                                "type": "string"
                            },
                            "SecondaryAvailabilityZone": {
                                "description": "If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support.",
                                "type": "string"
                            },
                            "StatusInfos": {
                                "description": "The status of a Read Replica. If the instance is not a Read Replica, this is blank.",
                                "items": {
                                    "description": "Provides a list of status information for a DB instance.",
                                    "properties": {
                                        "Message": {
                                            "description": "Details of the error if there is an error for the instance. If the instance is not in an error state, this value is blank.",
                                            "type": "string"
                                        },
                                        "Normal": {
                                            "description": "Boolean value that is true if the instance is operating normally, or false if the instance is in an error state.",
                                            "type": "boolean"
                                        },
                                        "Status": {
                                            "description": "Status of the DB instance. For a StatusType of read replica, the values can be replicating, error, stopped, or terminated.",
                                            "type": "string"
                                        },
                                        "StatusType": {
                                            "description": "This value is currently \"read replication.\"",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "StorageEncrypted": {
                                "description": "Specifies whether the DB instance is encrypted.",
                                "type": "boolean"
                            },
                            "StorageType": {
                                "description": "Specifies the storage type associated with DB instance.",
                                "type": "string"
                            },
                            "TdeCredentialArn": {
                                "description": "The ARN from the key store with which the instance is associated for TDE encryption.",
                                "type": "string"
                            },
                            "Timezone": {
                                "description": "Not supported. ",
                                "type": "string"
                            },
                            "VpcSecurityGroups": {
                                "description": "Provides a list of VPC security group elements that the DB instance belongs to.",
                                "items": {
                                    "description": "This data type is used as a response element for queries on VPC security group membership.",
                                    "properties": {
                                        "Status": {
                                            "description": "The status of the VPC security group.",
                                            "type": "string"
                                        },
                                        "VpcSecurityGroupId": {
                                            "description": "The name of the VPC security group.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CreateDBParameterGroupMessage": {
                "description": "<p/>",
                "properties": {
                    "DBParameterGroupFamily": {
                        "description": "The DB parameter group family name. A DB parameter group can be associated with one and only one DB parameter group family, and can be applied only to a DB instance running a database engine and engine version compatible with that DB parameter group family.",
                        "type": "string"
                    },
                    "DBParameterGroupName": {
                        "description": "<p>The name of the DB parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <note> <p>This value is stored as a lowercase string.</p> </note>",
                        "type": "string"
                    },
                    "Description": {
                        "description": "The description for the DB parameter group.",
                        "type": "string"
                    },
                    "Tags": {
                        "description": "A list of tags. For more information, see <a href=\"http://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html\">Tagging Amazon Neptune Resources</a>. ",
                        "items": {
                            "description": "Metadata assigned to an Amazon Neptune resource consisting of a key-value pair.",
                            "properties": {
                                "Key": {
                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "DBParameterGroupName",
                    "DBParameterGroupFamily",
                    "Description"
                ],
                "type": "object"
            },
            "CreateDBParameterGroupResult": {
                "properties": {
                    "DBParameterGroup": {
                        "description": "<p>Contains the details of an Amazon Neptune DB parameter group. </p> <p>This data type is used as a response element in the <a>DescribeDBParameterGroups</a> action. </p>",
                        "properties": {
                            "DBParameterGroupArn": {
                                "description": "The Amazon Resource Name (ARN) for the DB parameter group.",
                                "type": "string"
                            },
                            "DBParameterGroupFamily": {
                                "description": "Provides the name of the DB parameter group family that this DB parameter group is compatible with.",
                                "type": "string"
                            },
                            "DBParameterGroupName": {
                                "description": "Provides the name of the DB parameter group.",
                                "type": "string"
                            },
                            "Description": {
                                "description": "Provides the customer-specified description for this DB parameter group.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CreateDBSubnetGroupMessage": {
                "description": "<p/>",
                "properties": {
                    "DBSubnetGroupDescription": {
                        "description": "The description for the DB subnet group.",
                        "type": "string"
                    },
                    "DBSubnetGroupName": {
                        "description": "<p>The name for the DB subnet group. This value is stored as a lowercase string.</p> <p>Constraints: Must contain no more than 255 letters, numbers, periods, underscores, spaces, or hyphens. Must not be default.</p> <p>Example: <code>mySubnetgroup</code> </p>",
                        "type": "string"
                    },
                    "SubnetIds": {
                        "description": "The EC2 Subnet IDs for the DB subnet group.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "Tags": {
                        "description": "A list of tags. For more information, see <a href=\"http://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html\">Tagging Amazon Neptune Resources</a>. ",
                        "items": {
                            "description": "Metadata assigned to an Amazon Neptune resource consisting of a key-value pair.",
                            "properties": {
                                "Key": {
                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "DBSubnetGroupName",
                    "DBSubnetGroupDescription",
                    "SubnetIds"
                ],
                "type": "object"
            },
            "CreateDBSubnetGroupResult": {
                "properties": {
                    "DBSubnetGroup": {
                        "description": "<p>Contains the details of an Amazon Neptune DB subnet group. </p> <p>This data type is used as a response element in the <a>DescribeDBSubnetGroups</a> action. </p>",
                        "properties": {
                            "DBSubnetGroupArn": {
                                "description": "The Amazon Resource Name (ARN) for the DB subnet group.",
                                "type": "string"
                            },
                            "DBSubnetGroupDescription": {
                                "description": "Provides the description of the DB subnet group.",
                                "type": "string"
                            },
                            "DBSubnetGroupName": {
                                "description": "The name of the DB subnet group.",
                                "type": "string"
                            },
                            "SubnetGroupStatus": {
                                "description": "Provides the status of the DB subnet group.",
                                "type": "string"
                            },
                            "Subnets": {
                                "description": " Contains a list of <a>Subnet</a> elements. ",
                                "items": {
                                    "description": " This data type is used as a response element in the <a>DescribeDBSubnetGroups</a> action. ",
                                    "properties": {
                                        "SubnetAvailabilityZone": {
                                            "description": "<p>Contains Availability Zone information.</p> <p> This data type is used as an element in the following data type:</p> <ul> <li> <p> <a>OrderableDBInstanceOption</a> </p> </li> </ul>",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the availability zone.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "SubnetIdentifier": {
                                            "description": "Specifies the identifier of the subnet.",
                                            "type": "string"
                                        },
                                        "SubnetStatus": {
                                            "description": "Specifies the status of the subnet.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "VpcId": {
                                "description": "Provides the VpcId of the DB subnet group.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CreateEventSubscriptionMessage": {
                "description": "<p/>",
                "properties": {
                    "Enabled": {
                        "description": " A Boolean value; set to <b>true</b> to activate the subscription, set to <b>false</b> to create the subscription but not active it. ",
                        "type": "boolean"
                    },
                    "EventCategories": {
                        "description": " A list of event categories for a SourceType that you want to subscribe to. You can see a list of the categories for a given SourceType by using the <b>DescribeEventCategories</b> action. ",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "SnsTopicArn": {
                        "description": "The Amazon Resource Name (ARN) of the SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it.",
                        "type": "string"
                    },
                    "SourceIds": {
                        "description": "<p>The list of identifiers of the event sources for which events are returned. If not specified, then all sources are included in the response. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it can't end with a hyphen or contain two consecutive hyphens.</p> <p>Constraints:</p> <ul> <li> <p>If SourceIds are supplied, SourceType must also be provided.</p> </li> <li> <p>If the source type is a DB instance, then a <code>DBInstanceIdentifier</code> must be supplied.</p> </li> <li> <p>If the source type is a DB security group, a <code>DBSecurityGroupName</code> must be supplied.</p> </li> <li> <p>If the source type is a DB parameter group, a <code>DBParameterGroupName</code> must be supplied.</p> </li> <li> <p>If the source type is a DB snapshot, a <code>DBSnapshotIdentifier</code> must be supplied.</p> </li> </ul>",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "SourceType": {
                        "description": "<p>The type of source that is generating the events. For example, if you want to be notified of events generated by a DB instance, you would set this parameter to db-instance. if this value is not specified, all events are returned.</p> <p>Valid values: <code>db-instance</code> | <code>db-cluster</code> | <code>db-parameter-group</code> | <code>db-security-group</code> | <code>db-snapshot</code> | <code>db-cluster-snapshot</code> </p>",
                        "type": "string"
                    },
                    "SubscriptionName": {
                        "description": "<p>The name of the subscription.</p> <p>Constraints: The name must be less than 255 characters.</p>",
                        "type": "string"
                    },
                    "Tags": {
                        "description": "A list of tags. For more information, see <a href=\"http://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html\">Tagging Amazon Neptune Resources</a>. ",
                        "items": {
                            "description": "Metadata assigned to an Amazon Neptune resource consisting of a key-value pair.",
                            "properties": {
                                "Key": {
                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "SubscriptionName",
                    "SnsTopicArn"
                ],
                "type": "object"
            },
            "CreateEventSubscriptionResult": {
                "properties": {
                    "EventSubscription": {
                        "description": "Contains the results of a successful invocation of the <a>DescribeEventSubscriptions</a> action.",
                        "properties": {
                            "CustSubscriptionId": {
                                "description": "The event notification subscription Id.",
                                "type": "string"
                            },
                            "CustomerAwsId": {
                                "description": "The AWS customer account associated with the event notification subscription.",
                                "type": "string"
                            },
                            "Enabled": {
                                "description": "A Boolean value indicating if the subscription is enabled. True indicates the subscription is enabled.",
                                "type": "boolean"
                            },
                            "EventCategoriesList": {
                                "description": "A list of event categories for the event notification subscription.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "EventSubscriptionArn": {
                                "description": "The Amazon Resource Name (ARN) for the event subscription.",
                                "type": "string"
                            },
                            "SnsTopicArn": {
                                "description": "The topic ARN of the event notification subscription.",
                                "type": "string"
                            },
                            "SourceIdsList": {
                                "description": "A list of source IDs for the event notification subscription.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "SourceType": {
                                "description": "The source type for the event notification subscription.",
                                "type": "string"
                            },
                            "Status": {
                                "description": "<p>The status of the event notification subscription.</p> <p>Constraints:</p> <p>Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist</p> <p>The status \"no-permission\" indicates that Neptune no longer has permission to post to the SNS topic. The status \"topic-not-exist\" indicates that the topic was deleted after the subscription was created.</p>",
                                "type": "string"
                            },
                            "SubscriptionCreationTime": {
                                "description": "The time the event notification subscription was created.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DBCluster": {
                "description": "<p>Contains the details of an Amazon Neptune DB cluster. </p> <p>This data type is used as a response element in the <a>DescribeDBClusters</a> action. </p>",
                "properties": {
                    "AllocatedStorage": {
                        "description": " <code>AllocatedStorage</code> always returns 1, because Neptune DB cluster storage size is not fixed, but instead automatically adjusts as needed.",
                        "type": "integer"
                    },
                    "AssociatedRoles": {
                        "description": "Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.",
                        "items": {
                            "description": "Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.",
                            "properties": {
                                "RoleArn": {
                                    "description": "The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.",
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "<p>Describes the state of association between the IAM role and the DB cluster. The Status property returns one of the following values:</p> <ul> <li> <p> <code>ACTIVE</code> - the IAM role ARN is associated with the DB cluster and can be used to access other AWS services on your behalf.</p> </li> <li> <p> <code>PENDING</code> - the IAM role ARN is being associated with the DB cluster.</p> </li> <li> <p> <code>INVALID</code> - the IAM role ARN is associated with the DB cluster, but the DB cluster is unable to assume the IAM role in order to access other AWS services on your behalf.</p> </li> </ul>",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "AvailabilityZones": {
                        "description": "Provides the list of EC2 Availability Zones that instances in the DB cluster can be created in.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "BackupRetentionPeriod": {
                        "description": "Specifies the number of days for which automatic DB snapshots are retained.",
                        "type": "integer"
                    },
                    "CharacterSetName": {
                        "description": "If present, specifies the name of the character set that this cluster is associated with.",
                        "type": "string"
                    },
                    "CloneGroupId": {
                        "description": "Identifies the clone group to which the DB cluster is associated.",
                        "type": "string"
                    },
                    "ClusterCreateTime": {
                        "description": "Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).",
                        "format": "date-time",
                        "type": "string"
                    },
                    "DBClusterArn": {
                        "description": "The Amazon Resource Name (ARN) for the DB cluster.",
                        "type": "string"
                    },
                    "DBClusterIdentifier": {
                        "description": "Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.",
                        "type": "string"
                    },
                    "DBClusterMembers": {
                        "description": "Provides the list of instances that make up the DB cluster.",
                        "items": {
                            "description": "Contains information about an instance that is part of a DB cluster.",
                            "properties": {
                                "DBClusterParameterGroupStatus": {
                                    "description": "Specifies the status of the DB cluster parameter group for this member of the DB cluster.",
                                    "type": "string"
                                },
                                "DBInstanceIdentifier": {
                                    "description": "Specifies the instance identifier for this member of the DB cluster.",
                                    "type": "string"
                                },
                                "IsClusterWriter": {
                                    "description": "Value that is <code>true</code> if the cluster member is the primary instance for the DB cluster and <code>false</code> otherwise.",
                                    "type": "boolean"
                                },
                                "PromotionTier": {
                                    "description": "A value that specifies the order in which a Read Replica is promoted to the primary instance after a failure of the existing primary instance. ",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "DBClusterOptionGroupMemberships": {
                        "description": "Provides the list of option group memberships for this DB cluster.",
                        "items": {
                            "description": "Contains status information for a DB cluster option group.",
                            "properties": {
                                "DBClusterOptionGroupName": {
                                    "description": "Specifies the name of the DB cluster option group.",
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "Specifies the status of the DB cluster option group.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "DBClusterParameterGroup": {
                        "description": "Specifies the name of the DB cluster parameter group for the DB cluster.",
                        "type": "string"
                    },
                    "DBSubnetGroup": {
                        "description": "Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group.",
                        "type": "string"
                    },
                    "DatabaseName": {
                        "description": "Contains the name of the initial database of this DB cluster that was provided at create time, if one was specified when the DB cluster was created. This same name is returned for the life of the DB cluster.",
                        "type": "string"
                    },
                    "DbClusterResourceId": {
                        "description": "The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.",
                        "type": "string"
                    },
                    "EarliestRestorableTime": {
                        "description": "Specifies the earliest time to which a database can be restored with point-in-time restore.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Endpoint": {
                        "description": "Specifies the connection endpoint for the primary instance of the DB cluster.",
                        "type": "string"
                    },
                    "Engine": {
                        "description": "Provides the name of the database engine to be used for this DB cluster.",
                        "type": "string"
                    },
                    "EngineVersion": {
                        "description": "Indicates the database engine version.",
                        "type": "string"
                    },
                    "HostedZoneId": {
                        "description": "Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.",
                        "type": "string"
                    },
                    "IAMDatabaseAuthenticationEnabled": {
                        "description": "True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.",
                        "type": "boolean"
                    },
                    "KmsKeyId": {
                        "description": "If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB cluster.",
                        "type": "string"
                    },
                    "LatestRestorableTime": {
                        "description": "Specifies the latest time to which a database can be restored with point-in-time restore.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "MasterUsername": {
                        "description": "Contains the master username for the DB cluster.",
                        "type": "string"
                    },
                    "MultiAZ": {
                        "description": "Specifies whether the DB cluster has instances in multiple Availability Zones.",
                        "type": "boolean"
                    },
                    "PercentProgress": {
                        "description": "Specifies the progress of the operation as a percentage.",
                        "type": "string"
                    },
                    "Port": {
                        "description": "Specifies the port that the database engine is listening on.",
                        "type": "integer"
                    },
                    "PreferredBackupWindow": {
                        "description": "Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. ",
                        "type": "string"
                    },
                    "PreferredMaintenanceWindow": {
                        "description": "Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
                        "type": "string"
                    },
                    "ReadReplicaIdentifiers": {
                        "description": "Contains one or more identifiers of the Read Replicas associated with this DB cluster.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "ReaderEndpoint": {
                        "description": "<p>The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances connections across the Read Replicas that are available in a DB cluster. As clients request new connections to the reader endpoint, Neptune distributes the connection requests among the Read Replicas in the DB cluster. This functionality can help balance your read workload across multiple Read Replicas in your DB cluster. </p> <p>If a failover occurs, and the Read Replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Read Replicas in the cluster, you can then reconnect to the reader endpoint.</p>",
                        "type": "string"
                    },
                    "ReplicationSourceIdentifier": {
                        "description": "Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "Specifies the current state of this DB cluster.",
                        "type": "string"
                    },
                    "StorageEncrypted": {
                        "description": "Specifies whether the DB cluster is encrypted.",
                        "type": "boolean"
                    },
                    "VpcSecurityGroups": {
                        "description": "Provides a list of VPC security groups that the DB cluster belongs to.",
                        "items": {
                            "description": "This data type is used as a response element for queries on VPC security group membership.",
                            "properties": {
                                "Status": {
                                    "description": "The status of the VPC security group.",
                                    "type": "string"
                                },
                                "VpcSecurityGroupId": {
                                    "description": "The name of the VPC security group.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DBClusterAlreadyExistsFault": {
                "description": "User already has a DB cluster with the given identifier.",
                "properties": {},
                "type": "object"
            },
            "DBClusterList": {
                "items": {
                    "description": "<p>Contains the details of an Amazon Neptune DB cluster. </p> <p>This data type is used as a response element in the <a>DescribeDBClusters</a> action. </p>",
                    "properties": {
                        "AllocatedStorage": {
                            "description": " <code>AllocatedStorage</code> always returns 1, because Neptune DB cluster storage size is not fixed, but instead automatically adjusts as needed.",
                            "type": "integer"
                        },
                        "AssociatedRoles": {
                            "description": "Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.",
                            "items": {
                                "description": "Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.",
                                "properties": {
                                    "RoleArn": {
                                        "description": "The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "<p>Describes the state of association between the IAM role and the DB cluster. The Status property returns one of the following values:</p> <ul> <li> <p> <code>ACTIVE</code> - the IAM role ARN is associated with the DB cluster and can be used to access other AWS services on your behalf.</p> </li> <li> <p> <code>PENDING</code> - the IAM role ARN is being associated with the DB cluster.</p> </li> <li> <p> <code>INVALID</code> - the IAM role ARN is associated with the DB cluster, but the DB cluster is unable to assume the IAM role in order to access other AWS services on your behalf.</p> </li> </ul>",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "AvailabilityZones": {
                            "description": "Provides the list of EC2 Availability Zones that instances in the DB cluster can be created in.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "BackupRetentionPeriod": {
                            "description": "Specifies the number of days for which automatic DB snapshots are retained.",
                            "type": "integer"
                        },
                        "CharacterSetName": {
                            "description": "If present, specifies the name of the character set that this cluster is associated with.",
                            "type": "string"
                        },
                        "CloneGroupId": {
                            "description": "Identifies the clone group to which the DB cluster is associated.",
                            "type": "string"
                        },
                        "ClusterCreateTime": {
                            "description": "Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).",
                            "format": "date-time",
                            "type": "string"
                        },
                        "DBClusterArn": {
                            "description": "The Amazon Resource Name (ARN) for the DB cluster.",
                            "type": "string"
                        },
                        "DBClusterIdentifier": {
                            "description": "Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.",
                            "type": "string"
                        },
                        "DBClusterMembers": {
                            "description": "Provides the list of instances that make up the DB cluster.",
                            "items": {
                                "description": "Contains information about an instance that is part of a DB cluster.",
                                "properties": {
                                    "DBClusterParameterGroupStatus": {
                                        "description": "Specifies the status of the DB cluster parameter group for this member of the DB cluster.",
                                        "type": "string"
                                    },
                                    "DBInstanceIdentifier": {
                                        "description": "Specifies the instance identifier for this member of the DB cluster.",
                                        "type": "string"
                                    },
                                    "IsClusterWriter": {
                                        "description": "Value that is <code>true</code> if the cluster member is the primary instance for the DB cluster and <code>false</code> otherwise.",
                                        "type": "boolean"
                                    },
                                    "PromotionTier": {
                                        "description": "A value that specifies the order in which a Read Replica is promoted to the primary instance after a failure of the existing primary instance. ",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "DBClusterOptionGroupMemberships": {
                            "description": "Provides the list of option group memberships for this DB cluster.",
                            "items": {
                                "description": "Contains status information for a DB cluster option group.",
                                "properties": {
                                    "DBClusterOptionGroupName": {
                                        "description": "Specifies the name of the DB cluster option group.",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "Specifies the status of the DB cluster option group.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "DBClusterParameterGroup": {
                            "description": "Specifies the name of the DB cluster parameter group for the DB cluster.",
                            "type": "string"
                        },
                        "DBSubnetGroup": {
                            "description": "Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group.",
                            "type": "string"
                        },
                        "DatabaseName": {
                            "description": "Contains the name of the initial database of this DB cluster that was provided at create time, if one was specified when the DB cluster was created. This same name is returned for the life of the DB cluster.",
                            "type": "string"
                        },
                        "DbClusterResourceId": {
                            "description": "The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.",
                            "type": "string"
                        },
                        "EarliestRestorableTime": {
                            "description": "Specifies the earliest time to which a database can be restored with point-in-time restore.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "Endpoint": {
                            "description": "Specifies the connection endpoint for the primary instance of the DB cluster.",
                            "type": "string"
                        },
                        "Engine": {
                            "description": "Provides the name of the database engine to be used for this DB cluster.",
                            "type": "string"
                        },
                        "EngineVersion": {
                            "description": "Indicates the database engine version.",
                            "type": "string"
                        },
                        "HostedZoneId": {
                            "description": "Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.",
                            "type": "string"
                        },
                        "IAMDatabaseAuthenticationEnabled": {
                            "description": "True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.",
                            "type": "boolean"
                        },
                        "KmsKeyId": {
                            "description": "If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB cluster.",
                            "type": "string"
                        },
                        "LatestRestorableTime": {
                            "description": "Specifies the latest time to which a database can be restored with point-in-time restore.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "MasterUsername": {
                            "description": "Contains the master username for the DB cluster.",
                            "type": "string"
                        },
                        "MultiAZ": {
                            "description": "Specifies whether the DB cluster has instances in multiple Availability Zones.",
                            "type": "boolean"
                        },
                        "PercentProgress": {
                            "description": "Specifies the progress of the operation as a percentage.",
                            "type": "string"
                        },
                        "Port": {
                            "description": "Specifies the port that the database engine is listening on.",
                            "type": "integer"
                        },
                        "PreferredBackupWindow": {
                            "description": "Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. ",
                            "type": "string"
                        },
                        "PreferredMaintenanceWindow": {
                            "description": "Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
                            "type": "string"
                        },
                        "ReadReplicaIdentifiers": {
                            "description": "Contains one or more identifiers of the Read Replicas associated with this DB cluster.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "ReaderEndpoint": {
                            "description": "<p>The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances connections across the Read Replicas that are available in a DB cluster. As clients request new connections to the reader endpoint, Neptune distributes the connection requests among the Read Replicas in the DB cluster. This functionality can help balance your read workload across multiple Read Replicas in your DB cluster. </p> <p>If a failover occurs, and the Read Replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Read Replicas in the cluster, you can then reconnect to the reader endpoint.</p>",
                            "type": "string"
                        },
                        "ReplicationSourceIdentifier": {
                            "description": "Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.",
                            "type": "string"
                        },
                        "Status": {
                            "description": "Specifies the current state of this DB cluster.",
                            "type": "string"
                        },
                        "StorageEncrypted": {
                            "description": "Specifies whether the DB cluster is encrypted.",
                            "type": "boolean"
                        },
                        "VpcSecurityGroups": {
                            "description": "Provides a list of VPC security groups that the DB cluster belongs to.",
                            "items": {
                                "description": "This data type is used as a response element for queries on VPC security group membership.",
                                "properties": {
                                    "Status": {
                                        "description": "The status of the VPC security group.",
                                        "type": "string"
                                    },
                                    "VpcSecurityGroupId": {
                                        "description": "The name of the VPC security group.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "DBClusterMember": {
                "description": "Contains information about an instance that is part of a DB cluster.",
                "properties": {
                    "DBClusterParameterGroupStatus": {
                        "description": "Specifies the status of the DB cluster parameter group for this member of the DB cluster.",
                        "type": "string"
                    },
                    "DBInstanceIdentifier": {
                        "description": "Specifies the instance identifier for this member of the DB cluster.",
                        "type": "string"
                    },
                    "IsClusterWriter": {
                        "description": "Value that is <code>true</code> if the cluster member is the primary instance for the DB cluster and <code>false</code> otherwise.",
                        "type": "boolean"
                    },
                    "PromotionTier": {
                        "description": "A value that specifies the order in which a Read Replica is promoted to the primary instance after a failure of the existing primary instance. ",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DBClusterMemberList": {
                "items": {
                    "description": "Contains information about an instance that is part of a DB cluster.",
                    "properties": {
                        "DBClusterParameterGroupStatus": {
                            "description": "Specifies the status of the DB cluster parameter group for this member of the DB cluster.",
                            "type": "string"
                        },
                        "DBInstanceIdentifier": {
                            "description": "Specifies the instance identifier for this member of the DB cluster.",
                            "type": "string"
                        },
                        "IsClusterWriter": {
                            "description": "Value that is <code>true</code> if the cluster member is the primary instance for the DB cluster and <code>false</code> otherwise.",
                            "type": "boolean"
                        },
                        "PromotionTier": {
                            "description": "A value that specifies the order in which a Read Replica is promoted to the primary instance after a failure of the existing primary instance. ",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "DBClusterMessage": {
                "description": "Contains the result of a successful invocation of the <a>DescribeDBClusters</a> action.",
                "properties": {
                    "DBClusters": {
                        "description": "Contains a list of DB clusters for the user.",
                        "items": {
                            "description": "<p>Contains the details of an Amazon Neptune DB cluster. </p> <p>This data type is used as a response element in the <a>DescribeDBClusters</a> action. </p>",
                            "properties": {
                                "AllocatedStorage": {
                                    "description": " <code>AllocatedStorage</code> always returns 1, because Neptune DB cluster storage size is not fixed, but instead automatically adjusts as needed.",
                                    "type": "integer"
                                },
                                "AssociatedRoles": {
                                    "description": "Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.",
                                    "items": {
                                        "description": "Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.",
                                        "properties": {
                                            "RoleArn": {
                                                "description": "The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.",
                                                "type": "string"
                                            },
                                            "Status": {
                                                "description": "<p>Describes the state of association between the IAM role and the DB cluster. The Status property returns one of the following values:</p> <ul> <li> <p> <code>ACTIVE</code> - the IAM role ARN is associated with the DB cluster and can be used to access other AWS services on your behalf.</p> </li> <li> <p> <code>PENDING</code> - the IAM role ARN is being associated with the DB cluster.</p> </li> <li> <p> <code>INVALID</code> - the IAM role ARN is associated with the DB cluster, but the DB cluster is unable to assume the IAM role in order to access other AWS services on your behalf.</p> </li> </ul>",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "AvailabilityZones": {
                                    "description": "Provides the list of EC2 Availability Zones that instances in the DB cluster can be created in.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "BackupRetentionPeriod": {
                                    "description": "Specifies the number of days for which automatic DB snapshots are retained.",
                                    "type": "integer"
                                },
                                "CharacterSetName": {
                                    "description": "If present, specifies the name of the character set that this cluster is associated with.",
                                    "type": "string"
                                },
                                "CloneGroupId": {
                                    "description": "Identifies the clone group to which the DB cluster is associated.",
                                    "type": "string"
                                },
                                "ClusterCreateTime": {
                                    "description": "Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "DBClusterArn": {
                                    "description": "The Amazon Resource Name (ARN) for the DB cluster.",
                                    "type": "string"
                                },
                                "DBClusterIdentifier": {
                                    "description": "Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.",
                                    "type": "string"
                                },
                                "DBClusterMembers": {
                                    "description": "Provides the list of instances that make up the DB cluster.",
                                    "items": {
                                        "description": "Contains information about an instance that is part of a DB cluster.",
                                        "properties": {
                                            "DBClusterParameterGroupStatus": {
                                                "description": "Specifies the status of the DB cluster parameter group for this member of the DB cluster.",
                                                "type": "string"
                                            },
                                            "DBInstanceIdentifier": {
                                                "description": "Specifies the instance identifier for this member of the DB cluster.",
                                                "type": "string"
                                            },
                                            "IsClusterWriter": {
                                                "description": "Value that is <code>true</code> if the cluster member is the primary instance for the DB cluster and <code>false</code> otherwise.",
                                                "type": "boolean"
                                            },
                                            "PromotionTier": {
                                                "description": "A value that specifies the order in which a Read Replica is promoted to the primary instance after a failure of the existing primary instance. ",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "DBClusterOptionGroupMemberships": {
                                    "description": "Provides the list of option group memberships for this DB cluster.",
                                    "items": {
                                        "description": "Contains status information for a DB cluster option group.",
                                        "properties": {
                                            "DBClusterOptionGroupName": {
                                                "description": "Specifies the name of the DB cluster option group.",
                                                "type": "string"
                                            },
                                            "Status": {
                                                "description": "Specifies the status of the DB cluster option group.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "DBClusterParameterGroup": {
                                    "description": "Specifies the name of the DB cluster parameter group for the DB cluster.",
                                    "type": "string"
                                },
                                "DBSubnetGroup": {
                                    "description": "Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group.",
                                    "type": "string"
                                },
                                "DatabaseName": {
                                    "description": "Contains the name of the initial database of this DB cluster that was provided at create time, if one was specified when the DB cluster was created. This same name is returned for the life of the DB cluster.",
                                    "type": "string"
                                },
                                "DbClusterResourceId": {
                                    "description": "The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.",
                                    "type": "string"
                                },
                                "EarliestRestorableTime": {
                                    "description": "Specifies the earliest time to which a database can be restored with point-in-time restore.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Endpoint": {
                                    "description": "Specifies the connection endpoint for the primary instance of the DB cluster.",
                                    "type": "string"
                                },
                                "Engine": {
                                    "description": "Provides the name of the database engine to be used for this DB cluster.",
                                    "type": "string"
                                },
                                "EngineVersion": {
                                    "description": "Indicates the database engine version.",
                                    "type": "string"
                                },
                                "HostedZoneId": {
                                    "description": "Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.",
                                    "type": "string"
                                },
                                "IAMDatabaseAuthenticationEnabled": {
                                    "description": "True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.",
                                    "type": "boolean"
                                },
                                "KmsKeyId": {
                                    "description": "If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB cluster.",
                                    "type": "string"
                                },
                                "LatestRestorableTime": {
                                    "description": "Specifies the latest time to which a database can be restored with point-in-time restore.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "MasterUsername": {
                                    "description": "Contains the master username for the DB cluster.",
                                    "type": "string"
                                },
                                "MultiAZ": {
                                    "description": "Specifies whether the DB cluster has instances in multiple Availability Zones.",
                                    "type": "boolean"
                                },
                                "PercentProgress": {
                                    "description": "Specifies the progress of the operation as a percentage.",
                                    "type": "string"
                                },
                                "Port": {
                                    "description": "Specifies the port that the database engine is listening on.",
                                    "type": "integer"
                                },
                                "PreferredBackupWindow": {
                                    "description": "Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. ",
                                    "type": "string"
                                },
                                "PreferredMaintenanceWindow": {
                                    "description": "Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
                                    "type": "string"
                                },
                                "ReadReplicaIdentifiers": {
                                    "description": "Contains one or more identifiers of the Read Replicas associated with this DB cluster.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "ReaderEndpoint": {
                                    "description": "<p>The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances connections across the Read Replicas that are available in a DB cluster. As clients request new connections to the reader endpoint, Neptune distributes the connection requests among the Read Replicas in the DB cluster. This functionality can help balance your read workload across multiple Read Replicas in your DB cluster. </p> <p>If a failover occurs, and the Read Replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Read Replicas in the cluster, you can then reconnect to the reader endpoint.</p>",
                                    "type": "string"
                                },
                                "ReplicationSourceIdentifier": {
                                    "description": "Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.",
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "Specifies the current state of this DB cluster.",
                                    "type": "string"
                                },
                                "StorageEncrypted": {
                                    "description": "Specifies whether the DB cluster is encrypted.",
                                    "type": "boolean"
                                },
                                "VpcSecurityGroups": {
                                    "description": "Provides a list of VPC security groups that the DB cluster belongs to.",
                                    "items": {
                                        "description": "This data type is used as a response element for queries on VPC security group membership.",
                                        "properties": {
                                            "Status": {
                                                "description": "The status of the VPC security group.",
                                                "type": "string"
                                            },
                                            "VpcSecurityGroupId": {
                                                "description": "The name of the VPC security group.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": "A pagination token that can be used in a subsequent DescribeDBClusters request.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DBClusterNotFoundFault": {
                "description": " <i>DBClusterIdentifier</i> does not refer to an existing DB cluster. ",
                "properties": {},
                "type": "object"
            },
            "DBClusterOptionGroupMemberships": {
                "items": {
                    "description": "Contains status information for a DB cluster option group.",
                    "properties": {
                        "DBClusterOptionGroupName": {
                            "description": "Specifies the name of the DB cluster option group.",
                            "type": "string"
                        },
                        "Status": {
                            "description": "Specifies the status of the DB cluster option group.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "DBClusterOptionGroupStatus": {
                "description": "Contains status information for a DB cluster option group.",
                "properties": {
                    "DBClusterOptionGroupName": {
                        "description": "Specifies the name of the DB cluster option group.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "Specifies the status of the DB cluster option group.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DBClusterParameterGroup": {
                "description": "<p>Contains the details of an Amazon Neptune DB cluster parameter group. </p> <p>This data type is used as a response element in the <a>DescribeDBClusterParameterGroups</a> action. </p>",
                "properties": {
                    "DBClusterParameterGroupArn": {
                        "description": "The Amazon Resource Name (ARN) for the DB cluster parameter group.",
                        "type": "string"
                    },
                    "DBClusterParameterGroupName": {
                        "description": "Provides the name of the DB cluster parameter group.",
                        "type": "string"
                    },
                    "DBParameterGroupFamily": {
                        "description": "Provides the name of the DB parameter group family that this DB cluster parameter group is compatible with.",
                        "type": "string"
                    },
                    "Description": {
                        "description": "Provides the customer-specified description for this DB cluster parameter group.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DBClusterParameterGroupDetails": {
                "description": "Provides details about a DB cluster parameter group including the parameters in the DB cluster parameter group.",
                "properties": {
                    "Marker": {
                        "description": " An optional pagination token provided by a previous DescribeDBClusterParameters request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> . ",
                        "type": "string"
                    },
                    "Parameters": {
                        "description": "Provides a list of parameters for the DB cluster parameter group.",
                        "items": {
                            "description": "<p> This data type is used as a request parameter in the <a>ModifyDBParameterGroup</a> and <a>ResetDBParameterGroup</a> actions. </p> <p>This data type is used as a response element in the <a>DescribeEngineDefaultParameters</a> and <a>DescribeDBParameters</a> actions.</p>",
                            "properties": {
                                "AllowedValues": {
                                    "description": "Specifies the valid range of values for the parameter.",
                                    "type": "string"
                                },
                                "ApplyMethod": {
                                    "description": "Indicates when to apply parameter updates.",
                                    "enum": [
                                        "immediate",
                                        "pending-reboot"
                                    ],
                                    "type": "string"
                                },
                                "ApplyType": {
                                    "description": "Specifies the engine specific parameters type.",
                                    "type": "string"
                                },
                                "DataType": {
                                    "description": "Specifies the valid data type for the parameter.",
                                    "type": "string"
                                },
                                "Description": {
                                    "description": "Provides a description of the parameter.",
                                    "type": "string"
                                },
                                "IsModifiable": {
                                    "description": " Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed. ",
                                    "type": "boolean"
                                },
                                "MinimumEngineVersion": {
                                    "description": "The earliest engine version to which the parameter can apply.",
                                    "type": "string"
                                },
                                "ParameterName": {
                                    "description": "Specifies the name of the parameter.",
                                    "type": "string"
                                },
                                "ParameterValue": {
                                    "description": "Specifies the value of the parameter.",
                                    "type": "string"
                                },
                                "Source": {
                                    "description": "Indicates the source of the parameter value.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DBClusterParameterGroupList": {
                "items": {
                    "description": "<p>Contains the details of an Amazon Neptune DB cluster parameter group. </p> <p>This data type is used as a response element in the <a>DescribeDBClusterParameterGroups</a> action. </p>",
                    "properties": {
                        "DBClusterParameterGroupArn": {
                            "description": "The Amazon Resource Name (ARN) for the DB cluster parameter group.",
                            "type": "string"
                        },
                        "DBClusterParameterGroupName": {
                            "description": "Provides the name of the DB cluster parameter group.",
                            "type": "string"
                        },
                        "DBParameterGroupFamily": {
                            "description": "Provides the name of the DB parameter group family that this DB cluster parameter group is compatible with.",
                            "type": "string"
                        },
                        "Description": {
                            "description": "Provides the customer-specified description for this DB cluster parameter group.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "DBClusterParameterGroupNameMessage": {
                "description": "<p/>",
                "properties": {
                    "DBClusterParameterGroupName": {
                        "description": "<p>The name of the DB cluster parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters or numbers.</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <note> <p>This value is stored as a lowercase string.</p> </note>",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DBClusterParameterGroupNotFoundFault": {
                "description": " <i>DBClusterParameterGroupName</i> does not refer to an existing DB Cluster parameter group. ",
                "properties": {},
                "type": "object"
            },
            "DBClusterParameterGroupsMessage": {
                "description": "<p/>",
                "properties": {
                    "DBClusterParameterGroups": {
                        "description": "A list of DB cluster parameter groups.",
                        "items": {
                            "description": "<p>Contains the details of an Amazon Neptune DB cluster parameter group. </p> <p>This data type is used as a response element in the <a>DescribeDBClusterParameterGroups</a> action. </p>",
                            "properties": {
                                "DBClusterParameterGroupArn": {
                                    "description": "The Amazon Resource Name (ARN) for the DB cluster parameter group.",
                                    "type": "string"
                                },
                                "DBClusterParameterGroupName": {
                                    "description": "Provides the name of the DB cluster parameter group.",
                                    "type": "string"
                                },
                                "DBParameterGroupFamily": {
                                    "description": "Provides the name of the DB parameter group family that this DB cluster parameter group is compatible with.",
                                    "type": "string"
                                },
                                "Description": {
                                    "description": "Provides the customer-specified description for this DB cluster parameter group.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous <code>DescribeDBClusterParameterGroups</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DBClusterQuotaExceededFault": {
                "description": "User attempted to create a new DB cluster and the user has already reached the maximum allowed DB cluster quota.",
                "properties": {},
                "type": "object"
            },
            "DBClusterRole": {
                "description": "Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.",
                "properties": {
                    "RoleArn": {
                        "description": "The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "<p>Describes the state of association between the IAM role and the DB cluster. The Status property returns one of the following values:</p> <ul> <li> <p> <code>ACTIVE</code> - the IAM role ARN is associated with the DB cluster and can be used to access other AWS services on your behalf.</p> </li> <li> <p> <code>PENDING</code> - the IAM role ARN is being associated with the DB cluster.</p> </li> <li> <p> <code>INVALID</code> - the IAM role ARN is associated with the DB cluster, but the DB cluster is unable to assume the IAM role in order to access other AWS services on your behalf.</p> </li> </ul>",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DBClusterRoleAlreadyExistsFault": {
                "description": "The specified IAM role Amazon Resource Name (ARN) is already associated with the specified DB cluster.",
                "properties": {},
                "type": "object"
            },
            "DBClusterRoleNotFoundFault": {
                "description": "The specified IAM role Amazon Resource Name (ARN) is not associated with the specified DB cluster.",
                "properties": {},
                "type": "object"
            },
            "DBClusterRoleQuotaExceededFault": {
                "description": "You have exceeded the maximum number of IAM roles that can be associated with the specified DB cluster.",
                "properties": {},
                "type": "object"
            },
            "DBClusterRoles": {
                "items": {
                    "description": "Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.",
                    "properties": {
                        "RoleArn": {
                            "description": "The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.",
                            "type": "string"
                        },
                        "Status": {
                            "description": "<p>Describes the state of association between the IAM role and the DB cluster. The Status property returns one of the following values:</p> <ul> <li> <p> <code>ACTIVE</code> - the IAM role ARN is associated with the DB cluster and can be used to access other AWS services on your behalf.</p> </li> <li> <p> <code>PENDING</code> - the IAM role ARN is being associated with the DB cluster.</p> </li> <li> <p> <code>INVALID</code> - the IAM role ARN is associated with the DB cluster, but the DB cluster is unable to assume the IAM role in order to access other AWS services on your behalf.</p> </li> </ul>",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "DBClusterSnapshot": {
                "description": "<p>Contains the details for an Amazon Neptune DB cluster snapshot </p> <p>This data type is used as a response element in the <a>DescribeDBClusterSnapshots</a> action. </p>",
                "properties": {
                    "AllocatedStorage": {
                        "description": "Specifies the allocated storage size in gibibytes (GiB).",
                        "type": "integer"
                    },
                    "AvailabilityZones": {
                        "description": "Provides the list of EC2 Availability Zones that instances in the DB cluster snapshot can be restored in.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "ClusterCreateTime": {
                        "description": "Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).",
                        "format": "date-time",
                        "type": "string"
                    },
                    "DBClusterIdentifier": {
                        "description": "Specifies the DB cluster identifier of the DB cluster that this DB cluster snapshot was created from.",
                        "type": "string"
                    },
                    "DBClusterSnapshotArn": {
                        "description": "The Amazon Resource Name (ARN) for the DB cluster snapshot.",
                        "type": "string"
                    },
                    "DBClusterSnapshotIdentifier": {
                        "description": "Specifies the identifier for the DB cluster snapshot.",
                        "type": "string"
                    },
                    "Engine": {
                        "description": "Specifies the name of the database engine.",
                        "type": "string"
                    },
                    "EngineVersion": {
                        "description": "Provides the version of the database engine for this DB cluster snapshot.",
                        "type": "string"
                    },
                    "IAMDatabaseAuthenticationEnabled": {
                        "description": "True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.",
                        "type": "boolean"
                    },
                    "KmsKeyId": {
                        "description": "If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB cluster snapshot.",
                        "type": "string"
                    },
                    "LicenseModel": {
                        "description": "Provides the license model information for this DB cluster snapshot.",
                        "type": "string"
                    },
                    "MasterUsername": {
                        "description": "Provides the master username for the DB cluster snapshot.",
                        "type": "string"
                    },
                    "PercentProgress": {
                        "description": "Specifies the percentage of the estimated data that has been transferred.",
                        "type": "integer"
                    },
                    "Port": {
                        "description": "Specifies the port that the DB cluster was listening on at the time of the snapshot.",
                        "type": "integer"
                    },
                    "SnapshotCreateTime": {
                        "description": "Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).",
                        "format": "date-time",
                        "type": "string"
                    },
                    "SnapshotType": {
                        "description": "Provides the type of the DB cluster snapshot.",
                        "type": "string"
                    },
                    "SourceDBClusterSnapshotArn": {
                        "description": "If the DB cluster snapshot was copied from a source DB cluster snapshot, the Amazon Resource Name (ARN) for the source DB cluster snapshot, otherwise, a null value.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "Specifies the status of this DB cluster snapshot.",
                        "type": "string"
                    },
                    "StorageEncrypted": {
                        "description": "Specifies whether the DB cluster snapshot is encrypted.",
                        "type": "boolean"
                    },
                    "VpcId": {
                        "description": "Provides the VPC ID associated with the DB cluster snapshot.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DBClusterSnapshotAlreadyExistsFault": {
                "description": "User already has a DB cluster snapshot with the given identifier.",
                "properties": {},
                "type": "object"
            },
            "DBClusterSnapshotAttribute": {
                "description": "<p>Contains the name and values of a manual DB cluster snapshot attribute.</p> <p>Manual DB cluster snapshot attributes are used to authorize other AWS accounts to restore a manual DB cluster snapshot. For more information, see the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>",
                "properties": {
                    "AttributeName": {
                        "description": "<p>The name of the manual DB cluster snapshot attribute.</p> <p>The attribute named <code>restore</code> refers to the list of AWS accounts that have permission to copy or restore the manual DB cluster snapshot. For more information, see the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>",
                        "type": "string"
                    },
                    "AttributeValues": {
                        "description": "<p>The value(s) for the manual DB cluster snapshot attribute.</p> <p>If the <code>AttributeName</code> field is set to <code>restore</code>, then this element returns a list of IDs of the AWS accounts that are authorized to copy or restore the manual DB cluster snapshot. If a value of <code>all</code> is in the list, then the manual DB cluster snapshot is public and available for any AWS account to copy or restore.</p>",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DBClusterSnapshotAttributeList": {
                "items": {
                    "description": "<p>Contains the name and values of a manual DB cluster snapshot attribute.</p> <p>Manual DB cluster snapshot attributes are used to authorize other AWS accounts to restore a manual DB cluster snapshot. For more information, see the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>",
                    "properties": {
                        "AttributeName": {
                            "description": "<p>The name of the manual DB cluster snapshot attribute.</p> <p>The attribute named <code>restore</code> refers to the list of AWS accounts that have permission to copy or restore the manual DB cluster snapshot. For more information, see the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>",
                            "type": "string"
                        },
                        "AttributeValues": {
                            "description": "<p>The value(s) for the manual DB cluster snapshot attribute.</p> <p>If the <code>AttributeName</code> field is set to <code>restore</code>, then this element returns a list of IDs of the AWS accounts that are authorized to copy or restore the manual DB cluster snapshot. If a value of <code>all</code> is in the list, then the manual DB cluster snapshot is public and available for any AWS account to copy or restore.</p>",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "DBClusterSnapshotAttributesResult": {
                "description": "<p>Contains the results of a successful call to the <a>DescribeDBClusterSnapshotAttributes</a> API action.</p> <p>Manual DB cluster snapshot attributes are used to authorize other AWS accounts to copy or restore a manual DB cluster snapshot. For more information, see the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>",
                "properties": {
                    "DBClusterSnapshotAttributes": {
                        "description": "The list of attributes and values for the manual DB cluster snapshot.",
                        "items": {
                            "description": "<p>Contains the name and values of a manual DB cluster snapshot attribute.</p> <p>Manual DB cluster snapshot attributes are used to authorize other AWS accounts to restore a manual DB cluster snapshot. For more information, see the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>",
                            "properties": {
                                "AttributeName": {
                                    "description": "<p>The name of the manual DB cluster snapshot attribute.</p> <p>The attribute named <code>restore</code> refers to the list of AWS accounts that have permission to copy or restore the manual DB cluster snapshot. For more information, see the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>",
                                    "type": "string"
                                },
                                "AttributeValues": {
                                    "description": "<p>The value(s) for the manual DB cluster snapshot attribute.</p> <p>If the <code>AttributeName</code> field is set to <code>restore</code>, then this element returns a list of IDs of the AWS accounts that are authorized to copy or restore the manual DB cluster snapshot. If a value of <code>all</code> is in the list, then the manual DB cluster snapshot is public and available for any AWS account to copy or restore.</p>",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "DBClusterSnapshotIdentifier": {
                        "description": "The identifier of the manual DB cluster snapshot that the attributes apply to.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DBClusterSnapshotList": {
                "items": {
                    "description": "<p>Contains the details for an Amazon Neptune DB cluster snapshot </p> <p>This data type is used as a response element in the <a>DescribeDBClusterSnapshots</a> action. </p>",
                    "properties": {
                        "AllocatedStorage": {
                            "description": "Specifies the allocated storage size in gibibytes (GiB).",
                            "type": "integer"
                        },
                        "AvailabilityZones": {
                            "description": "Provides the list of EC2 Availability Zones that instances in the DB cluster snapshot can be restored in.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "ClusterCreateTime": {
                            "description": "Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).",
                            "format": "date-time",
                            "type": "string"
                        },
                        "DBClusterIdentifier": {
                            "description": "Specifies the DB cluster identifier of the DB cluster that this DB cluster snapshot was created from.",
                            "type": "string"
                        },
                        "DBClusterSnapshotArn": {
                            "description": "The Amazon Resource Name (ARN) for the DB cluster snapshot.",
                            "type": "string"
                        },
                        "DBClusterSnapshotIdentifier": {
                            "description": "Specifies the identifier for the DB cluster snapshot.",
                            "type": "string"
                        },
                        "Engine": {
                            "description": "Specifies the name of the database engine.",
                            "type": "string"
                        },
                        "EngineVersion": {
                            "description": "Provides the version of the database engine for this DB cluster snapshot.",
                            "type": "string"
                        },
                        "IAMDatabaseAuthenticationEnabled": {
                            "description": "True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.",
                            "type": "boolean"
                        },
                        "KmsKeyId": {
                            "description": "If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB cluster snapshot.",
                            "type": "string"
                        },
                        "LicenseModel": {
                            "description": "Provides the license model information for this DB cluster snapshot.",
                            "type": "string"
                        },
                        "MasterUsername": {
                            "description": "Provides the master username for the DB cluster snapshot.",
                            "type": "string"
                        },
                        "PercentProgress": {
                            "description": "Specifies the percentage of the estimated data that has been transferred.",
                            "type": "integer"
                        },
                        "Port": {
                            "description": "Specifies the port that the DB cluster was listening on at the time of the snapshot.",
                            "type": "integer"
                        },
                        "SnapshotCreateTime": {
                            "description": "Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).",
                            "format": "date-time",
                            "type": "string"
                        },
                        "SnapshotType": {
                            "description": "Provides the type of the DB cluster snapshot.",
                            "type": "string"
                        },
                        "SourceDBClusterSnapshotArn": {
                            "description": "If the DB cluster snapshot was copied from a source DB cluster snapshot, the Amazon Resource Name (ARN) for the source DB cluster snapshot, otherwise, a null value.",
                            "type": "string"
                        },
                        "Status": {
                            "description": "Specifies the status of this DB cluster snapshot.",
                            "type": "string"
                        },
                        "StorageEncrypted": {
                            "description": "Specifies whether the DB cluster snapshot is encrypted.",
                            "type": "boolean"
                        },
                        "VpcId": {
                            "description": "Provides the VPC ID associated with the DB cluster snapshot.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "DBClusterSnapshotMessage": {
                "description": " Provides a list of DB cluster snapshots for the user as the result of a call to the <a>DescribeDBClusterSnapshots</a> action. ",
                "properties": {
                    "DBClusterSnapshots": {
                        "description": "Provides a list of DB cluster snapshots for the user.",
                        "items": {
                            "description": "<p>Contains the details for an Amazon Neptune DB cluster snapshot </p> <p>This data type is used as a response element in the <a>DescribeDBClusterSnapshots</a> action. </p>",
                            "properties": {
                                "AllocatedStorage": {
                                    "description": "Specifies the allocated storage size in gibibytes (GiB).",
                                    "type": "integer"
                                },
                                "AvailabilityZones": {
                                    "description": "Provides the list of EC2 Availability Zones that instances in the DB cluster snapshot can be restored in.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "ClusterCreateTime": {
                                    "description": "Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "DBClusterIdentifier": {
                                    "description": "Specifies the DB cluster identifier of the DB cluster that this DB cluster snapshot was created from.",
                                    "type": "string"
                                },
                                "DBClusterSnapshotArn": {
                                    "description": "The Amazon Resource Name (ARN) for the DB cluster snapshot.",
                                    "type": "string"
                                },
                                "DBClusterSnapshotIdentifier": {
                                    "description": "Specifies the identifier for the DB cluster snapshot.",
                                    "type": "string"
                                },
                                "Engine": {
                                    "description": "Specifies the name of the database engine.",
                                    "type": "string"
                                },
                                "EngineVersion": {
                                    "description": "Provides the version of the database engine for this DB cluster snapshot.",
                                    "type": "string"
                                },
                                "IAMDatabaseAuthenticationEnabled": {
                                    "description": "True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.",
                                    "type": "boolean"
                                },
                                "KmsKeyId": {
                                    "description": "If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB cluster snapshot.",
                                    "type": "string"
                                },
                                "LicenseModel": {
                                    "description": "Provides the license model information for this DB cluster snapshot.",
                                    "type": "string"
                                },
                                "MasterUsername": {
                                    "description": "Provides the master username for the DB cluster snapshot.",
                                    "type": "string"
                                },
                                "PercentProgress": {
                                    "description": "Specifies the percentage of the estimated data that has been transferred.",
                                    "type": "integer"
                                },
                                "Port": {
                                    "description": "Specifies the port that the DB cluster was listening on at the time of the snapshot.",
                                    "type": "integer"
                                },
                                "SnapshotCreateTime": {
                                    "description": "Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "SnapshotType": {
                                    "description": "Provides the type of the DB cluster snapshot.",
                                    "type": "string"
                                },
                                "SourceDBClusterSnapshotArn": {
                                    "description": "If the DB cluster snapshot was copied from a source DB cluster snapshot, the Amazon Resource Name (ARN) for the source DB cluster snapshot, otherwise, a null value.",
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "Specifies the status of this DB cluster snapshot.",
                                    "type": "string"
                                },
                                "StorageEncrypted": {
                                    "description": "Specifies whether the DB cluster snapshot is encrypted.",
                                    "type": "boolean"
                                },
                                "VpcId": {
                                    "description": "Provides the VPC ID associated with the DB cluster snapshot.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous <a>DescribeDBClusterSnapshots</a> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DBClusterSnapshotNotFoundFault": {
                "description": " <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot. ",
                "properties": {},
                "type": "object"
            },
            "DBEngineVersion": {
                "description": " This data type is used as a response element in the action <a>DescribeDBEngineVersions</a>. ",
                "properties": {
                    "DBEngineDescription": {
                        "description": "The description of the database engine.",
                        "type": "string"
                    },
                    "DBEngineVersionDescription": {
                        "description": "The description of the database engine version.",
                        "type": "string"
                    },
                    "DBParameterGroupFamily": {
                        "description": "The name of the DB parameter group family for the database engine.",
                        "type": "string"
                    },
                    "DefaultCharacterSet": {
                        "description": " The default character set for new instances of this engine version, if the <code>CharacterSetName</code> parameter of the CreateDBInstance API is not specified. ",
                        "properties": {
                            "CharacterSetDescription": {
                                "description": "The description of the character set.",
                                "type": "string"
                            },
                            "CharacterSetName": {
                                "description": "The name of the character set.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "Engine": {
                        "description": "The name of the database engine.",
                        "type": "string"
                    },
                    "EngineVersion": {
                        "description": "The version number of the database engine.",
                        "type": "string"
                    },
                    "ExportableLogTypes": {
                        "description": "The types of logs that the database engine has available for export to CloudWatch Logs.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "SupportedCharacterSets": {
                        "description": " A list of the character sets supported by this engine for the <code>CharacterSetName</code> parameter of the <code>CreateDBInstance</code> action. ",
                        "items": {
                            "description": " This data type is used as a response element in the action <a>DescribeDBEngineVersions</a>. ",
                            "properties": {
                                "CharacterSetDescription": {
                                    "description": "The description of the character set.",
                                    "type": "string"
                                },
                                "CharacterSetName": {
                                    "description": "The name of the character set.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "SupportedTimezones": {
                        "description": "A list of the time zones supported by this engine for the <code>Timezone</code> parameter of the <code>CreateDBInstance</code> action. ",
                        "items": {
                            "description": "A time zone associated with a <a>DBInstance</a>. This data type is an element in the response to the <a>DescribeDBInstances</a>, and the <a>DescribeDBEngineVersions</a> actions. ",
                            "properties": {
                                "TimezoneName": {
                                    "description": "The name of the time zone.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "SupportsLogExportsToCloudwatchLogs": {
                        "description": "A value that indicates whether the engine version supports exporting the log types specified by ExportableLogTypes to CloudWatch Logs.",
                        "type": "boolean"
                    },
                    "SupportsReadReplica": {
                        "description": "Indicates whether the database engine version supports read replicas.",
                        "type": "boolean"
                    },
                    "ValidUpgradeTarget": {
                        "description": "A list of engine versions that this database engine version can be upgraded to.",
                        "items": {
                            "description": "The version of the database engine that a DB instance can be upgraded to.",
                            "properties": {
                                "AutoUpgrade": {
                                    "description": "A value that indicates whether the target version is applied to any source DB instances that have AutoMinorVersionUpgrade set to true.",
                                    "type": "boolean"
                                },
                                "Description": {
                                    "description": "The version of the database engine that a DB instance can be upgraded to.",
                                    "type": "string"
                                },
                                "Engine": {
                                    "description": "The name of the upgrade target database engine.",
                                    "type": "string"
                                },
                                "EngineVersion": {
                                    "description": "The version number of the upgrade target database engine.",
                                    "type": "string"
                                },
                                "IsMajorVersionUpgrade": {
                                    "description": "A value that indicates whether a database engine is upgraded to a major version.",
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DBEngineVersionList": {
                "items": {
                    "description": " This data type is used as a response element in the action <a>DescribeDBEngineVersions</a>. ",
                    "properties": {
                        "DBEngineDescription": {
                            "description": "The description of the database engine.",
                            "type": "string"
                        },
                        "DBEngineVersionDescription": {
                            "description": "The description of the database engine version.",
                            "type": "string"
                        },
                        "DBParameterGroupFamily": {
                            "description": "The name of the DB parameter group family for the database engine.",
                            "type": "string"
                        },
                        "DefaultCharacterSet": {
                            "description": " The default character set for new instances of this engine version, if the <code>CharacterSetName</code> parameter of the CreateDBInstance API is not specified. ",
                            "properties": {
                                "CharacterSetDescription": {
                                    "description": "The description of the character set.",
                                    "type": "string"
                                },
                                "CharacterSetName": {
                                    "description": "The name of the character set.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "Engine": {
                            "description": "The name of the database engine.",
                            "type": "string"
                        },
                        "EngineVersion": {
                            "description": "The version number of the database engine.",
                            "type": "string"
                        },
                        "ExportableLogTypes": {
                            "description": "The types of logs that the database engine has available for export to CloudWatch Logs.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "SupportedCharacterSets": {
                            "description": " A list of the character sets supported by this engine for the <code>CharacterSetName</code> parameter of the <code>CreateDBInstance</code> action. ",
                            "items": {
                                "description": " This data type is used as a response element in the action <a>DescribeDBEngineVersions</a>. ",
                                "properties": {
                                    "CharacterSetDescription": {
                                        "description": "The description of the character set.",
                                        "type": "string"
                                    },
                                    "CharacterSetName": {
                                        "description": "The name of the character set.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "SupportedTimezones": {
                            "description": "A list of the time zones supported by this engine for the <code>Timezone</code> parameter of the <code>CreateDBInstance</code> action. ",
                            "items": {
                                "description": "A time zone associated with a <a>DBInstance</a>. This data type is an element in the response to the <a>DescribeDBInstances</a>, and the <a>DescribeDBEngineVersions</a> actions. ",
                                "properties": {
                                    "TimezoneName": {
                                        "description": "The name of the time zone.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "SupportsLogExportsToCloudwatchLogs": {
                            "description": "A value that indicates whether the engine version supports exporting the log types specified by ExportableLogTypes to CloudWatch Logs.",
                            "type": "boolean"
                        },
                        "SupportsReadReplica": {
                            "description": "Indicates whether the database engine version supports read replicas.",
                            "type": "boolean"
                        },
                        "ValidUpgradeTarget": {
                            "description": "A list of engine versions that this database engine version can be upgraded to.",
                            "items": {
                                "description": "The version of the database engine that a DB instance can be upgraded to.",
                                "properties": {
                                    "AutoUpgrade": {
                                        "description": "A value that indicates whether the target version is applied to any source DB instances that have AutoMinorVersionUpgrade set to true.",
                                        "type": "boolean"
                                    },
                                    "Description": {
                                        "description": "The version of the database engine that a DB instance can be upgraded to.",
                                        "type": "string"
                                    },
                                    "Engine": {
                                        "description": "The name of the upgrade target database engine.",
                                        "type": "string"
                                    },
                                    "EngineVersion": {
                                        "description": "The version number of the upgrade target database engine.",
                                        "type": "string"
                                    },
                                    "IsMajorVersionUpgrade": {
                                        "description": "A value that indicates whether a database engine is upgraded to a major version.",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "DBEngineVersionMessage": {
                "description": " Contains the result of a successful invocation of the <a>DescribeDBEngineVersions</a> action. ",
                "properties": {
                    "DBEngineVersions": {
                        "description": " A list of <code>DBEngineVersion</code> elements. ",
                        "items": {
                            "description": " This data type is used as a response element in the action <a>DescribeDBEngineVersions</a>. ",
                            "properties": {
                                "DBEngineDescription": {
                                    "description": "The description of the database engine.",
                                    "type": "string"
                                },
                                "DBEngineVersionDescription": {
                                    "description": "The description of the database engine version.",
                                    "type": "string"
                                },
                                "DBParameterGroupFamily": {
                                    "description": "The name of the DB parameter group family for the database engine.",
                                    "type": "string"
                                },
                                "DefaultCharacterSet": {
                                    "description": " The default character set for new instances of this engine version, if the <code>CharacterSetName</code> parameter of the CreateDBInstance API is not specified. ",
                                    "properties": {
                                        "CharacterSetDescription": {
                                            "description": "The description of the character set.",
                                            "type": "string"
                                        },
                                        "CharacterSetName": {
                                            "description": "The name of the character set.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Engine": {
                                    "description": "The name of the database engine.",
                                    "type": "string"
                                },
                                "EngineVersion": {
                                    "description": "The version number of the database engine.",
                                    "type": "string"
                                },
                                "ExportableLogTypes": {
                                    "description": "The types of logs that the database engine has available for export to CloudWatch Logs.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "SupportedCharacterSets": {
                                    "description": " A list of the character sets supported by this engine for the <code>CharacterSetName</code> parameter of the <code>CreateDBInstance</code> action. ",
                                    "items": {
                                        "description": " This data type is used as a response element in the action <a>DescribeDBEngineVersions</a>. ",
                                        "properties": {
                                            "CharacterSetDescription": {
                                                "description": "The description of the character set.",
                                                "type": "string"
                                            },
                                            "CharacterSetName": {
                                                "description": "The name of the character set.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "SupportedTimezones": {
                                    "description": "A list of the time zones supported by this engine for the <code>Timezone</code> parameter of the <code>CreateDBInstance</code> action. ",
                                    "items": {
                                        "description": "A time zone associated with a <a>DBInstance</a>. This data type is an element in the response to the <a>DescribeDBInstances</a>, and the <a>DescribeDBEngineVersions</a> actions. ",
                                        "properties": {
                                            "TimezoneName": {
                                                "description": "The name of the time zone.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "SupportsLogExportsToCloudwatchLogs": {
                                    "description": "A value that indicates whether the engine version supports exporting the log types specified by ExportableLogTypes to CloudWatch Logs.",
                                    "type": "boolean"
                                },
                                "SupportsReadReplica": {
                                    "description": "Indicates whether the database engine version supports read replicas.",
                                    "type": "boolean"
                                },
                                "ValidUpgradeTarget": {
                                    "description": "A list of engine versions that this database engine version can be upgraded to.",
                                    "items": {
                                        "description": "The version of the database engine that a DB instance can be upgraded to.",
                                        "properties": {
                                            "AutoUpgrade": {
                                                "description": "A value that indicates whether the target version is applied to any source DB instances that have AutoMinorVersionUpgrade set to true.",
                                                "type": "boolean"
                                            },
                                            "Description": {
                                                "description": "The version of the database engine that a DB instance can be upgraded to.",
                                                "type": "string"
                                            },
                                            "Engine": {
                                                "description": "The name of the upgrade target database engine.",
                                                "type": "string"
                                            },
                                            "EngineVersion": {
                                                "description": "The version number of the upgrade target database engine.",
                                                "type": "string"
                                            },
                                            "IsMajorVersionUpgrade": {
                                                "description": "A value that indicates whether a database engine is upgraded to a major version.",
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DBInstance": {
                "description": "<p>Contains the details of an Amazon Neptune DB instance. </p> <p>This data type is used as a response element in the <a>DescribeDBInstances</a> action. </p>",
                "properties": {
                    "AllocatedStorage": {
                        "description": "Specifies the allocated storage size specified in gibibytes.",
                        "type": "integer"
                    },
                    "AutoMinorVersionUpgrade": {
                        "description": "Indicates that minor version patches are applied automatically.",
                        "type": "boolean"
                    },
                    "AvailabilityZone": {
                        "description": "Specifies the name of the Availability Zone the DB instance is located in.",
                        "type": "string"
                    },
                    "BackupRetentionPeriod": {
                        "description": "Specifies the number of days for which automatic DB snapshots are retained.",
                        "type": "integer"
                    },
                    "CACertificateIdentifier": {
                        "description": "The identifier of the CA certificate for this DB instance.",
                        "type": "string"
                    },
                    "CharacterSetName": {
                        "description": "If present, specifies the name of the character set that this instance is associated with.",
                        "type": "string"
                    },
                    "CopyTagsToSnapshot": {
                        "description": "Specifies whether tags are copied from the DB instance to snapshots of the DB instance.",
                        "type": "boolean"
                    },
                    "DBClusterIdentifier": {
                        "description": "If the DB instance is a member of a DB cluster, contains the name of the DB cluster that the DB instance is a member of.",
                        "type": "string"
                    },
                    "DBInstanceArn": {
                        "description": "The Amazon Resource Name (ARN) for the DB instance.",
                        "type": "string"
                    },
                    "DBInstanceClass": {
                        "description": "Contains the name of the compute and memory capacity class of the DB instance.",
                        "type": "string"
                    },
                    "DBInstanceIdentifier": {
                        "description": "Contains a user-supplied database identifier. This identifier is the unique key that identifies a DB instance.",
                        "type": "string"
                    },
                    "DBInstanceStatus": {
                        "description": "Specifies the current state of this database.",
                        "type": "string"
                    },
                    "DBName": {
                        "description": "The database name.",
                        "type": "string"
                    },
                    "DBParameterGroups": {
                        "description": "Provides the list of DB parameter groups applied to this DB instance.",
                        "items": {
                            "description": "<p>The status of the DB parameter group.</p> <p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>CreateDBInstance</a> </p> </li> <li> <p> <a>DeleteDBInstance</a> </p> </li> <li> <p> <a>ModifyDBInstance</a> </p> </li> <li> <p> <a>RebootDBInstance</a> </p> </li> </ul>",
                            "properties": {
                                "DBParameterGroupName": {
                                    "description": "The name of the DP parameter group.",
                                    "type": "string"
                                },
                                "ParameterApplyStatus": {
                                    "description": "The status of parameter updates.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "DBSecurityGroups": {
                        "description": " Provides List of DB security group elements containing only <code>DBSecurityGroup.Name</code> and <code>DBSecurityGroup.Status</code> subelements. ",
                        "items": {
                            "description": "<p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>ModifyDBInstance</a> </p> </li> <li> <p> <a>RebootDBInstance</a> </p> </li> </ul>",
                            "properties": {
                                "DBSecurityGroupName": {
                                    "description": "The name of the DB security group.",
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "The status of the DB security group.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "DBSubnetGroup": {
                        "description": "Specifies information on the subnet group associated with the DB instance, including the name, description, and subnets in the subnet group.",
                        "properties": {
                            "DBSubnetGroupArn": {
                                "description": "The Amazon Resource Name (ARN) for the DB subnet group.",
                                "type": "string"
                            },
                            "DBSubnetGroupDescription": {
                                "description": "Provides the description of the DB subnet group.",
                                "type": "string"
                            },
                            "DBSubnetGroupName": {
                                "description": "The name of the DB subnet group.",
                                "type": "string"
                            },
                            "SubnetGroupStatus": {
                                "description": "Provides the status of the DB subnet group.",
                                "type": "string"
                            },
                            "Subnets": {
                                "description": " Contains a list of <a>Subnet</a> elements. ",
                                "items": {
                                    "description": " This data type is used as a response element in the <a>DescribeDBSubnetGroups</a> action. ",
                                    "properties": {
                                        "SubnetAvailabilityZone": {
                                            "description": "<p>Contains Availability Zone information.</p> <p> This data type is used as an element in the following data type:</p> <ul> <li> <p> <a>OrderableDBInstanceOption</a> </p> </li> </ul>",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the availability zone.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "SubnetIdentifier": {
                                            "description": "Specifies the identifier of the subnet.",
                                            "type": "string"
                                        },
                                        "SubnetStatus": {
                                            "description": "Specifies the status of the subnet.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "VpcId": {
                                "description": "Provides the VpcId of the DB subnet group.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "DbInstancePort": {
                        "description": "Specifies the port that the DB instance listens on. If the DB instance is part of a DB cluster, this can be a different port than the DB cluster port.",
                        "type": "integer"
                    },
                    "DbiResourceId": {
                        "description": "The AWS Region-unique, immutable identifier for the DB instance. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.",
                        "type": "string"
                    },
                    "DomainMemberships": {
                        "description": "Not supported",
                        "items": {
                            "description": "An Active Directory Domain membership record associated with the DB instance.",
                            "properties": {
                                "Domain": {
                                    "description": "The identifier of the Active Directory Domain.",
                                    "type": "string"
                                },
                                "FQDN": {
                                    "description": "The fully qualified domain name of the Active Directory Domain.",
                                    "type": "string"
                                },
                                "IAMRoleName": {
                                    "description": "The name of the IAM role to be used when making API calls to the Directory Service.",
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "The status of the DB instance's Active Directory Domain membership, such as joined, pending-join, failed etc).",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "EnabledCloudwatchLogsExports": {
                        "description": "A list of log types that this DB instance is configured to export to CloudWatch Logs.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "Endpoint": {
                        "description": "Specifies the connection endpoint.",
                        "properties": {
                            "Address": {
                                "description": "Specifies the DNS address of the DB instance.",
                                "type": "string"
                            },
                            "HostedZoneId": {
                                "description": "Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.",
                                "type": "string"
                            },
                            "Port": {
                                "description": "Specifies the port that the database engine is listening on.",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "Engine": {
                        "description": "Provides the name of the database engine to be used for this DB instance.",
                        "type": "string"
                    },
                    "EngineVersion": {
                        "description": "Indicates the database engine version.",
                        "type": "string"
                    },
                    "EnhancedMonitoringResourceArn": {
                        "description": "The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the Enhanced Monitoring metrics data for the DB instance.",
                        "type": "string"
                    },
                    "IAMDatabaseAuthenticationEnabled": {
                        "description": "True if AWS Identity and Access Management (IAM) authentication is enabled, and otherwise false.",
                        "type": "boolean"
                    },
                    "InstanceCreateTime": {
                        "description": "Provides the date and time the DB instance was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Iops": {
                        "description": "Specifies the Provisioned IOPS (I/O operations per second) value.",
                        "type": "integer"
                    },
                    "KmsKeyId": {
                        "description": " If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB instance. ",
                        "type": "string"
                    },
                    "LatestRestorableTime": {
                        "description": "Specifies the latest time to which a database can be restored with point-in-time restore.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "LicenseModel": {
                        "description": "License model information for this DB instance.",
                        "type": "string"
                    },
                    "MasterUsername": {
                        "description": "Contains the master username for the DB instance.",
                        "type": "string"
                    },
                    "MonitoringInterval": {
                        "description": "The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance.",
                        "type": "integer"
                    },
                    "MonitoringRoleArn": {
                        "description": "The ARN for the IAM role that permits Neptune to send Enhanced Monitoring metrics to Amazon CloudWatch Logs.",
                        "type": "string"
                    },
                    "MultiAZ": {
                        "description": "Specifies if the DB instance is a Multi-AZ deployment.",
                        "type": "boolean"
                    },
                    "OptionGroupMemberships": {
                        "description": "Provides the list of option group memberships for this DB instance.",
                        "items": {
                            "description": "Provides information on the option groups the DB instance is a member of.",
                            "properties": {
                                "OptionGroupName": {
                                    "description": "The name of the option group that the instance belongs to.",
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "The status of the DB instance's option group membership. Valid values are: <code>in-sync</code>, <code>pending-apply</code>, <code>pending-removal</code>, <code>pending-maintenance-apply</code>, <code>pending-maintenance-removal</code>, <code>applying</code>, <code>removing</code>, and <code>failed</code>. ",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "PendingModifiedValues": {
                        "description": "Specifies that changes to the DB instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements.",
                        "properties": {
                            "AllocatedStorage": {
                                "description": " Contains the new <code>AllocatedStorage</code> size for the DB instance that will be applied or is currently being applied. ",
                                "type": "integer"
                            },
                            "BackupRetentionPeriod": {
                                "description": "Specifies the pending number of days for which automated backups are retained.",
                                "type": "integer"
                            },
                            "CACertificateIdentifier": {
                                "description": "Specifies the identifier of the CA certificate for the DB instance.",
                                "type": "string"
                            },
                            "DBInstanceClass": {
                                "description": " Contains the new <code>DBInstanceClass</code> for the DB instance that will be applied or is currently being applied. ",
                                "type": "string"
                            },
                            "DBInstanceIdentifier": {
                                "description": " Contains the new <code>DBInstanceIdentifier</code> for the DB instance that will be applied or is currently being applied. ",
                                "type": "string"
                            },
                            "DBSubnetGroupName": {
                                "description": "The new DB subnet group for the DB instance. ",
                                "type": "string"
                            },
                            "EngineVersion": {
                                "description": "Indicates the database engine version.",
                                "type": "string"
                            },
                            "Iops": {
                                "description": "Specifies the new Provisioned IOPS value for the DB instance that will be applied or is currently being applied.",
                                "type": "integer"
                            },
                            "LicenseModel": {
                                "description": "<p>The license model for the DB instance.</p> <p>Valid values: <code>license-included</code> | <code>bring-your-own-license</code> | <code>general-public-license</code> </p>",
                                "type": "string"
                            },
                            "MasterUserPassword": {
                                "description": "Contains the pending or currently-in-progress change of the master credentials for the DB instance.",
                                "type": "string"
                            },
                            "MultiAZ": {
                                "description": "Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.",
                                "type": "boolean"
                            },
                            "PendingCloudwatchLogsExports": {
                                "description": "A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated.",
                                "properties": {
                                    "LogTypesToDisable": {
                                        "description": "Log types that are in the process of being enabled. After they are enabled, these log types are exported to CloudWatch Logs.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "LogTypesToEnable": {
                                        "description": "Log types that are in the process of being deactivated. After they are deactivated, these log types aren't exported to CloudWatch Logs.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "Port": {
                                "description": "Specifies the pending port for the DB instance.",
                                "type": "integer"
                            },
                            "StorageType": {
                                "description": "Specifies the storage type to be associated with the DB instance.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "PerformanceInsightsEnabled": {
                        "description": "True if Performance Insights is enabled for the DB instance, and otherwise false.",
                        "type": "boolean"
                    },
                    "PerformanceInsightsKMSKeyId": {
                        "description": "The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.",
                        "type": "string"
                    },
                    "PreferredBackupWindow": {
                        "description": " Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. ",
                        "type": "string"
                    },
                    "PreferredMaintenanceWindow": {
                        "description": "Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
                        "type": "string"
                    },
                    "PromotionTier": {
                        "description": "A value that specifies the order in which a Read Replica is promoted to the primary instance after a failure of the existing primary instance. ",
                        "type": "integer"
                    },
                    "PubliclyAccessible": {
                        "description": "This parameter is not supported.",
                        "type": "boolean"
                    },
                    "ReadReplicaDBClusterIdentifiers": {
                        "description": "Contains one or more identifiers of DB clusters that are Read Replicas of this DB instance.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "ReadReplicaDBInstanceIdentifiers": {
                        "description": "Contains one or more identifiers of the Read Replicas associated with this DB instance.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "ReadReplicaSourceDBInstanceIdentifier": {
                        "description": "Contains the identifier of the source DB instance if this DB instance is a Read Replica.",
                        "type": "string"
                    },
                    "SecondaryAvailabilityZone": {
                        "description": "If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support.",
                        "type": "string"
                    },
                    "StatusInfos": {
                        "description": "The status of a Read Replica. If the instance is not a Read Replica, this is blank.",
                        "items": {
                            "description": "Provides a list of status information for a DB instance.",
                            "properties": {
                                "Message": {
                                    "description": "Details of the error if there is an error for the instance. If the instance is not in an error state, this value is blank.",
                                    "type": "string"
                                },
                                "Normal": {
                                    "description": "Boolean value that is true if the instance is operating normally, or false if the instance is in an error state.",
                                    "type": "boolean"
                                },
                                "Status": {
                                    "description": "Status of the DB instance. For a StatusType of read replica, the values can be replicating, error, stopped, or terminated.",
                                    "type": "string"
                                },
                                "StatusType": {
                                    "description": "This value is currently \"read replication.\"",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "StorageEncrypted": {
                        "description": "Specifies whether the DB instance is encrypted.",
                        "type": "boolean"
                    },
                    "StorageType": {
                        "description": "Specifies the storage type associated with DB instance.",
                        "type": "string"
                    },
                    "TdeCredentialArn": {
                        "description": "The ARN from the key store with which the instance is associated for TDE encryption.",
                        "type": "string"
                    },
                    "Timezone": {
                        "description": "Not supported. ",
                        "type": "string"
                    },
                    "VpcSecurityGroups": {
                        "description": "Provides a list of VPC security group elements that the DB instance belongs to.",
                        "items": {
                            "description": "This data type is used as a response element for queries on VPC security group membership.",
                            "properties": {
                                "Status": {
                                    "description": "The status of the VPC security group.",
                                    "type": "string"
                                },
                                "VpcSecurityGroupId": {
                                    "description": "The name of the VPC security group.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DBInstanceAlreadyExistsFault": {
                "description": "User already has a DB instance with the given identifier.",
                "properties": {},
                "type": "object"
            },
            "DBInstanceList": {
                "items": {
                    "description": "<p>Contains the details of an Amazon Neptune DB instance. </p> <p>This data type is used as a response element in the <a>DescribeDBInstances</a> action. </p>",
                    "properties": {
                        "AllocatedStorage": {
                            "description": "Specifies the allocated storage size specified in gibibytes.",
                            "type": "integer"
                        },
                        "AutoMinorVersionUpgrade": {
                            "description": "Indicates that minor version patches are applied automatically.",
                            "type": "boolean"
                        },
                        "AvailabilityZone": {
                            "description": "Specifies the name of the Availability Zone the DB instance is located in.",
                            "type": "string"
                        },
                        "BackupRetentionPeriod": {
                            "description": "Specifies the number of days for which automatic DB snapshots are retained.",
                            "type": "integer"
                        },
                        "CACertificateIdentifier": {
                            "description": "The identifier of the CA certificate for this DB instance.",
                            "type": "string"
                        },
                        "CharacterSetName": {
                            "description": "If present, specifies the name of the character set that this instance is associated with.",
                            "type": "string"
                        },
                        "CopyTagsToSnapshot": {
                            "description": "Specifies whether tags are copied from the DB instance to snapshots of the DB instance.",
                            "type": "boolean"
                        },
                        "DBClusterIdentifier": {
                            "description": "If the DB instance is a member of a DB cluster, contains the name of the DB cluster that the DB instance is a member of.",
                            "type": "string"
                        },
                        "DBInstanceArn": {
                            "description": "The Amazon Resource Name (ARN) for the DB instance.",
                            "type": "string"
                        },
                        "DBInstanceClass": {
                            "description": "Contains the name of the compute and memory capacity class of the DB instance.",
                            "type": "string"
                        },
                        "DBInstanceIdentifier": {
                            "description": "Contains a user-supplied database identifier. This identifier is the unique key that identifies a DB instance.",
                            "type": "string"
                        },
                        "DBInstanceStatus": {
                            "description": "Specifies the current state of this database.",
                            "type": "string"
                        },
                        "DBName": {
                            "description": "The database name.",
                            "type": "string"
                        },
                        "DBParameterGroups": {
                            "description": "Provides the list of DB parameter groups applied to this DB instance.",
                            "items": {
                                "description": "<p>The status of the DB parameter group.</p> <p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>CreateDBInstance</a> </p> </li> <li> <p> <a>DeleteDBInstance</a> </p> </li> <li> <p> <a>ModifyDBInstance</a> </p> </li> <li> <p> <a>RebootDBInstance</a> </p> </li> </ul>",
                                "properties": {
                                    "DBParameterGroupName": {
                                        "description": "The name of the DP parameter group.",
                                        "type": "string"
                                    },
                                    "ParameterApplyStatus": {
                                        "description": "The status of parameter updates.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "DBSecurityGroups": {
                            "description": " Provides List of DB security group elements containing only <code>DBSecurityGroup.Name</code> and <code>DBSecurityGroup.Status</code> subelements. ",
                            "items": {
                                "description": "<p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>ModifyDBInstance</a> </p> </li> <li> <p> <a>RebootDBInstance</a> </p> </li> </ul>",
                                "properties": {
                                    "DBSecurityGroupName": {
                                        "description": "The name of the DB security group.",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The status of the DB security group.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "DBSubnetGroup": {
                            "description": "Specifies information on the subnet group associated with the DB instance, including the name, description, and subnets in the subnet group.",
                            "properties": {
                                "DBSubnetGroupArn": {
                                    "description": "The Amazon Resource Name (ARN) for the DB subnet group.",
                                    "type": "string"
                                },
                                "DBSubnetGroupDescription": {
                                    "description": "Provides the description of the DB subnet group.",
                                    "type": "string"
                                },
                                "DBSubnetGroupName": {
                                    "description": "The name of the DB subnet group.",
                                    "type": "string"
                                },
                                "SubnetGroupStatus": {
                                    "description": "Provides the status of the DB subnet group.",
                                    "type": "string"
                                },
                                "Subnets": {
                                    "description": " Contains a list of <a>Subnet</a> elements. ",
                                    "items": {
                                        "description": " This data type is used as a response element in the <a>DescribeDBSubnetGroups</a> action. ",
                                        "properties": {
                                            "SubnetAvailabilityZone": {
                                                "description": "<p>Contains Availability Zone information.</p> <p> This data type is used as an element in the following data type:</p> <ul> <li> <p> <a>OrderableDBInstanceOption</a> </p> </li> </ul>",
                                                "properties": {
                                                    "Name": {
                                                        "description": "The name of the availability zone.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "SubnetIdentifier": {
                                                "description": "Specifies the identifier of the subnet.",
                                                "type": "string"
                                            },
                                            "SubnetStatus": {
                                                "description": "Specifies the status of the subnet.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "VpcId": {
                                    "description": "Provides the VpcId of the DB subnet group.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "DbInstancePort": {
                            "description": "Specifies the port that the DB instance listens on. If the DB instance is part of a DB cluster, this can be a different port than the DB cluster port.",
                            "type": "integer"
                        },
                        "DbiResourceId": {
                            "description": "The AWS Region-unique, immutable identifier for the DB instance. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.",
                            "type": "string"
                        },
                        "DomainMemberships": {
                            "description": "Not supported",
                            "items": {
                                "description": "An Active Directory Domain membership record associated with the DB instance.",
                                "properties": {
                                    "Domain": {
                                        "description": "The identifier of the Active Directory Domain.",
                                        "type": "string"
                                    },
                                    "FQDN": {
                                        "description": "The fully qualified domain name of the Active Directory Domain.",
                                        "type": "string"
                                    },
                                    "IAMRoleName": {
                                        "description": "The name of the IAM role to be used when making API calls to the Directory Service.",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The status of the DB instance's Active Directory Domain membership, such as joined, pending-join, failed etc).",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "EnabledCloudwatchLogsExports": {
                            "description": "A list of log types that this DB instance is configured to export to CloudWatch Logs.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "Endpoint": {
                            "description": "Specifies the connection endpoint.",
                            "properties": {
                                "Address": {
                                    "description": "Specifies the DNS address of the DB instance.",
                                    "type": "string"
                                },
                                "HostedZoneId": {
                                    "description": "Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.",
                                    "type": "string"
                                },
                                "Port": {
                                    "description": "Specifies the port that the database engine is listening on.",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "Engine": {
                            "description": "Provides the name of the database engine to be used for this DB instance.",
                            "type": "string"
                        },
                        "EngineVersion": {
                            "description": "Indicates the database engine version.",
                            "type": "string"
                        },
                        "EnhancedMonitoringResourceArn": {
                            "description": "The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the Enhanced Monitoring metrics data for the DB instance.",
                            "type": "string"
                        },
                        "IAMDatabaseAuthenticationEnabled": {
                            "description": "True if AWS Identity and Access Management (IAM) authentication is enabled, and otherwise false.",
                            "type": "boolean"
                        },
                        "InstanceCreateTime": {
                            "description": "Provides the date and time the DB instance was created.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "Iops": {
                            "description": "Specifies the Provisioned IOPS (I/O operations per second) value.",
                            "type": "integer"
                        },
                        "KmsKeyId": {
                            "description": " If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB instance. ",
                            "type": "string"
                        },
                        "LatestRestorableTime": {
                            "description": "Specifies the latest time to which a database can be restored with point-in-time restore.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "LicenseModel": {
                            "description": "License model information for this DB instance.",
                            "type": "string"
                        },
                        "MasterUsername": {
                            "description": "Contains the master username for the DB instance.",
                            "type": "string"
                        },
                        "MonitoringInterval": {
                            "description": "The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance.",
                            "type": "integer"
                        },
                        "MonitoringRoleArn": {
                            "description": "The ARN for the IAM role that permits Neptune to send Enhanced Monitoring metrics to Amazon CloudWatch Logs.",
                            "type": "string"
                        },
                        "MultiAZ": {
                            "description": "Specifies if the DB instance is a Multi-AZ deployment.",
                            "type": "boolean"
                        },
                        "OptionGroupMemberships": {
                            "description": "Provides the list of option group memberships for this DB instance.",
                            "items": {
                                "description": "Provides information on the option groups the DB instance is a member of.",
                                "properties": {
                                    "OptionGroupName": {
                                        "description": "The name of the option group that the instance belongs to.",
                                        "type": "string"
                                    },
                                    "Status": {
                                        "description": "The status of the DB instance's option group membership. Valid values are: <code>in-sync</code>, <code>pending-apply</code>, <code>pending-removal</code>, <code>pending-maintenance-apply</code>, <code>pending-maintenance-removal</code>, <code>applying</code>, <code>removing</code>, and <code>failed</code>. ",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "PendingModifiedValues": {
                            "description": "Specifies that changes to the DB instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements.",
                            "properties": {
                                "AllocatedStorage": {
                                    "description": " Contains the new <code>AllocatedStorage</code> size for the DB instance that will be applied or is currently being applied. ",
                                    "type": "integer"
                                },
                                "BackupRetentionPeriod": {
                                    "description": "Specifies the pending number of days for which automated backups are retained.",
                                    "type": "integer"
                                },
                                "CACertificateIdentifier": {
                                    "description": "Specifies the identifier of the CA certificate for the DB instance.",
                                    "type": "string"
                                },
                                "DBInstanceClass": {
                                    "description": " Contains the new <code>DBInstanceClass</code> for the DB instance that will be applied or is currently being applied. ",
                                    "type": "string"
                                },
                                "DBInstanceIdentifier": {
                                    "description": " Contains the new <code>DBInstanceIdentifier</code> for the DB instance that will be applied or is currently being applied. ",
                                    "type": "string"
                                },
                                "DBSubnetGroupName": {
                                    "description": "The new DB subnet group for the DB instance. ",
                                    "type": "string"
                                },
                                "EngineVersion": {
                                    "description": "Indicates the database engine version.",
                                    "type": "string"
                                },
                                "Iops": {
                                    "description": "Specifies the new Provisioned IOPS value for the DB instance that will be applied or is currently being applied.",
                                    "type": "integer"
                                },
                                "LicenseModel": {
                                    "description": "<p>The license model for the DB instance.</p> <p>Valid values: <code>license-included</code> | <code>bring-your-own-license</code> | <code>general-public-license</code> </p>",
                                    "type": "string"
                                },
                                "MasterUserPassword": {
                                    "description": "Contains the pending or currently-in-progress change of the master credentials for the DB instance.",
                                    "type": "string"
                                },
                                "MultiAZ": {
                                    "description": "Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.",
                                    "type": "boolean"
                                },
                                "PendingCloudwatchLogsExports": {
                                    "description": "A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated.",
                                    "properties": {
                                        "LogTypesToDisable": {
                                            "description": "Log types that are in the process of being enabled. After they are enabled, these log types are exported to CloudWatch Logs.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "LogTypesToEnable": {
                                            "description": "Log types that are in the process of being deactivated. After they are deactivated, these log types aren't exported to CloudWatch Logs.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Port": {
                                    "description": "Specifies the pending port for the DB instance.",
                                    "type": "integer"
                                },
                                "StorageType": {
                                    "description": "Specifies the storage type to be associated with the DB instance.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "PerformanceInsightsEnabled": {
                            "description": "True if Performance Insights is enabled for the DB instance, and otherwise false.",
                            "type": "boolean"
                        },
                        "PerformanceInsightsKMSKeyId": {
                            "description": "The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.",
                            "type": "string"
                        },
                        "PreferredBackupWindow": {
                            "description": " Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. ",
                            "type": "string"
                        },
                        "PreferredMaintenanceWindow": {
                            "description": "Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
                            "type": "string"
                        },
                        "PromotionTier": {
                            "description": "A value that specifies the order in which a Read Replica is promoted to the primary instance after a failure of the existing primary instance. ",
                            "type": "integer"
                        },
                        "PubliclyAccessible": {
                            "description": "This parameter is not supported.",
                            "type": "boolean"
                        },
                        "ReadReplicaDBClusterIdentifiers": {
                            "description": "Contains one or more identifiers of DB clusters that are Read Replicas of this DB instance.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "ReadReplicaDBInstanceIdentifiers": {
                            "description": "Contains one or more identifiers of the Read Replicas associated with this DB instance.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "ReadReplicaSourceDBInstanceIdentifier": {
                            "description": "Contains the identifier of the source DB instance if this DB instance is a Read Replica.",
                            "type": "string"
                        },
                        "SecondaryAvailabilityZone": {
                            "description": "If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support.",
                            "type": "string"
                        },
                        "StatusInfos": {
                            "description": "The status of a Read Replica. If the instance is not a Read Replica, this is blank.",
                            "items": {
                                "description": "Provides a list of status information for a DB instance.",
                                "properties": {
                                    "Message": {
                                        "description": "Details of the error if there is an error for the instance. If the instance is not in an error state, this value is blank.",
                                        "type": "string"
                                    },
                                    "Normal": {
                                        "description": "Boolean value that is true if the instance is operating normally, or false if the instance is in an error state.",
                                        "type": "boolean"
                                    },
                                    "Status": {
                                        "description": "Status of the DB instance. For a StatusType of read replica, the values can be replicating, error, stopped, or terminated.",
                                        "type": "string"
                                    },
                                    "StatusType": {
                                        "description": "This value is currently \"read replication.\"",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "StorageEncrypted": {
                            "description": "Specifies whether the DB instance is encrypted.",
                            "type": "boolean"
                        },
                        "StorageType": {
                            "description": "Specifies the storage type associated with DB instance.",
                            "type": "string"
                        },
                        "TdeCredentialArn": {
                            "description": "The ARN from the key store with which the instance is associated for TDE encryption.",
                            "type": "string"
                        },
                        "Timezone": {
                            "description": "Not supported. ",
                            "type": "string"
                        },
                        "VpcSecurityGroups": {
                            "description": "Provides a list of VPC security group elements that the DB instance belongs to.",
                            "items": {
                                "description": "This data type is used as a response element for queries on VPC security group membership.",
                                "properties": {
                                    "Status": {
                                        "description": "The status of the VPC security group.",
                                        "type": "string"
                                    },
                                    "VpcSecurityGroupId": {
                                        "description": "The name of the VPC security group.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "DBInstanceMessage": {
                "description": " Contains the result of a successful invocation of the <a>DescribeDBInstances</a> action. ",
                "properties": {
                    "DBInstances": {
                        "description": " A list of <a>DBInstance</a> instances. ",
                        "items": {
                            "description": "<p>Contains the details of an Amazon Neptune DB instance. </p> <p>This data type is used as a response element in the <a>DescribeDBInstances</a> action. </p>",
                            "properties": {
                                "AllocatedStorage": {
                                    "description": "Specifies the allocated storage size specified in gibibytes.",
                                    "type": "integer"
                                },
                                "AutoMinorVersionUpgrade": {
                                    "description": "Indicates that minor version patches are applied automatically.",
                                    "type": "boolean"
                                },
                                "AvailabilityZone": {
                                    "description": "Specifies the name of the Availability Zone the DB instance is located in.",
                                    "type": "string"
                                },
                                "BackupRetentionPeriod": {
                                    "description": "Specifies the number of days for which automatic DB snapshots are retained.",
                                    "type": "integer"
                                },
                                "CACertificateIdentifier": {
                                    "description": "The identifier of the CA certificate for this DB instance.",
                                    "type": "string"
                                },
                                "CharacterSetName": {
                                    "description": "If present, specifies the name of the character set that this instance is associated with.",
                                    "type": "string"
                                },
                                "CopyTagsToSnapshot": {
                                    "description": "Specifies whether tags are copied from the DB instance to snapshots of the DB instance.",
                                    "type": "boolean"
                                },
                                "DBClusterIdentifier": {
                                    "description": "If the DB instance is a member of a DB cluster, contains the name of the DB cluster that the DB instance is a member of.",
                                    "type": "string"
                                },
                                "DBInstanceArn": {
                                    "description": "The Amazon Resource Name (ARN) for the DB instance.",
                                    "type": "string"
                                },
                                "DBInstanceClass": {
                                    "description": "Contains the name of the compute and memory capacity class of the DB instance.",
                                    "type": "string"
                                },
                                "DBInstanceIdentifier": {
                                    "description": "Contains a user-supplied database identifier. This identifier is the unique key that identifies a DB instance.",
                                    "type": "string"
                                },
                                "DBInstanceStatus": {
                                    "description": "Specifies the current state of this database.",
                                    "type": "string"
                                },
                                "DBName": {
                                    "description": "The database name.",
                                    "type": "string"
                                },
                                "DBParameterGroups": {
                                    "description": "Provides the list of DB parameter groups applied to this DB instance.",
                                    "items": {
                                        "description": "<p>The status of the DB parameter group.</p> <p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>CreateDBInstance</a> </p> </li> <li> <p> <a>DeleteDBInstance</a> </p> </li> <li> <p> <a>ModifyDBInstance</a> </p> </li> <li> <p> <a>RebootDBInstance</a> </p> </li> </ul>",
                                        "properties": {
                                            "DBParameterGroupName": {
                                                "description": "The name of the DP parameter group.",
                                                "type": "string"
                                            },
                                            "ParameterApplyStatus": {
                                                "description": "The status of parameter updates.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "DBSecurityGroups": {
                                    "description": " Provides List of DB security group elements containing only <code>DBSecurityGroup.Name</code> and <code>DBSecurityGroup.Status</code> subelements. ",
                                    "items": {
                                        "description": "<p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>ModifyDBInstance</a> </p> </li> <li> <p> <a>RebootDBInstance</a> </p> </li> </ul>",
                                        "properties": {
                                            "DBSecurityGroupName": {
                                                "description": "The name of the DB security group.",
                                                "type": "string"
                                            },
                                            "Status": {
                                                "description": "The status of the DB security group.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "DBSubnetGroup": {
                                    "description": "Specifies information on the subnet group associated with the DB instance, including the name, description, and subnets in the subnet group.",
                                    "properties": {
                                        "DBSubnetGroupArn": {
                                            "description": "The Amazon Resource Name (ARN) for the DB subnet group.",
                                            "type": "string"
                                        },
                                        "DBSubnetGroupDescription": {
                                            "description": "Provides the description of the DB subnet group.",
                                            "type": "string"
                                        },
                                        "DBSubnetGroupName": {
                                            "description": "The name of the DB subnet group.",
                                            "type": "string"
                                        },
                                        "SubnetGroupStatus": {
                                            "description": "Provides the status of the DB subnet group.",
                                            "type": "string"
                                        },
                                        "Subnets": {
                                            "description": " Contains a list of <a>Subnet</a> elements. ",
                                            "items": {
                                                "description": " This data type is used as a response element in the <a>DescribeDBSubnetGroups</a> action. ",
                                                "properties": {
                                                    "SubnetAvailabilityZone": {
                                                        "description": "<p>Contains Availability Zone information.</p> <p> This data type is used as an element in the following data type:</p> <ul> <li> <p> <a>OrderableDBInstanceOption</a> </p> </li> </ul>",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "The name of the availability zone.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "SubnetIdentifier": {
                                                        "description": "Specifies the identifier of the subnet.",
                                                        "type": "string"
                                                    },
                                                    "SubnetStatus": {
                                                        "description": "Specifies the status of the subnet.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "VpcId": {
                                            "description": "Provides the VpcId of the DB subnet group.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "DbInstancePort": {
                                    "description": "Specifies the port that the DB instance listens on. If the DB instance is part of a DB cluster, this can be a different port than the DB cluster port.",
                                    "type": "integer"
                                },
                                "DbiResourceId": {
                                    "description": "The AWS Region-unique, immutable identifier for the DB instance. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.",
                                    "type": "string"
                                },
                                "DomainMemberships": {
                                    "description": "Not supported",
                                    "items": {
                                        "description": "An Active Directory Domain membership record associated with the DB instance.",
                                        "properties": {
                                            "Domain": {
                                                "description": "The identifier of the Active Directory Domain.",
                                                "type": "string"
                                            },
                                            "FQDN": {
                                                "description": "The fully qualified domain name of the Active Directory Domain.",
                                                "type": "string"
                                            },
                                            "IAMRoleName": {
                                                "description": "The name of the IAM role to be used when making API calls to the Directory Service.",
                                                "type": "string"
                                            },
                                            "Status": {
                                                "description": "The status of the DB instance's Active Directory Domain membership, such as joined, pending-join, failed etc).",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "EnabledCloudwatchLogsExports": {
                                    "description": "A list of log types that this DB instance is configured to export to CloudWatch Logs.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "Endpoint": {
                                    "description": "Specifies the connection endpoint.",
                                    "properties": {
                                        "Address": {
                                            "description": "Specifies the DNS address of the DB instance.",
                                            "type": "string"
                                        },
                                        "HostedZoneId": {
                                            "description": "Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.",
                                            "type": "string"
                                        },
                                        "Port": {
                                            "description": "Specifies the port that the database engine is listening on.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Engine": {
                                    "description": "Provides the name of the database engine to be used for this DB instance.",
                                    "type": "string"
                                },
                                "EngineVersion": {
                                    "description": "Indicates the database engine version.",
                                    "type": "string"
                                },
                                "EnhancedMonitoringResourceArn": {
                                    "description": "The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the Enhanced Monitoring metrics data for the DB instance.",
                                    "type": "string"
                                },
                                "IAMDatabaseAuthenticationEnabled": {
                                    "description": "True if AWS Identity and Access Management (IAM) authentication is enabled, and otherwise false.",
                                    "type": "boolean"
                                },
                                "InstanceCreateTime": {
                                    "description": "Provides the date and time the DB instance was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Iops": {
                                    "description": "Specifies the Provisioned IOPS (I/O operations per second) value.",
                                    "type": "integer"
                                },
                                "KmsKeyId": {
                                    "description": " If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB instance. ",
                                    "type": "string"
                                },
                                "LatestRestorableTime": {
                                    "description": "Specifies the latest time to which a database can be restored with point-in-time restore.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "LicenseModel": {
                                    "description": "License model information for this DB instance.",
                                    "type": "string"
                                },
                                "MasterUsername": {
                                    "description": "Contains the master username for the DB instance.",
                                    "type": "string"
                                },
                                "MonitoringInterval": {
                                    "description": "The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance.",
                                    "type": "integer"
                                },
                                "MonitoringRoleArn": {
                                    "description": "The ARN for the IAM role that permits Neptune to send Enhanced Monitoring metrics to Amazon CloudWatch Logs.",
                                    "type": "string"
                                },
                                "MultiAZ": {
                                    "description": "Specifies if the DB instance is a Multi-AZ deployment.",
                                    "type": "boolean"
                                },
                                "OptionGroupMemberships": {
                                    "description": "Provides the list of option group memberships for this DB instance.",
                                    "items": {
                                        "description": "Provides information on the option groups the DB instance is a member of.",
                                        "properties": {
                                            "OptionGroupName": {
                                                "description": "The name of the option group that the instance belongs to.",
                                                "type": "string"
                                            },
                                            "Status": {
                                                "description": "The status of the DB instance's option group membership. Valid values are: <code>in-sync</code>, <code>pending-apply</code>, <code>pending-removal</code>, <code>pending-maintenance-apply</code>, <code>pending-maintenance-removal</code>, <code>applying</code>, <code>removing</code>, and <code>failed</code>. ",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "PendingModifiedValues": {
                                    "description": "Specifies that changes to the DB instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements.",
                                    "properties": {
                                        "AllocatedStorage": {
                                            "description": " Contains the new <code>AllocatedStorage</code> size for the DB instance that will be applied or is currently being applied. ",
                                            "type": "integer"
                                        },
                                        "BackupRetentionPeriod": {
                                            "description": "Specifies the pending number of days for which automated backups are retained.",
                                            "type": "integer"
                                        },
                                        "CACertificateIdentifier": {
                                            "description": "Specifies the identifier of the CA certificate for the DB instance.",
                                            "type": "string"
                                        },
                                        "DBInstanceClass": {
                                            "description": " Contains the new <code>DBInstanceClass</code> for the DB instance that will be applied or is currently being applied. ",
                                            "type": "string"
                                        },
                                        "DBInstanceIdentifier": {
                                            "description": " Contains the new <code>DBInstanceIdentifier</code> for the DB instance that will be applied or is currently being applied. ",
                                            "type": "string"
                                        },
                                        "DBSubnetGroupName": {
                                            "description": "The new DB subnet group for the DB instance. ",
                                            "type": "string"
                                        },
                                        "EngineVersion": {
                                            "description": "Indicates the database engine version.",
                                            "type": "string"
                                        },
                                        "Iops": {
                                            "description": "Specifies the new Provisioned IOPS value for the DB instance that will be applied or is currently being applied.",
                                            "type": "integer"
                                        },
                                        "LicenseModel": {
                                            "description": "<p>The license model for the DB instance.</p> <p>Valid values: <code>license-included</code> | <code>bring-your-own-license</code> | <code>general-public-license</code> </p>",
                                            "type": "string"
                                        },
                                        "MasterUserPassword": {
                                            "description": "Contains the pending or currently-in-progress change of the master credentials for the DB instance.",
                                            "type": "string"
                                        },
                                        "MultiAZ": {
                                            "description": "Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.",
                                            "type": "boolean"
                                        },
                                        "PendingCloudwatchLogsExports": {
                                            "description": "A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated.",
                                            "properties": {
                                                "LogTypesToDisable": {
                                                    "description": "Log types that are in the process of being enabled. After they are enabled, these log types are exported to CloudWatch Logs.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "LogTypesToEnable": {
                                                    "description": "Log types that are in the process of being deactivated. After they are deactivated, these log types aren't exported to CloudWatch Logs.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "Port": {
                                            "description": "Specifies the pending port for the DB instance.",
                                            "type": "integer"
                                        },
                                        "StorageType": {
                                            "description": "Specifies the storage type to be associated with the DB instance.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "PerformanceInsightsEnabled": {
                                    "description": "True if Performance Insights is enabled for the DB instance, and otherwise false.",
                                    "type": "boolean"
                                },
                                "PerformanceInsightsKMSKeyId": {
                                    "description": "The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.",
                                    "type": "string"
                                },
                                "PreferredBackupWindow": {
                                    "description": " Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. ",
                                    "type": "string"
                                },
                                "PreferredMaintenanceWindow": {
                                    "description": "Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
                                    "type": "string"
                                },
                                "PromotionTier": {
                                    "description": "A value that specifies the order in which a Read Replica is promoted to the primary instance after a failure of the existing primary instance. ",
                                    "type": "integer"
                                },
                                "PubliclyAccessible": {
                                    "description": "This parameter is not supported.",
                                    "type": "boolean"
                                },
                                "ReadReplicaDBClusterIdentifiers": {
                                    "description": "Contains one or more identifiers of DB clusters that are Read Replicas of this DB instance.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "ReadReplicaDBInstanceIdentifiers": {
                                    "description": "Contains one or more identifiers of the Read Replicas associated with this DB instance.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "ReadReplicaSourceDBInstanceIdentifier": {
                                    "description": "Contains the identifier of the source DB instance if this DB instance is a Read Replica.",
                                    "type": "string"
                                },
                                "SecondaryAvailabilityZone": {
                                    "description": "If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support.",
                                    "type": "string"
                                },
                                "StatusInfos": {
                                    "description": "The status of a Read Replica. If the instance is not a Read Replica, this is blank.",
                                    "items": {
                                        "description": "Provides a list of status information for a DB instance.",
                                        "properties": {
                                            "Message": {
                                                "description": "Details of the error if there is an error for the instance. If the instance is not in an error state, this value is blank.",
                                                "type": "string"
                                            },
                                            "Normal": {
                                                "description": "Boolean value that is true if the instance is operating normally, or false if the instance is in an error state.",
                                                "type": "boolean"
                                            },
                                            "Status": {
                                                "description": "Status of the DB instance. For a StatusType of read replica, the values can be replicating, error, stopped, or terminated.",
                                                "type": "string"
                                            },
                                            "StatusType": {
                                                "description": "This value is currently \"read replication.\"",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "StorageEncrypted": {
                                    "description": "Specifies whether the DB instance is encrypted.",
                                    "type": "boolean"
                                },
                                "StorageType": {
                                    "description": "Specifies the storage type associated with DB instance.",
                                    "type": "string"
                                },
                                "TdeCredentialArn": {
                                    "description": "The ARN from the key store with which the instance is associated for TDE encryption.",
                                    "type": "string"
                                },
                                "Timezone": {
                                    "description": "Not supported. ",
                                    "type": "string"
                                },
                                "VpcSecurityGroups": {
                                    "description": "Provides a list of VPC security group elements that the DB instance belongs to.",
                                    "items": {
                                        "description": "This data type is used as a response element for queries on VPC security group membership.",
                                        "properties": {
                                            "Status": {
                                                "description": "The status of the VPC security group.",
                                                "type": "string"
                                            },
                                            "VpcSecurityGroupId": {
                                                "description": "The name of the VPC security group.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> . ",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DBInstanceNotFoundFault": {
                "description": " <i>DBInstanceIdentifier</i> does not refer to an existing DB instance. ",
                "properties": {},
                "type": "object"
            },
            "DBInstanceStatusInfo": {
                "description": "Provides a list of status information for a DB instance.",
                "properties": {
                    "Message": {
                        "description": "Details of the error if there is an error for the instance. If the instance is not in an error state, this value is blank.",
                        "type": "string"
                    },
                    "Normal": {
                        "description": "Boolean value that is true if the instance is operating normally, or false if the instance is in an error state.",
                        "type": "boolean"
                    },
                    "Status": {
                        "description": "Status of the DB instance. For a StatusType of read replica, the values can be replicating, error, stopped, or terminated.",
                        "type": "string"
                    },
                    "StatusType": {
                        "description": "This value is currently \"read replication.\"",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DBInstanceStatusInfoList": {
                "items": {
                    "description": "Provides a list of status information for a DB instance.",
                    "properties": {
                        "Message": {
                            "description": "Details of the error if there is an error for the instance. If the instance is not in an error state, this value is blank.",
                            "type": "string"
                        },
                        "Normal": {
                            "description": "Boolean value that is true if the instance is operating normally, or false if the instance is in an error state.",
                            "type": "boolean"
                        },
                        "Status": {
                            "description": "Status of the DB instance. For a StatusType of read replica, the values can be replicating, error, stopped, or terminated.",
                            "type": "string"
                        },
                        "StatusType": {
                            "description": "This value is currently \"read replication.\"",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "DBParameterGroup": {
                "description": "<p>Contains the details of an Amazon Neptune DB parameter group. </p> <p>This data type is used as a response element in the <a>DescribeDBParameterGroups</a> action. </p>",
                "properties": {
                    "DBParameterGroupArn": {
                        "description": "The Amazon Resource Name (ARN) for the DB parameter group.",
                        "type": "string"
                    },
                    "DBParameterGroupFamily": {
                        "description": "Provides the name of the DB parameter group family that this DB parameter group is compatible with.",
                        "type": "string"
                    },
                    "DBParameterGroupName": {
                        "description": "Provides the name of the DB parameter group.",
                        "type": "string"
                    },
                    "Description": {
                        "description": "Provides the customer-specified description for this DB parameter group.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DBParameterGroupAlreadyExistsFault": {
                "description": "A DB parameter group with the same name exists.",
                "properties": {},
                "type": "object"
            },
            "DBParameterGroupDetails": {
                "description": " Contains the result of a successful invocation of the <a>DescribeDBParameters</a> action. ",
                "properties": {
                    "Marker": {
                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    },
                    "Parameters": {
                        "description": " A list of <a>Parameter</a> values. ",
                        "items": {
                            "description": "<p> This data type is used as a request parameter in the <a>ModifyDBParameterGroup</a> and <a>ResetDBParameterGroup</a> actions. </p> <p>This data type is used as a response element in the <a>DescribeEngineDefaultParameters</a> and <a>DescribeDBParameters</a> actions.</p>",
                            "properties": {
                                "AllowedValues": {
                                    "description": "Specifies the valid range of values for the parameter.",
                                    "type": "string"
                                },
                                "ApplyMethod": {
                                    "description": "Indicates when to apply parameter updates.",
                                    "enum": [
                                        "immediate",
                                        "pending-reboot"
                                    ],
                                    "type": "string"
                                },
                                "ApplyType": {
                                    "description": "Specifies the engine specific parameters type.",
                                    "type": "string"
                                },
                                "DataType": {
                                    "description": "Specifies the valid data type for the parameter.",
                                    "type": "string"
                                },
                                "Description": {
                                    "description": "Provides a description of the parameter.",
                                    "type": "string"
                                },
                                "IsModifiable": {
                                    "description": " Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed. ",
                                    "type": "boolean"
                                },
                                "MinimumEngineVersion": {
                                    "description": "The earliest engine version to which the parameter can apply.",
                                    "type": "string"
                                },
                                "ParameterName": {
                                    "description": "Specifies the name of the parameter.",
                                    "type": "string"
                                },
                                "ParameterValue": {
                                    "description": "Specifies the value of the parameter.",
                                    "type": "string"
                                },
                                "Source": {
                                    "description": "Indicates the source of the parameter value.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DBParameterGroupList": {
                "items": {
                    "description": "<p>Contains the details of an Amazon Neptune DB parameter group. </p> <p>This data type is used as a response element in the <a>DescribeDBParameterGroups</a> action. </p>",
                    "properties": {
                        "DBParameterGroupArn": {
                            "description": "The Amazon Resource Name (ARN) for the DB parameter group.",
                            "type": "string"
                        },
                        "DBParameterGroupFamily": {
                            "description": "Provides the name of the DB parameter group family that this DB parameter group is compatible with.",
                            "type": "string"
                        },
                        "DBParameterGroupName": {
                            "description": "Provides the name of the DB parameter group.",
                            "type": "string"
                        },
                        "Description": {
                            "description": "Provides the customer-specified description for this DB parameter group.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "DBParameterGroupNameMessage": {
                "description": " Contains the result of a successful invocation of the <a>ModifyDBParameterGroup</a> or <a>ResetDBParameterGroup</a> action. ",
                "properties": {
                    "DBParameterGroupName": {
                        "description": "Provides the name of the DB parameter group.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DBParameterGroupNotFoundFault": {
                "description": " <i>DBParameterGroupName</i> does not refer to an existing DB parameter group. ",
                "properties": {},
                "type": "object"
            },
            "DBParameterGroupQuotaExceededFault": {
                "description": "Request would result in user exceeding the allowed number of DB parameter groups.",
                "properties": {},
                "type": "object"
            },
            "DBParameterGroupStatus": {
                "description": "<p>The status of the DB parameter group.</p> <p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>CreateDBInstance</a> </p> </li> <li> <p> <a>DeleteDBInstance</a> </p> </li> <li> <p> <a>ModifyDBInstance</a> </p> </li> <li> <p> <a>RebootDBInstance</a> </p> </li> </ul>",
                "properties": {
                    "DBParameterGroupName": {
                        "description": "The name of the DP parameter group.",
                        "type": "string"
                    },
                    "ParameterApplyStatus": {
                        "description": "The status of parameter updates.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DBParameterGroupStatusList": {
                "items": {
                    "description": "<p>The status of the DB parameter group.</p> <p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>CreateDBInstance</a> </p> </li> <li> <p> <a>DeleteDBInstance</a> </p> </li> <li> <p> <a>ModifyDBInstance</a> </p> </li> <li> <p> <a>RebootDBInstance</a> </p> </li> </ul>",
                    "properties": {
                        "DBParameterGroupName": {
                            "description": "The name of the DP parameter group.",
                            "type": "string"
                        },
                        "ParameterApplyStatus": {
                            "description": "The status of parameter updates.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "DBParameterGroupsMessage": {
                "description": " Contains the result of a successful invocation of the <a>DescribeDBParameterGroups</a> action. ",
                "properties": {
                    "DBParameterGroups": {
                        "description": " A list of <a>DBParameterGroup</a> instances. ",
                        "items": {
                            "description": "<p>Contains the details of an Amazon Neptune DB parameter group. </p> <p>This data type is used as a response element in the <a>DescribeDBParameterGroups</a> action. </p>",
                            "properties": {
                                "DBParameterGroupArn": {
                                    "description": "The Amazon Resource Name (ARN) for the DB parameter group.",
                                    "type": "string"
                                },
                                "DBParameterGroupFamily": {
                                    "description": "Provides the name of the DB parameter group family that this DB parameter group is compatible with.",
                                    "type": "string"
                                },
                                "DBParameterGroupName": {
                                    "description": "Provides the name of the DB parameter group.",
                                    "type": "string"
                                },
                                "Description": {
                                    "description": "Provides the customer-specified description for this DB parameter group.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DBSecurityGroupMembership": {
                "description": "<p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>ModifyDBInstance</a> </p> </li> <li> <p> <a>RebootDBInstance</a> </p> </li> </ul>",
                "properties": {
                    "DBSecurityGroupName": {
                        "description": "The name of the DB security group.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of the DB security group.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DBSecurityGroupMembershipList": {
                "items": {
                    "description": "<p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>ModifyDBInstance</a> </p> </li> <li> <p> <a>RebootDBInstance</a> </p> </li> </ul>",
                    "properties": {
                        "DBSecurityGroupName": {
                            "description": "The name of the DB security group.",
                            "type": "string"
                        },
                        "Status": {
                            "description": "The status of the DB security group.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "DBSecurityGroupNameList": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "DBSecurityGroupNotFoundFault": {
                "description": " <i>DBSecurityGroupName</i> does not refer to an existing DB security group. ",
                "properties": {},
                "type": "object"
            },
            "DBSnapshotAlreadyExistsFault": {
                "description": " <i>DBSnapshotIdentifier</i> is already used by an existing snapshot. ",
                "properties": {},
                "type": "object"
            },
            "DBSnapshotNotFoundFault": {
                "description": " <i>DBSnapshotIdentifier</i> does not refer to an existing DB snapshot. ",
                "properties": {},
                "type": "object"
            },
            "DBSubnetGroup": {
                "description": "<p>Contains the details of an Amazon Neptune DB subnet group. </p> <p>This data type is used as a response element in the <a>DescribeDBSubnetGroups</a> action. </p>",
                "properties": {
                    "DBSubnetGroupArn": {
                        "description": "The Amazon Resource Name (ARN) for the DB subnet group.",
                        "type": "string"
                    },
                    "DBSubnetGroupDescription": {
                        "description": "Provides the description of the DB subnet group.",
                        "type": "string"
                    },
                    "DBSubnetGroupName": {
                        "description": "The name of the DB subnet group.",
                        "type": "string"
                    },
                    "SubnetGroupStatus": {
                        "description": "Provides the status of the DB subnet group.",
                        "type": "string"
                    },
                    "Subnets": {
                        "description": " Contains a list of <a>Subnet</a> elements. ",
                        "items": {
                            "description": " This data type is used as a response element in the <a>DescribeDBSubnetGroups</a> action. ",
                            "properties": {
                                "SubnetAvailabilityZone": {
                                    "description": "<p>Contains Availability Zone information.</p> <p> This data type is used as an element in the following data type:</p> <ul> <li> <p> <a>OrderableDBInstanceOption</a> </p> </li> </ul>",
                                    "properties": {
                                        "Name": {
                                            "description": "The name of the availability zone.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "SubnetIdentifier": {
                                    "description": "Specifies the identifier of the subnet.",
                                    "type": "string"
                                },
                                "SubnetStatus": {
                                    "description": "Specifies the status of the subnet.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "VpcId": {
                        "description": "Provides the VpcId of the DB subnet group.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DBSubnetGroupAlreadyExistsFault": {
                "description": " <i>DBSubnetGroupName</i> is already used by an existing DB subnet group. ",
                "properties": {},
                "type": "object"
            },
            "DBSubnetGroupDoesNotCoverEnoughAZs": {
                "description": "Subnets in the DB subnet group should cover at least two Availability Zones unless there is only one Availability Zone.",
                "properties": {},
                "type": "object"
            },
            "DBSubnetGroupMessage": {
                "description": " Contains the result of a successful invocation of the <a>DescribeDBSubnetGroups</a> action. ",
                "properties": {
                    "DBSubnetGroups": {
                        "description": " A list of <a>DBSubnetGroup</a> instances. ",
                        "items": {
                            "description": "<p>Contains the details of an Amazon Neptune DB subnet group. </p> <p>This data type is used as a response element in the <a>DescribeDBSubnetGroups</a> action. </p>",
                            "properties": {
                                "DBSubnetGroupArn": {
                                    "description": "The Amazon Resource Name (ARN) for the DB subnet group.",
                                    "type": "string"
                                },
                                "DBSubnetGroupDescription": {
                                    "description": "Provides the description of the DB subnet group.",
                                    "type": "string"
                                },
                                "DBSubnetGroupName": {
                                    "description": "The name of the DB subnet group.",
                                    "type": "string"
                                },
                                "SubnetGroupStatus": {
                                    "description": "Provides the status of the DB subnet group.",
                                    "type": "string"
                                },
                                "Subnets": {
                                    "description": " Contains a list of <a>Subnet</a> elements. ",
                                    "items": {
                                        "description": " This data type is used as a response element in the <a>DescribeDBSubnetGroups</a> action. ",
                                        "properties": {
                                            "SubnetAvailabilityZone": {
                                                "description": "<p>Contains Availability Zone information.</p> <p> This data type is used as an element in the following data type:</p> <ul> <li> <p> <a>OrderableDBInstanceOption</a> </p> </li> </ul>",
                                                "properties": {
                                                    "Name": {
                                                        "description": "The name of the availability zone.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "SubnetIdentifier": {
                                                "description": "Specifies the identifier of the subnet.",
                                                "type": "string"
                                            },
                                            "SubnetStatus": {
                                                "description": "Specifies the status of the subnet.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "VpcId": {
                                    "description": "Provides the VpcId of the DB subnet group.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DBSubnetGroupNotFoundFault": {
                "description": " <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group. ",
                "properties": {},
                "type": "object"
            },
            "DBSubnetGroupQuotaExceededFault": {
                "description": "Request would result in user exceeding the allowed number of DB subnet groups.",
                "properties": {},
                "type": "object"
            },
            "DBSubnetGroups": {
                "items": {
                    "description": "<p>Contains the details of an Amazon Neptune DB subnet group. </p> <p>This data type is used as a response element in the <a>DescribeDBSubnetGroups</a> action. </p>",
                    "properties": {
                        "DBSubnetGroupArn": {
                            "description": "The Amazon Resource Name (ARN) for the DB subnet group.",
                            "type": "string"
                        },
                        "DBSubnetGroupDescription": {
                            "description": "Provides the description of the DB subnet group.",
                            "type": "string"
                        },
                        "DBSubnetGroupName": {
                            "description": "The name of the DB subnet group.",
                            "type": "string"
                        },
                        "SubnetGroupStatus": {
                            "description": "Provides the status of the DB subnet group.",
                            "type": "string"
                        },
                        "Subnets": {
                            "description": " Contains a list of <a>Subnet</a> elements. ",
                            "items": {
                                "description": " This data type is used as a response element in the <a>DescribeDBSubnetGroups</a> action. ",
                                "properties": {
                                    "SubnetAvailabilityZone": {
                                        "description": "<p>Contains Availability Zone information.</p> <p> This data type is used as an element in the following data type:</p> <ul> <li> <p> <a>OrderableDBInstanceOption</a> </p> </li> </ul>",
                                        "properties": {
                                            "Name": {
                                                "description": "The name of the availability zone.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "SubnetIdentifier": {
                                        "description": "Specifies the identifier of the subnet.",
                                        "type": "string"
                                    },
                                    "SubnetStatus": {
                                        "description": "Specifies the status of the subnet.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "VpcId": {
                            "description": "Provides the VpcId of the DB subnet group.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "DBSubnetQuotaExceededFault": {
                "description": "Request would result in user exceeding the allowed number of subnets in a DB subnet groups.",
                "properties": {},
                "type": "object"
            },
            "DBUpgradeDependencyFailureFault": {
                "description": "The DB upgrade failed because a resource the DB depends on could not be modified.",
                "properties": {},
                "type": "object"
            },
            "DeleteDBClusterMessage": {
                "description": "<p/>",
                "properties": {
                    "DBClusterIdentifier": {
                        "description": "<p>The DB cluster identifier for the DB cluster to be deleted. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match an existing DBClusterIdentifier.</p> </li> </ul>",
                        "type": "string"
                    },
                    "FinalDBSnapshotIdentifier": {
                        "description": "<p> The DB cluster snapshot identifier of the new DB cluster snapshot created when <code>SkipFinalSnapshot</code> is set to <code>false</code>. </p> <note> <p> Specifying this parameter and also setting the <code>SkipFinalShapshot</code> parameter to true results in an error. </p> </note> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>",
                        "type": "string"
                    },
                    "SkipFinalSnapshot": {
                        "description": "<p> Determines whether a final DB cluster snapshot is created before the DB cluster is deleted. If <code>true</code> is specified, no DB cluster snapshot is created. If <code>false</code> is specified, a DB cluster snapshot is created before the DB cluster is deleted. </p> <note> <p>You must specify a <code>FinalDBSnapshotIdentifier</code> parameter if <code>SkipFinalSnapshot</code> is <code>false</code>.</p> </note> <p>Default: <code>false</code> </p>",
                        "type": "boolean"
                    }
                },
                "required": [
                    "DBClusterIdentifier"
                ],
                "type": "object"
            },
            "DeleteDBClusterParameterGroupMessage": {
                "description": "<p/>",
                "properties": {
                    "DBClusterParameterGroupName": {
                        "description": "<p>The name of the DB cluster parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must be the name of an existing DB cluster parameter group.</p> </li> <li> <p>You can't delete a default DB cluster parameter group.</p> </li> <li> <p>Cannot be associated with any DB clusters.</p> </li> </ul>",
                        "type": "string"
                    }
                },
                "required": [
                    "DBClusterParameterGroupName"
                ],
                "type": "object"
            },
            "DeleteDBClusterResult": {
                "properties": {
                    "DBCluster": {
                        "description": "<p>Contains the details of an Amazon Neptune DB cluster. </p> <p>This data type is used as a response element in the <a>DescribeDBClusters</a> action. </p>",
                        "properties": {
                            "AllocatedStorage": {
                                "description": " <code>AllocatedStorage</code> always returns 1, because Neptune DB cluster storage size is not fixed, but instead automatically adjusts as needed.",
                                "type": "integer"
                            },
                            "AssociatedRoles": {
                                "description": "Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.",
                                "items": {
                                    "description": "Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.",
                                    "properties": {
                                        "RoleArn": {
                                            "description": "The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "<p>Describes the state of association between the IAM role and the DB cluster. The Status property returns one of the following values:</p> <ul> <li> <p> <code>ACTIVE</code> - the IAM role ARN is associated with the DB cluster and can be used to access other AWS services on your behalf.</p> </li> <li> <p> <code>PENDING</code> - the IAM role ARN is being associated with the DB cluster.</p> </li> <li> <p> <code>INVALID</code> - the IAM role ARN is associated with the DB cluster, but the DB cluster is unable to assume the IAM role in order to access other AWS services on your behalf.</p> </li> </ul>",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "AvailabilityZones": {
                                "description": "Provides the list of EC2 Availability Zones that instances in the DB cluster can be created in.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "BackupRetentionPeriod": {
                                "description": "Specifies the number of days for which automatic DB snapshots are retained.",
                                "type": "integer"
                            },
                            "CharacterSetName": {
                                "description": "If present, specifies the name of the character set that this cluster is associated with.",
                                "type": "string"
                            },
                            "CloneGroupId": {
                                "description": "Identifies the clone group to which the DB cluster is associated.",
                                "type": "string"
                            },
                            "ClusterCreateTime": {
                                "description": "Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).",
                                "format": "date-time",
                                "type": "string"
                            },
                            "DBClusterArn": {
                                "description": "The Amazon Resource Name (ARN) for the DB cluster.",
                                "type": "string"
                            },
                            "DBClusterIdentifier": {
                                "description": "Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.",
                                "type": "string"
                            },
                            "DBClusterMembers": {
                                "description": "Provides the list of instances that make up the DB cluster.",
                                "items": {
                                    "description": "Contains information about an instance that is part of a DB cluster.",
                                    "properties": {
                                        "DBClusterParameterGroupStatus": {
                                            "description": "Specifies the status of the DB cluster parameter group for this member of the DB cluster.",
                                            "type": "string"
                                        },
                                        "DBInstanceIdentifier": {
                                            "description": "Specifies the instance identifier for this member of the DB cluster.",
                                            "type": "string"
                                        },
                                        "IsClusterWriter": {
                                            "description": "Value that is <code>true</code> if the cluster member is the primary instance for the DB cluster and <code>false</code> otherwise.",
                                            "type": "boolean"
                                        },
                                        "PromotionTier": {
                                            "description": "A value that specifies the order in which a Read Replica is promoted to the primary instance after a failure of the existing primary instance. ",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "DBClusterOptionGroupMemberships": {
                                "description": "Provides the list of option group memberships for this DB cluster.",
                                "items": {
                                    "description": "Contains status information for a DB cluster option group.",
                                    "properties": {
                                        "DBClusterOptionGroupName": {
                                            "description": "Specifies the name of the DB cluster option group.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "Specifies the status of the DB cluster option group.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "DBClusterParameterGroup": {
                                "description": "Specifies the name of the DB cluster parameter group for the DB cluster.",
                                "type": "string"
                            },
                            "DBSubnetGroup": {
                                "description": "Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group.",
                                "type": "string"
                            },
                            "DatabaseName": {
                                "description": "Contains the name of the initial database of this DB cluster that was provided at create time, if one was specified when the DB cluster was created. This same name is returned for the life of the DB cluster.",
                                "type": "string"
                            },
                            "DbClusterResourceId": {
                                "description": "The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.",
                                "type": "string"
                            },
                            "EarliestRestorableTime": {
                                "description": "Specifies the earliest time to which a database can be restored with point-in-time restore.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "Endpoint": {
                                "description": "Specifies the connection endpoint for the primary instance of the DB cluster.",
                                "type": "string"
                            },
                            "Engine": {
                                "description": "Provides the name of the database engine to be used for this DB cluster.",
                                "type": "string"
                            },
                            "EngineVersion": {
                                "description": "Indicates the database engine version.",
                                "type": "string"
                            },
                            "HostedZoneId": {
                                "description": "Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.",
                                "type": "string"
                            },
                            "IAMDatabaseAuthenticationEnabled": {
                                "description": "True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.",
                                "type": "boolean"
                            },
                            "KmsKeyId": {
                                "description": "If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB cluster.",
                                "type": "string"
                            },
                            "LatestRestorableTime": {
                                "description": "Specifies the latest time to which a database can be restored with point-in-time restore.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "MasterUsername": {
                                "description": "Contains the master username for the DB cluster.",
                                "type": "string"
                            },
                            "MultiAZ": {
                                "description": "Specifies whether the DB cluster has instances in multiple Availability Zones.",
                                "type": "boolean"
                            },
                            "PercentProgress": {
                                "description": "Specifies the progress of the operation as a percentage.",
                                "type": "string"
                            },
                            "Port": {
                                "description": "Specifies the port that the database engine is listening on.",
                                "type": "integer"
                            },
                            "PreferredBackupWindow": {
                                "description": "Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. ",
                                "type": "string"
                            },
                            "PreferredMaintenanceWindow": {
                                "description": "Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
                                "type": "string"
                            },
                            "ReadReplicaIdentifiers": {
                                "description": "Contains one or more identifiers of the Read Replicas associated with this DB cluster.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "ReaderEndpoint": {
                                "description": "<p>The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances connections across the Read Replicas that are available in a DB cluster. As clients request new connections to the reader endpoint, Neptune distributes the connection requests among the Read Replicas in the DB cluster. This functionality can help balance your read workload across multiple Read Replicas in your DB cluster. </p> <p>If a failover occurs, and the Read Replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Read Replicas in the cluster, you can then reconnect to the reader endpoint.</p>",
                                "type": "string"
                            },
                            "ReplicationSourceIdentifier": {
                                "description": "Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.",
                                "type": "string"
                            },
                            "Status": {
                                "description": "Specifies the current state of this DB cluster.",
                                "type": "string"
                            },
                            "StorageEncrypted": {
                                "description": "Specifies whether the DB cluster is encrypted.",
                                "type": "boolean"
                            },
                            "VpcSecurityGroups": {
                                "description": "Provides a list of VPC security groups that the DB cluster belongs to.",
                                "items": {
                                    "description": "This data type is used as a response element for queries on VPC security group membership.",
                                    "properties": {
                                        "Status": {
                                            "description": "The status of the VPC security group.",
                                            "type": "string"
                                        },
                                        "VpcSecurityGroupId": {
                                            "description": "The name of the VPC security group.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DeleteDBClusterSnapshotMessage": {
                "description": "<p/>",
                "properties": {
                    "DBClusterSnapshotIdentifier": {
                        "description": "<p>The identifier of the DB cluster snapshot to delete.</p> <p>Constraints: Must be the name of an existing DB cluster snapshot in the <code>available</code> state.</p>",
                        "type": "string"
                    }
                },
                "required": [
                    "DBClusterSnapshotIdentifier"
                ],
                "type": "object"
            },
            "DeleteDBClusterSnapshotResult": {
                "properties": {
                    "DBClusterSnapshot": {
                        "description": "<p>Contains the details for an Amazon Neptune DB cluster snapshot </p> <p>This data type is used as a response element in the <a>DescribeDBClusterSnapshots</a> action. </p>",
                        "properties": {
                            "AllocatedStorage": {
                                "description": "Specifies the allocated storage size in gibibytes (GiB).",
                                "type": "integer"
                            },
                            "AvailabilityZones": {
                                "description": "Provides the list of EC2 Availability Zones that instances in the DB cluster snapshot can be restored in.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "ClusterCreateTime": {
                                "description": "Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).",
                                "format": "date-time",
                                "type": "string"
                            },
                            "DBClusterIdentifier": {
                                "description": "Specifies the DB cluster identifier of the DB cluster that this DB cluster snapshot was created from.",
                                "type": "string"
                            },
                            "DBClusterSnapshotArn": {
                                "description": "The Amazon Resource Name (ARN) for the DB cluster snapshot.",
                                "type": "string"
                            },
                            "DBClusterSnapshotIdentifier": {
                                "description": "Specifies the identifier for the DB cluster snapshot.",
                                "type": "string"
                            },
                            "Engine": {
                                "description": "Specifies the name of the database engine.",
                                "type": "string"
                            },
                            "EngineVersion": {
                                "description": "Provides the version of the database engine for this DB cluster snapshot.",
                                "type": "string"
                            },
                            "IAMDatabaseAuthenticationEnabled": {
                                "description": "True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.",
                                "type": "boolean"
                            },
                            "KmsKeyId": {
                                "description": "If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB cluster snapshot.",
                                "type": "string"
                            },
                            "LicenseModel": {
                                "description": "Provides the license model information for this DB cluster snapshot.",
                                "type": "string"
                            },
                            "MasterUsername": {
                                "description": "Provides the master username for the DB cluster snapshot.",
                                "type": "string"
                            },
                            "PercentProgress": {
                                "description": "Specifies the percentage of the estimated data that has been transferred.",
                                "type": "integer"
                            },
                            "Port": {
                                "description": "Specifies the port that the DB cluster was listening on at the time of the snapshot.",
                                "type": "integer"
                            },
                            "SnapshotCreateTime": {
                                "description": "Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).",
                                "format": "date-time",
                                "type": "string"
                            },
                            "SnapshotType": {
                                "description": "Provides the type of the DB cluster snapshot.",
                                "type": "string"
                            },
                            "SourceDBClusterSnapshotArn": {
                                "description": "If the DB cluster snapshot was copied from a source DB cluster snapshot, the Amazon Resource Name (ARN) for the source DB cluster snapshot, otherwise, a null value.",
                                "type": "string"
                            },
                            "Status": {
                                "description": "Specifies the status of this DB cluster snapshot.",
                                "type": "string"
                            },
                            "StorageEncrypted": {
                                "description": "Specifies whether the DB cluster snapshot is encrypted.",
                                "type": "boolean"
                            },
                            "VpcId": {
                                "description": "Provides the VPC ID associated with the DB cluster snapshot.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DeleteDBInstanceMessage": {
                "description": "<p/>",
                "properties": {
                    "DBInstanceIdentifier": {
                        "description": "<p>The DB instance identifier for the DB instance to be deleted. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match the name of an existing DB instance.</p> </li> </ul>",
                        "type": "string"
                    },
                    "FinalDBSnapshotIdentifier": {
                        "description": "<p> The DBSnapshotIdentifier of the new DBSnapshot created when SkipFinalSnapshot is set to <code>false</code>. </p> <note> <p>Specifying this parameter and also setting the SkipFinalShapshot parameter to true results in an error.</p> </note> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters or numbers.</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> <li> <p>Cannot be specified when deleting a Read Replica.</p> </li> </ul>",
                        "type": "string"
                    },
                    "SkipFinalSnapshot": {
                        "description": "<p> Determines whether a final DB snapshot is created before the DB instance is deleted. If <code>true</code> is specified, no DBSnapshot is created. If <code>false</code> is specified, a DB snapshot is created before the DB instance is deleted. </p> <p>Note that when a DB instance is in a failure state and has a status of 'failed', 'incompatible-restore', or 'incompatible-network', it can only be deleted when the SkipFinalSnapshot parameter is set to \"true\".</p> <p>Specify <code>true</code> when deleting a Read Replica.</p> <note> <p>The FinalDBSnapshotIdentifier parameter must be specified if SkipFinalSnapshot is <code>false</code>.</p> </note> <p>Default: <code>false</code> </p>",
                        "type": "boolean"
                    }
                },
                "required": [
                    "DBInstanceIdentifier"
                ],
                "type": "object"
            },
            "DeleteDBInstanceResult": {
                "properties": {
                    "DBInstance": {
                        "description": "<p>Contains the details of an Amazon Neptune DB instance. </p> <p>This data type is used as a response element in the <a>DescribeDBInstances</a> action. </p>",
                        "properties": {
                            "AllocatedStorage": {
                                "description": "Specifies the allocated storage size specified in gibibytes.",
                                "type": "integer"
                            },
                            "AutoMinorVersionUpgrade": {
                                "description": "Indicates that minor version patches are applied automatically.",
                                "type": "boolean"
                            },
                            "AvailabilityZone": {
                                "description": "Specifies the name of the Availability Zone the DB instance is located in.",
                                "type": "string"
                            },
                            "BackupRetentionPeriod": {
                                "description": "Specifies the number of days for which automatic DB snapshots are retained.",
                                "type": "integer"
                            },
                            "CACertificateIdentifier": {
                                "description": "The identifier of the CA certificate for this DB instance.",
                                "type": "string"
                            },
                            "CharacterSetName": {
                                "description": "If present, specifies the name of the character set that this instance is associated with.",
                                "type": "string"
                            },
                            "CopyTagsToSnapshot": {
                                "description": "Specifies whether tags are copied from the DB instance to snapshots of the DB instance.",
                                "type": "boolean"
                            },
                            "DBClusterIdentifier": {
                                "description": "If the DB instance is a member of a DB cluster, contains the name of the DB cluster that the DB instance is a member of.",
                                "type": "string"
                            },
                            "DBInstanceArn": {
                                "description": "The Amazon Resource Name (ARN) for the DB instance.",
                                "type": "string"
                            },
                            "DBInstanceClass": {
                                "description": "Contains the name of the compute and memory capacity class of the DB instance.",
                                "type": "string"
                            },
                            "DBInstanceIdentifier": {
                                "description": "Contains a user-supplied database identifier. This identifier is the unique key that identifies a DB instance.",
                                "type": "string"
                            },
                            "DBInstanceStatus": {
                                "description": "Specifies the current state of this database.",
                                "type": "string"
                            },
                            "DBName": {
                                "description": "The database name.",
                                "type": "string"
                            },
                            "DBParameterGroups": {
                                "description": "Provides the list of DB parameter groups applied to this DB instance.",
                                "items": {
                                    "description": "<p>The status of the DB parameter group.</p> <p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>CreateDBInstance</a> </p> </li> <li> <p> <a>DeleteDBInstance</a> </p> </li> <li> <p> <a>ModifyDBInstance</a> </p> </li> <li> <p> <a>RebootDBInstance</a> </p> </li> </ul>",
                                    "properties": {
                                        "DBParameterGroupName": {
                                            "description": "The name of the DP parameter group.",
                                            "type": "string"
                                        },
                                        "ParameterApplyStatus": {
                                            "description": "The status of parameter updates.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "DBSecurityGroups": {
                                "description": " Provides List of DB security group elements containing only <code>DBSecurityGroup.Name</code> and <code>DBSecurityGroup.Status</code> subelements. ",
                                "items": {
                                    "description": "<p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>ModifyDBInstance</a> </p> </li> <li> <p> <a>RebootDBInstance</a> </p> </li> </ul>",
                                    "properties": {
                                        "DBSecurityGroupName": {
                                            "description": "The name of the DB security group.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of the DB security group.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "DBSubnetGroup": {
                                "description": "Specifies information on the subnet group associated with the DB instance, including the name, description, and subnets in the subnet group.",
                                "properties": {
                                    "DBSubnetGroupArn": {
                                        "description": "The Amazon Resource Name (ARN) for the DB subnet group.",
                                        "type": "string"
                                    },
                                    "DBSubnetGroupDescription": {
                                        "description": "Provides the description of the DB subnet group.",
                                        "type": "string"
                                    },
                                    "DBSubnetGroupName": {
                                        "description": "The name of the DB subnet group.",
                                        "type": "string"
                                    },
                                    "SubnetGroupStatus": {
                                        "description": "Provides the status of the DB subnet group.",
                                        "type": "string"
                                    },
                                    "Subnets": {
                                        "description": " Contains a list of <a>Subnet</a> elements. ",
                                        "items": {
                                            "description": " This data type is used as a response element in the <a>DescribeDBSubnetGroups</a> action. ",
                                            "properties": {
                                                "SubnetAvailabilityZone": {
                                                    "description": "<p>Contains Availability Zone information.</p> <p> This data type is used as an element in the following data type:</p> <ul> <li> <p> <a>OrderableDBInstanceOption</a> </p> </li> </ul>",
                                                    "properties": {
                                                        "Name": {
                                                            "description": "The name of the availability zone.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "SubnetIdentifier": {
                                                    "description": "Specifies the identifier of the subnet.",
                                                    "type": "string"
                                                },
                                                "SubnetStatus": {
                                                    "description": "Specifies the status of the subnet.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "VpcId": {
                                        "description": "Provides the VpcId of the DB subnet group.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "DbInstancePort": {
                                "description": "Specifies the port that the DB instance listens on. If the DB instance is part of a DB cluster, this can be a different port than the DB cluster port.",
                                "type": "integer"
                            },
                            "DbiResourceId": {
                                "description": "The AWS Region-unique, immutable identifier for the DB instance. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.",
                                "type": "string"
                            },
                            "DomainMemberships": {
                                "description": "Not supported",
                                "items": {
                                    "description": "An Active Directory Domain membership record associated with the DB instance.",
                                    "properties": {
                                        "Domain": {
                                            "description": "The identifier of the Active Directory Domain.",
                                            "type": "string"
                                        },
                                        "FQDN": {
                                            "description": "The fully qualified domain name of the Active Directory Domain.",
                                            "type": "string"
                                        },
                                        "IAMRoleName": {
                                            "description": "The name of the IAM role to be used when making API calls to the Directory Service.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of the DB instance's Active Directory Domain membership, such as joined, pending-join, failed etc).",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "EnabledCloudwatchLogsExports": {
                                "description": "A list of log types that this DB instance is configured to export to CloudWatch Logs.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "Endpoint": {
                                "description": "Specifies the connection endpoint.",
                                "properties": {
                                    "Address": {
                                        "description": "Specifies the DNS address of the DB instance.",
                                        "type": "string"
                                    },
                                    "HostedZoneId": {
                                        "description": "Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.",
                                        "type": "string"
                                    },
                                    "Port": {
                                        "description": "Specifies the port that the database engine is listening on.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "Engine": {
                                "description": "Provides the name of the database engine to be used for this DB instance.",
                                "type": "string"
                            },
                            "EngineVersion": {
                                "description": "Indicates the database engine version.",
                                "type": "string"
                            },
                            "EnhancedMonitoringResourceArn": {
                                "description": "The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the Enhanced Monitoring metrics data for the DB instance.",
                                "type": "string"
                            },
                            "IAMDatabaseAuthenticationEnabled": {
                                "description": "True if AWS Identity and Access Management (IAM) authentication is enabled, and otherwise false.",
                                "type": "boolean"
                            },
                            "InstanceCreateTime": {
                                "description": "Provides the date and time the DB instance was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "Iops": {
                                "description": "Specifies the Provisioned IOPS (I/O operations per second) value.",
                                "type": "integer"
                            },
                            "KmsKeyId": {
                                "description": " If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB instance. ",
                                "type": "string"
                            },
                            "LatestRestorableTime": {
                                "description": "Specifies the latest time to which a database can be restored with point-in-time restore.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "LicenseModel": {
                                "description": "License model information for this DB instance.",
                                "type": "string"
                            },
                            "MasterUsername": {
                                "description": "Contains the master username for the DB instance.",
                                "type": "string"
                            },
                            "MonitoringInterval": {
                                "description": "The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance.",
                                "type": "integer"
                            },
                            "MonitoringRoleArn": {
                                "description": "The ARN for the IAM role that permits Neptune to send Enhanced Monitoring metrics to Amazon CloudWatch Logs.",
                                "type": "string"
                            },
                            "MultiAZ": {
                                "description": "Specifies if the DB instance is a Multi-AZ deployment.",
                                "type": "boolean"
                            },
                            "OptionGroupMemberships": {
                                "description": "Provides the list of option group memberships for this DB instance.",
                                "items": {
                                    "description": "Provides information on the option groups the DB instance is a member of.",
                                    "properties": {
                                        "OptionGroupName": {
                                            "description": "The name of the option group that the instance belongs to.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of the DB instance's option group membership. Valid values are: <code>in-sync</code>, <code>pending-apply</code>, <code>pending-removal</code>, <code>pending-maintenance-apply</code>, <code>pending-maintenance-removal</code>, <code>applying</code>, <code>removing</code>, and <code>failed</code>. ",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "PendingModifiedValues": {
                                "description": "Specifies that changes to the DB instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements.",
                                "properties": {
                                    "AllocatedStorage": {
                                        "description": " Contains the new <code>AllocatedStorage</code> size for the DB instance that will be applied or is currently being applied. ",
                                        "type": "integer"
                                    },
                                    "BackupRetentionPeriod": {
                                        "description": "Specifies the pending number of days for which automated backups are retained.",
                                        "type": "integer"
                                    },
                                    "CACertificateIdentifier": {
                                        "description": "Specifies the identifier of the CA certificate for the DB instance.",
                                        "type": "string"
                                    },
                                    "DBInstanceClass": {
                                        "description": " Contains the new <code>DBInstanceClass</code> for the DB instance that will be applied or is currently being applied. ",
                                        "type": "string"
                                    },
                                    "DBInstanceIdentifier": {
                                        "description": " Contains the new <code>DBInstanceIdentifier</code> for the DB instance that will be applied or is currently being applied. ",
                                        "type": "string"
                                    },
                                    "DBSubnetGroupName": {
                                        "description": "The new DB subnet group for the DB instance. ",
                                        "type": "string"
                                    },
                                    "EngineVersion": {
                                        "description": "Indicates the database engine version.",
                                        "type": "string"
                                    },
                                    "Iops": {
                                        "description": "Specifies the new Provisioned IOPS value for the DB instance that will be applied or is currently being applied.",
                                        "type": "integer"
                                    },
                                    "LicenseModel": {
                                        "description": "<p>The license model for the DB instance.</p> <p>Valid values: <code>license-included</code> | <code>bring-your-own-license</code> | <code>general-public-license</code> </p>",
                                        "type": "string"
                                    },
                                    "MasterUserPassword": {
                                        "description": "Contains the pending or currently-in-progress change of the master credentials for the DB instance.",
                                        "type": "string"
                                    },
                                    "MultiAZ": {
                                        "description": "Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.",
                                        "type": "boolean"
                                    },
                                    "PendingCloudwatchLogsExports": {
                                        "description": "A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated.",
                                        "properties": {
                                            "LogTypesToDisable": {
                                                "description": "Log types that are in the process of being enabled. After they are enabled, these log types are exported to CloudWatch Logs.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "LogTypesToEnable": {
                                                "description": "Log types that are in the process of being deactivated. After they are deactivated, these log types aren't exported to CloudWatch Logs.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Port": {
                                        "description": "Specifies the pending port for the DB instance.",
                                        "type": "integer"
                                    },
                                    "StorageType": {
                                        "description": "Specifies the storage type to be associated with the DB instance.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "PerformanceInsightsEnabled": {
                                "description": "True if Performance Insights is enabled for the DB instance, and otherwise false.",
                                "type": "boolean"
                            },
                            "PerformanceInsightsKMSKeyId": {
                                "description": "The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.",
                                "type": "string"
                            },
                            "PreferredBackupWindow": {
                                "description": " Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. ",
                                "type": "string"
                            },
                            "PreferredMaintenanceWindow": {
                                "description": "Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
                                "type": "string"
                            },
                            "PromotionTier": {
                                "description": "A value that specifies the order in which a Read Replica is promoted to the primary instance after a failure of the existing primary instance. ",
                                "type": "integer"
                            },
                            "PubliclyAccessible": {
                                "description": "This parameter is not supported.",
                                "type": "boolean"
                            },
                            "ReadReplicaDBClusterIdentifiers": {
                                "description": "Contains one or more identifiers of DB clusters that are Read Replicas of this DB instance.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "ReadReplicaDBInstanceIdentifiers": {
                                "description": "Contains one or more identifiers of the Read Replicas associated with this DB instance.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "ReadReplicaSourceDBInstanceIdentifier": {
                                "description": "Contains the identifier of the source DB instance if this DB instance is a Read Replica.",
                                "type": "string"
                            },
                            "SecondaryAvailabilityZone": {
                                "description": "If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support.",
                                "type": "string"
                            },
                            "StatusInfos": {
                                "description": "The status of a Read Replica. If the instance is not a Read Replica, this is blank.",
                                "items": {
                                    "description": "Provides a list of status information for a DB instance.",
                                    "properties": {
                                        "Message": {
                                            "description": "Details of the error if there is an error for the instance. If the instance is not in an error state, this value is blank.",
                                            "type": "string"
                                        },
                                        "Normal": {
                                            "description": "Boolean value that is true if the instance is operating normally, or false if the instance is in an error state.",
                                            "type": "boolean"
                                        },
                                        "Status": {
                                            "description": "Status of the DB instance. For a StatusType of read replica, the values can be replicating, error, stopped, or terminated.",
                                            "type": "string"
                                        },
                                        "StatusType": {
                                            "description": "This value is currently \"read replication.\"",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "StorageEncrypted": {
                                "description": "Specifies whether the DB instance is encrypted.",
                                "type": "boolean"
                            },
                            "StorageType": {
                                "description": "Specifies the storage type associated with DB instance.",
                                "type": "string"
                            },
                            "TdeCredentialArn": {
                                "description": "The ARN from the key store with which the instance is associated for TDE encryption.",
                                "type": "string"
                            },
                            "Timezone": {
                                "description": "Not supported. ",
                                "type": "string"
                            },
                            "VpcSecurityGroups": {
                                "description": "Provides a list of VPC security group elements that the DB instance belongs to.",
                                "items": {
                                    "description": "This data type is used as a response element for queries on VPC security group membership.",
                                    "properties": {
                                        "Status": {
                                            "description": "The status of the VPC security group.",
                                            "type": "string"
                                        },
                                        "VpcSecurityGroupId": {
                                            "description": "The name of the VPC security group.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DeleteDBParameterGroupMessage": {
                "description": "<p/>",
                "properties": {
                    "DBParameterGroupName": {
                        "description": "<p>The name of the DB parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must be the name of an existing DB parameter group</p> </li> <li> <p>You can't delete a default DB parameter group</p> </li> <li> <p>Cannot be associated with any DB instances</p> </li> </ul>",
                        "type": "string"
                    }
                },
                "required": [
                    "DBParameterGroupName"
                ],
                "type": "object"
            },
            "DeleteDBSubnetGroupMessage": {
                "description": "<p/>",
                "properties": {
                    "DBSubnetGroupName": {
                        "description": "<p>The name of the database subnet group to delete.</p> <note> <p>You can't delete the default subnet group.</p> </note> <p>Constraints:</p> <p>Constraints: Must match the name of an existing DBSubnetGroup. Must not be default.</p> <p>Example: <code>mySubnetgroup</code> </p>",
                        "type": "string"
                    }
                },
                "required": [
                    "DBSubnetGroupName"
                ],
                "type": "object"
            },
            "DeleteEventSubscriptionMessage": {
                "description": "<p/>",
                "properties": {
                    "SubscriptionName": {
                        "description": "The name of the event notification subscription you want to delete.",
                        "type": "string"
                    }
                },
                "required": [
                    "SubscriptionName"
                ],
                "type": "object"
            },
            "DeleteEventSubscriptionResult": {
                "properties": {
                    "EventSubscription": {
                        "description": "Contains the results of a successful invocation of the <a>DescribeEventSubscriptions</a> action.",
                        "properties": {
                            "CustSubscriptionId": {
                                "description": "The event notification subscription Id.",
                                "type": "string"
                            },
                            "CustomerAwsId": {
                                "description": "The AWS customer account associated with the event notification subscription.",
                                "type": "string"
                            },
                            "Enabled": {
                                "description": "A Boolean value indicating if the subscription is enabled. True indicates the subscription is enabled.",
                                "type": "boolean"
                            },
                            "EventCategoriesList": {
                                "description": "A list of event categories for the event notification subscription.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "EventSubscriptionArn": {
                                "description": "The Amazon Resource Name (ARN) for the event subscription.",
                                "type": "string"
                            },
                            "SnsTopicArn": {
                                "description": "The topic ARN of the event notification subscription.",
                                "type": "string"
                            },
                            "SourceIdsList": {
                                "description": "A list of source IDs for the event notification subscription.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "SourceType": {
                                "description": "The source type for the event notification subscription.",
                                "type": "string"
                            },
                            "Status": {
                                "description": "<p>The status of the event notification subscription.</p> <p>Constraints:</p> <p>Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist</p> <p>The status \"no-permission\" indicates that Neptune no longer has permission to post to the SNS topic. The status \"topic-not-exist\" indicates that the topic was deleted after the subscription was created.</p>",
                                "type": "string"
                            },
                            "SubscriptionCreationTime": {
                                "description": "The time the event notification subscription was created.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DescribeDBClusterParameterGroupsMessage": {
                "description": "<p/>",
                "properties": {
                    "DBClusterParameterGroupName": {
                        "description": "<p>The name of a specific DB cluster parameter group to return details for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DBClusterParameterGroup.</p> </li> </ul>",
                        "type": "string"
                    },
                    "Filters": {
                        "description": "This parameter is not currently supported.",
                        "items": {
                            "description": "This type is not currently supported.",
                            "properties": {
                                "Name": {
                                    "description": "This parameter is not currently supported.",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "This parameter is not currently supported.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous <code>DescribeDBClusterParameterGroups</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    },
                    "MaxRecords": {
                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DescribeDBClusterParametersMessage": {
                "description": "<p/>",
                "properties": {
                    "DBClusterParameterGroupName": {
                        "description": "<p>The name of a specific DB cluster parameter group to return parameter details for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DBClusterParameterGroup.</p> </li> </ul>",
                        "type": "string"
                    },
                    "Filters": {
                        "description": "This parameter is not currently supported.",
                        "items": {
                            "description": "This type is not currently supported.",
                            "properties": {
                                "Name": {
                                    "description": "This parameter is not currently supported.",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "This parameter is not currently supported.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous <code>DescribeDBClusterParameters</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    },
                    "MaxRecords": {
                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                        "type": "integer"
                    },
                    "Source": {
                        "description": " A value that indicates to return only parameters for a specific source. Parameter sources can be <code>engine</code>, <code>service</code>, or <code>customer</code>. ",
                        "type": "string"
                    }
                },
                "required": [
                    "DBClusterParameterGroupName"
                ],
                "type": "object"
            },
            "DescribeDBClusterSnapshotAttributesMessage": {
                "description": "<p/>",
                "properties": {
                    "DBClusterSnapshotIdentifier": {
                        "description": "The identifier for the DB cluster snapshot to describe the attributes for.",
                        "type": "string"
                    }
                },
                "required": [
                    "DBClusterSnapshotIdentifier"
                ],
                "type": "object"
            },
            "DescribeDBClusterSnapshotAttributesResult": {
                "properties": {
                    "DBClusterSnapshotAttributesResult": {
                        "description": "<p>Contains the results of a successful call to the <a>DescribeDBClusterSnapshotAttributes</a> API action.</p> <p>Manual DB cluster snapshot attributes are used to authorize other AWS accounts to copy or restore a manual DB cluster snapshot. For more information, see the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>",
                        "properties": {
                            "DBClusterSnapshotAttributes": {
                                "description": "The list of attributes and values for the manual DB cluster snapshot.",
                                "items": {
                                    "description": "<p>Contains the name and values of a manual DB cluster snapshot attribute.</p> <p>Manual DB cluster snapshot attributes are used to authorize other AWS accounts to restore a manual DB cluster snapshot. For more information, see the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>",
                                    "properties": {
                                        "AttributeName": {
                                            "description": "<p>The name of the manual DB cluster snapshot attribute.</p> <p>The attribute named <code>restore</code> refers to the list of AWS accounts that have permission to copy or restore the manual DB cluster snapshot. For more information, see the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>",
                                            "type": "string"
                                        },
                                        "AttributeValues": {
                                            "description": "<p>The value(s) for the manual DB cluster snapshot attribute.</p> <p>If the <code>AttributeName</code> field is set to <code>restore</code>, then this element returns a list of IDs of the AWS accounts that are authorized to copy or restore the manual DB cluster snapshot. If a value of <code>all</code> is in the list, then the manual DB cluster snapshot is public and available for any AWS account to copy or restore.</p>",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "DBClusterSnapshotIdentifier": {
                                "description": "The identifier of the manual DB cluster snapshot that the attributes apply to.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DescribeDBClusterSnapshotsMessage": {
                "description": "<p/>",
                "properties": {
                    "DBClusterIdentifier": {
                        "description": "<p>The ID of the DB cluster to retrieve the list of DB cluster snapshots for. This parameter can't be used in conjunction with the <code>DBClusterSnapshotIdentifier</code> parameter. This parameter is not case-sensitive. </p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the identifier of an existing DBCluster.</p> </li> </ul>",
                        "type": "string"
                    },
                    "DBClusterSnapshotIdentifier": {
                        "description": "<p>A specific DB cluster snapshot identifier to describe. This parameter can't be used in conjunction with the <code>DBClusterIdentifier</code> parameter. This value is stored as a lowercase string. </p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the identifier of an existing DBClusterSnapshot.</p> </li> <li> <p>If this identifier is for an automated snapshot, the <code>SnapshotType</code> parameter must also be specified.</p> </li> </ul>",
                        "type": "string"
                    },
                    "Filters": {
                        "description": "This parameter is not currently supported.",
                        "items": {
                            "description": "This type is not currently supported.",
                            "properties": {
                                "Name": {
                                    "description": "This parameter is not currently supported.",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "This parameter is not currently supported.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "IncludePublic": {
                        "description": "<p>True to include manual DB cluster snapshots that are public and can be copied or restored by any AWS account, and otherwise false. The default is <code>false</code>. The default is false.</p> <p>You can share a manual DB cluster snapshot as public by using the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>",
                        "type": "boolean"
                    },
                    "IncludeShared": {
                        "description": "<p>True to include shared manual DB cluster snapshots from other AWS accounts that this AWS account has been given permission to copy or restore, and otherwise false. The default is <code>false</code>.</p> <p>You can give an AWS account permission to restore a manual DB cluster snapshot from another AWS account by the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>",
                        "type": "boolean"
                    },
                    "Marker": {
                        "description": "An optional pagination token provided by a previous <code>DescribeDBClusterSnapshots</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    },
                    "MaxRecords": {
                        "description": "<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                        "type": "integer"
                    },
                    "SnapshotType": {
                        "description": "<p>The type of DB cluster snapshots to be returned. You can specify one of the following values:</p> <ul> <li> <p> <code>automated</code> - Return all DB cluster snapshots that have been automatically taken by Amazon Neptune for my AWS account.</p> </li> <li> <p> <code>manual</code> - Return all DB cluster snapshots that have been taken by my AWS account.</p> </li> <li> <p> <code>shared</code> - Return all manual DB cluster snapshots that have been shared to my AWS account.</p> </li> <li> <p> <code>public</code> - Return all DB cluster snapshots that have been marked as public.</p> </li> </ul> <p>If you don't specify a <code>SnapshotType</code> value, then both automated and manual DB cluster snapshots are returned. You can include shared DB cluster snapshots with these results by setting the <code>IncludeShared</code> parameter to <code>true</code>. You can include public DB cluster snapshots with these results by setting the <code>IncludePublic</code> parameter to <code>true</code>.</p> <p>The <code>IncludeShared</code> and <code>IncludePublic</code> parameters don't apply for <code>SnapshotType</code> values of <code>manual</code> or <code>automated</code>. The <code>IncludePublic</code> parameter doesn't apply when <code>SnapshotType</code> is set to <code>shared</code>. The <code>IncludeShared</code> parameter doesn't apply when <code>SnapshotType</code> is set to <code>public</code>.</p>",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeDBClustersMessage": {
                "description": "<p/>",
                "properties": {
                    "DBClusterIdentifier": {
                        "description": "<p>The user-supplied DB cluster identifier. If this parameter is specified, information from only the specific DB cluster is returned. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match an existing DBClusterIdentifier.</p> </li> </ul>",
                        "type": "string"
                    },
                    "Filters": {
                        "description": "<p>A filter that specifies one or more DB clusters to describe.</p> <p>Supported filters:</p> <ul> <li> <p> <code>db-cluster-id</code> - Accepts DB cluster identifiers and DB cluster Amazon Resource Names (ARNs). The results list will only include information about the DB clusters identified by these ARNs.</p> </li> </ul>",
                        "items": {
                            "description": "This type is not currently supported.",
                            "properties": {
                                "Name": {
                                    "description": "This parameter is not currently supported.",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "This parameter is not currently supported.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": "An optional pagination token provided by a previous <a>DescribeDBClusters</a> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    },
                    "MaxRecords": {
                        "description": "<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DescribeDBEngineVersionsMessage": {
                "properties": {
                    "DBParameterGroupFamily": {
                        "description": "<p>The name of a specific DB parameter group family to return details for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match an existing DBParameterGroupFamily.</p> </li> </ul>",
                        "type": "string"
                    },
                    "DefaultOnly": {
                        "description": "Indicates that only the default version of the specified engine or engine and major version combination is returned.",
                        "type": "boolean"
                    },
                    "Engine": {
                        "description": "The database engine to return.",
                        "type": "string"
                    },
                    "EngineVersion": {
                        "description": "<p>The database engine version to return.</p> <p>Example: <code>5.1.49</code> </p>",
                        "type": "string"
                    },
                    "Filters": {
                        "description": "Not currently supported.",
                        "items": {
                            "description": "This type is not currently supported.",
                            "properties": {
                                "Name": {
                                    "description": "This parameter is not currently supported.",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "This parameter is not currently supported.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "ListSupportedCharacterSets": {
                        "description": "If this parameter is specified and the requested engine supports the <code>CharacterSetName</code> parameter for <code>CreateDBInstance</code>, the response includes a list of supported character sets for each engine version. ",
                        "type": "boolean"
                    },
                    "ListSupportedTimezones": {
                        "description": "If this parameter is specified and the requested engine supports the <code>TimeZone</code> parameter for <code>CreateDBInstance</code>, the response includes a list of supported time zones for each engine version. ",
                        "type": "boolean"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    },
                    "MaxRecords": {
                        "description": "<p> The maximum number of records to include in the response. If more than the <code>MaxRecords</code> value is available, a pagination token called a marker is included in the response so that the following results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DescribeDBInstancesMessage": {
                "description": "<p/>",
                "properties": {
                    "DBInstanceIdentifier": {
                        "description": "<p>The user-supplied instance identifier. If this parameter is specified, information from only the specific DB instance is returned. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the identifier of an existing DBInstance.</p> </li> </ul>",
                        "type": "string"
                    },
                    "Filters": {
                        "description": "<p>A filter that specifies one or more DB instances to describe.</p> <p>Supported filters:</p> <ul> <li> <p> <code>db-cluster-id</code> - Accepts DB cluster identifiers and DB cluster Amazon Resource Names (ARNs). The results list will only include information about the DB instances associated with the DB clusters identified by these ARNs.</p> </li> <li> <p> <code>db-instance-id</code> - Accepts DB instance identifiers and DB instance Amazon Resource Names (ARNs). The results list will only include information about the DB instances identified by these ARNs.</p> </li> </ul>",
                        "items": {
                            "description": "This type is not currently supported.",
                            "properties": {
                                "Name": {
                                    "description": "This parameter is not currently supported.",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "This parameter is not currently supported.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous <code>DescribeDBInstances</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    },
                    "MaxRecords": {
                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DescribeDBParameterGroupsMessage": {
                "description": "<p/>",
                "properties": {
                    "DBParameterGroupName": {
                        "description": "<p>The name of a specific DB parameter group to return details for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DBClusterParameterGroup.</p> </li> </ul>",
                        "type": "string"
                    },
                    "Filters": {
                        "description": "This parameter is not currently supported.",
                        "items": {
                            "description": "This type is not currently supported.",
                            "properties": {
                                "Name": {
                                    "description": "This parameter is not currently supported.",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "This parameter is not currently supported.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous <code>DescribeDBParameterGroups</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    },
                    "MaxRecords": {
                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DescribeDBParametersMessage": {
                "properties": {
                    "DBParameterGroupName": {
                        "description": "<p>The name of a specific DB parameter group to return details for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DBParameterGroup.</p> </li> </ul>",
                        "type": "string"
                    },
                    "Filters": {
                        "description": "This parameter is not currently supported.",
                        "items": {
                            "description": "This type is not currently supported.",
                            "properties": {
                                "Name": {
                                    "description": "This parameter is not currently supported.",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "This parameter is not currently supported.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous <code>DescribeDBParameters</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    },
                    "MaxRecords": {
                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                        "type": "integer"
                    },
                    "Source": {
                        "description": "<p>The parameter types to return.</p> <p>Default: All parameter types returned</p> <p>Valid Values: <code>user | system | engine-default</code> </p>",
                        "type": "string"
                    }
                },
                "required": [
                    "DBParameterGroupName"
                ],
                "type": "object"
            },
            "DescribeDBSubnetGroupsMessage": {
                "description": "<p/>",
                "properties": {
                    "DBSubnetGroupName": {
                        "description": "The name of the DB subnet group to return details for.",
                        "type": "string"
                    },
                    "Filters": {
                        "description": "This parameter is not currently supported.",
                        "items": {
                            "description": "This type is not currently supported.",
                            "properties": {
                                "Name": {
                                    "description": "This parameter is not currently supported.",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "This parameter is not currently supported.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous DescribeDBSubnetGroups request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    },
                    "MaxRecords": {
                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DescribeEngineDefaultClusterParametersMessage": {
                "description": "<p/>",
                "properties": {
                    "DBParameterGroupFamily": {
                        "description": "The name of the DB cluster parameter group family to return engine parameter information for.",
                        "type": "string"
                    },
                    "Filters": {
                        "description": "This parameter is not currently supported.",
                        "items": {
                            "description": "This type is not currently supported.",
                            "properties": {
                                "Name": {
                                    "description": "This parameter is not currently supported.",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "This parameter is not currently supported.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous <code>DescribeEngineDefaultClusterParameters</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    },
                    "MaxRecords": {
                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                        "type": "integer"
                    }
                },
                "required": [
                    "DBParameterGroupFamily"
                ],
                "type": "object"
            },
            "DescribeEngineDefaultClusterParametersResult": {
                "properties": {
                    "EngineDefaults": {
                        "description": " Contains the result of a successful invocation of the <a>DescribeEngineDefaultParameters</a> action. ",
                        "properties": {
                            "DBParameterGroupFamily": {
                                "description": "Specifies the name of the DB parameter group family that the engine default parameters apply to.",
                                "type": "string"
                            },
                            "Marker": {
                                "description": " An optional pagination token provided by a previous EngineDefaults request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> . ",
                                "type": "string"
                            },
                            "Parameters": {
                                "description": "Contains a list of engine default parameters.",
                                "items": {
                                    "description": "<p> This data type is used as a request parameter in the <a>ModifyDBParameterGroup</a> and <a>ResetDBParameterGroup</a> actions. </p> <p>This data type is used as a response element in the <a>DescribeEngineDefaultParameters</a> and <a>DescribeDBParameters</a> actions.</p>",
                                    "properties": {
                                        "AllowedValues": {
                                            "description": "Specifies the valid range of values for the parameter.",
                                            "type": "string"
                                        },
                                        "ApplyMethod": {
                                            "description": "Indicates when to apply parameter updates.",
                                            "enum": [
                                                "immediate",
                                                "pending-reboot"
                                            ],
                                            "type": "string"
                                        },
                                        "ApplyType": {
                                            "description": "Specifies the engine specific parameters type.",
                                            "type": "string"
                                        },
                                        "DataType": {
                                            "description": "Specifies the valid data type for the parameter.",
                                            "type": "string"
                                        },
                                        "Description": {
                                            "description": "Provides a description of the parameter.",
                                            "type": "string"
                                        },
                                        "IsModifiable": {
                                            "description": " Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed. ",
                                            "type": "boolean"
                                        },
                                        "MinimumEngineVersion": {
                                            "description": "The earliest engine version to which the parameter can apply.",
                                            "type": "string"
                                        },
                                        "ParameterName": {
                                            "description": "Specifies the name of the parameter.",
                                            "type": "string"
                                        },
                                        "ParameterValue": {
                                            "description": "Specifies the value of the parameter.",
                                            "type": "string"
                                        },
                                        "Source": {
                                            "description": "Indicates the source of the parameter value.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DescribeEngineDefaultParametersMessage": {
                "description": "<p/>",
                "properties": {
                    "DBParameterGroupFamily": {
                        "description": "The name of the DB parameter group family.",
                        "type": "string"
                    },
                    "Filters": {
                        "description": "Not currently supported.",
                        "items": {
                            "description": "This type is not currently supported.",
                            "properties": {
                                "Name": {
                                    "description": "This parameter is not currently supported.",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "This parameter is not currently supported.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous <code>DescribeEngineDefaultParameters</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    },
                    "MaxRecords": {
                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                        "type": "integer"
                    }
                },
                "required": [
                    "DBParameterGroupFamily"
                ],
                "type": "object"
            },
            "DescribeEngineDefaultParametersResult": {
                "properties": {
                    "EngineDefaults": {
                        "description": " Contains the result of a successful invocation of the <a>DescribeEngineDefaultParameters</a> action. ",
                        "properties": {
                            "DBParameterGroupFamily": {
                                "description": "Specifies the name of the DB parameter group family that the engine default parameters apply to.",
                                "type": "string"
                            },
                            "Marker": {
                                "description": " An optional pagination token provided by a previous EngineDefaults request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> . ",
                                "type": "string"
                            },
                            "Parameters": {
                                "description": "Contains a list of engine default parameters.",
                                "items": {
                                    "description": "<p> This data type is used as a request parameter in the <a>ModifyDBParameterGroup</a> and <a>ResetDBParameterGroup</a> actions. </p> <p>This data type is used as a response element in the <a>DescribeEngineDefaultParameters</a> and <a>DescribeDBParameters</a> actions.</p>",
                                    "properties": {
                                        "AllowedValues": {
                                            "description": "Specifies the valid range of values for the parameter.",
                                            "type": "string"
                                        },
                                        "ApplyMethod": {
                                            "description": "Indicates when to apply parameter updates.",
                                            "enum": [
                                                "immediate",
                                                "pending-reboot"
                                            ],
                                            "type": "string"
                                        },
                                        "ApplyType": {
                                            "description": "Specifies the engine specific parameters type.",
                                            "type": "string"
                                        },
                                        "DataType": {
                                            "description": "Specifies the valid data type for the parameter.",
                                            "type": "string"
                                        },
                                        "Description": {
                                            "description": "Provides a description of the parameter.",
                                            "type": "string"
                                        },
                                        "IsModifiable": {
                                            "description": " Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed. ",
                                            "type": "boolean"
                                        },
                                        "MinimumEngineVersion": {
                                            "description": "The earliest engine version to which the parameter can apply.",
                                            "type": "string"
                                        },
                                        "ParameterName": {
                                            "description": "Specifies the name of the parameter.",
                                            "type": "string"
                                        },
                                        "ParameterValue": {
                                            "description": "Specifies the value of the parameter.",
                                            "type": "string"
                                        },
                                        "Source": {
                                            "description": "Indicates the source of the parameter value.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DescribeEventCategoriesMessage": {
                "description": "<p/>",
                "properties": {
                    "Filters": {
                        "description": "This parameter is not currently supported.",
                        "items": {
                            "description": "This type is not currently supported.",
                            "properties": {
                                "Name": {
                                    "description": "This parameter is not currently supported.",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "This parameter is not currently supported.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "SourceType": {
                        "description": "<p>The type of source that is generating the events.</p> <p>Valid values: db-instance | db-parameter-group | db-security-group | db-snapshot</p>",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeEventSubscriptionsMessage": {
                "description": "<p/>",
                "properties": {
                    "Filters": {
                        "description": "This parameter is not currently supported.",
                        "items": {
                            "description": "This type is not currently supported.",
                            "properties": {
                                "Name": {
                                    "description": "This parameter is not currently supported.",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "This parameter is not currently supported.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous DescribeOrderableDBInstanceOptions request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> . ",
                        "type": "string"
                    },
                    "MaxRecords": {
                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                        "type": "integer"
                    },
                    "SubscriptionName": {
                        "description": "The name of the event notification subscription you want to describe.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeEventsMessage": {
                "description": "<p/>",
                "properties": {
                    "Duration": {
                        "description": "<p>The number of minutes to retrieve events for.</p> <p>Default: 60</p>",
                        "type": "integer"
                    },
                    "EndTime": {
                        "description": "<p> The end of the time interval for which to retrieve events, specified in ISO 8601 format. For more information about ISO 8601, go to the <a href=\"http://en.wikipedia.org/wiki/ISO_8601\">ISO8601 Wikipedia page.</a> </p> <p>Example: 2009-07-08T18:00Z</p>",
                        "format": "date-time",
                        "type": "string"
                    },
                    "EventCategories": {
                        "description": "A list of event categories that trigger notifications for a event notification subscription.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "Filters": {
                        "description": "This parameter is not currently supported.",
                        "items": {
                            "description": "This type is not currently supported.",
                            "properties": {
                                "Name": {
                                    "description": "This parameter is not currently supported.",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "This parameter is not currently supported.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous DescribeEvents request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    },
                    "MaxRecords": {
                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                        "type": "integer"
                    },
                    "SourceIdentifier": {
                        "description": "<p>The identifier of the event source for which events are returned. If not specified, then all sources are included in the response.</p> <p>Constraints:</p> <ul> <li> <p>If SourceIdentifier is supplied, SourceType must also be provided.</p> </li> <li> <p>If the source type is <code>DBInstance</code>, then a <code>DBInstanceIdentifier</code> must be supplied.</p> </li> <li> <p>If the source type is <code>DBSecurityGroup</code>, a <code>DBSecurityGroupName</code> must be supplied.</p> </li> <li> <p>If the source type is <code>DBParameterGroup</code>, a <code>DBParameterGroupName</code> must be supplied.</p> </li> <li> <p>If the source type is <code>DBSnapshot</code>, a <code>DBSnapshotIdentifier</code> must be supplied.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>",
                        "type": "string"
                    },
                    "SourceType": {
                        "description": "The event source to retrieve events for. If no value is specified, all events are returned.",
                        "enum": [
                            "db-instance",
                            "db-parameter-group",
                            "db-security-group",
                            "db-snapshot",
                            "db-cluster",
                            "db-cluster-snapshot"
                        ],
                        "type": "string"
                    },
                    "StartTime": {
                        "description": "<p> The beginning of the time interval to retrieve events for, specified in ISO 8601 format. For more information about ISO 8601, go to the <a href=\"http://en.wikipedia.org/wiki/ISO_8601\">ISO8601 Wikipedia page.</a> </p> <p>Example: 2009-07-08T18:00Z</p>",
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeOrderableDBInstanceOptionsMessage": {
                "description": "<p/>",
                "properties": {
                    "DBInstanceClass": {
                        "description": "The DB instance class filter value. Specify this parameter to show only the available offerings matching the specified DB instance class.",
                        "type": "string"
                    },
                    "Engine": {
                        "description": "The name of the engine to retrieve DB instance options for.",
                        "type": "string"
                    },
                    "EngineVersion": {
                        "description": "The engine version filter value. Specify this parameter to show only the available offerings matching the specified engine version.",
                        "type": "string"
                    },
                    "Filters": {
                        "description": "This parameter is not currently supported.",
                        "items": {
                            "description": "This type is not currently supported.",
                            "properties": {
                                "Name": {
                                    "description": "This parameter is not currently supported.",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "This parameter is not currently supported.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "LicenseModel": {
                        "description": "The license model filter value. Specify this parameter to show only the available offerings matching the specified license model.",
                        "type": "string"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous DescribeOrderableDBInstanceOptions request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> . ",
                        "type": "string"
                    },
                    "MaxRecords": {
                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                        "type": "integer"
                    },
                    "Vpc": {
                        "description": "The VPC filter value. Specify this parameter to show only the available VPC or non-VPC offerings.",
                        "type": "boolean"
                    }
                },
                "required": [
                    "Engine"
                ],
                "type": "object"
            },
            "DescribePendingMaintenanceActionsMessage": {
                "description": "<p/>",
                "properties": {
                    "Filters": {
                        "description": "<p>A filter that specifies one or more resources to return pending maintenance actions for.</p> <p>Supported filters:</p> <ul> <li> <p> <code>db-cluster-id</code> - Accepts DB cluster identifiers and DB cluster Amazon Resource Names (ARNs). The results list will only include pending maintenance actions for the DB clusters identified by these ARNs.</p> </li> <li> <p> <code>db-instance-id</code> - Accepts DB instance identifiers and DB instance ARNs. The results list will only include pending maintenance actions for the DB instances identified by these ARNs.</p> </li> </ul>",
                        "items": {
                            "description": "This type is not currently supported.",
                            "properties": {
                                "Name": {
                                    "description": "This parameter is not currently supported.",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "This parameter is not currently supported.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous <code>DescribePendingMaintenanceActions</code> request. If this parameter is specified, the response includes only records beyond the marker, up to a number of records specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    },
                    "MaxRecords": {
                        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>",
                        "type": "integer"
                    },
                    "ResourceIdentifier": {
                        "description": "The ARN of a resource to return pending maintenance actions for.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeValidDBInstanceModificationsMessage": {
                "description": "<p/>",
                "properties": {
                    "DBInstanceIdentifier": {
                        "description": "The customer identifier or the ARN of your DB instance. ",
                        "type": "string"
                    }
                },
                "required": [
                    "DBInstanceIdentifier"
                ],
                "type": "object"
            },
            "DescribeValidDBInstanceModificationsResult": {
                "properties": {
                    "ValidDBInstanceModificationsMessage": {
                        "description": "Information about valid modifications that you can make to your DB instance. Contains the result of a successful call to the <a>DescribeValidDBInstanceModifications</a> action. You can use this information when you call <a>ModifyDBInstance</a>. ",
                        "properties": {
                            "Storage": {
                                "description": "Valid storage options for your DB instance. ",
                                "items": {
                                    "description": "Information about valid modifications that you can make to your DB instance. Contains the result of a successful call to the <a>DescribeValidDBInstanceModifications</a> action. ",
                                    "properties": {
                                        "IopsToStorageRatio": {
                                            "description": "The valid range of Provisioned IOPS to gibibytes of storage multiplier. For example, 3-10, which means that provisioned IOPS can be between 3 and 10 times storage. ",
                                            "items": {
                                                "description": "A range of double values.",
                                                "properties": {
                                                    "From": {
                                                        "description": "The minimum value in the range.",
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "To": {
                                                        "description": "The maximum value in the range.",
                                                        "format": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "ProvisionedIops": {
                                            "description": "The valid range of provisioned IOPS. For example, 1000-20000. ",
                                            "items": {
                                                "description": "A range of integer values.",
                                                "properties": {
                                                    "From": {
                                                        "description": "The minimum value in the range.",
                                                        "type": "integer"
                                                    },
                                                    "Step": {
                                                        "description": "The step value for the range. For example, if you have a range of 5,000 to 10,000, with a step value of 1,000, the valid values start at 5,000 and step up by 1,000. Even though 7,500 is within the range, it isn't a valid value for the range. The valid values are 5,000, 6,000, 7,000, 8,000... ",
                                                        "type": "integer"
                                                    },
                                                    "To": {
                                                        "description": "The maximum value in the range.",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "StorageSize": {
                                            "description": "The valid range of storage in gibibytes. For example, 100 to 16384. ",
                                            "items": {
                                                "description": "A range of integer values.",
                                                "properties": {
                                                    "From": {
                                                        "description": "The minimum value in the range.",
                                                        "type": "integer"
                                                    },
                                                    "Step": {
                                                        "description": "The step value for the range. For example, if you have a range of 5,000 to 10,000, with a step value of 1,000, the valid values start at 5,000 and step up by 1,000. Even though 7,500 is within the range, it isn't a valid value for the range. The valid values are 5,000, 6,000, 7,000, 8,000... ",
                                                        "type": "integer"
                                                    },
                                                    "To": {
                                                        "description": "The maximum value in the range.",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "StorageType": {
                                            "description": "The valid storage types for your DB instance. For example, gp2, io1. ",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DomainMembership": {
                "description": "An Active Directory Domain membership record associated with the DB instance.",
                "properties": {
                    "Domain": {
                        "description": "The identifier of the Active Directory Domain.",
                        "type": "string"
                    },
                    "FQDN": {
                        "description": "The fully qualified domain name of the Active Directory Domain.",
                        "type": "string"
                    },
                    "IAMRoleName": {
                        "description": "The name of the IAM role to be used when making API calls to the Directory Service.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of the DB instance's Active Directory Domain membership, such as joined, pending-join, failed etc).",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DomainMembershipList": {
                "description": "List of Active Directory Domain membership records associated with a DB instance.",
                "items": {
                    "description": "An Active Directory Domain membership record associated with the DB instance.",
                    "properties": {
                        "Domain": {
                            "description": "The identifier of the Active Directory Domain.",
                            "type": "string"
                        },
                        "FQDN": {
                            "description": "The fully qualified domain name of the Active Directory Domain.",
                            "type": "string"
                        },
                        "IAMRoleName": {
                            "description": "The name of the IAM role to be used when making API calls to the Directory Service.",
                            "type": "string"
                        },
                        "Status": {
                            "description": "The status of the DB instance's Active Directory Domain membership, such as joined, pending-join, failed etc).",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "DomainNotFoundFault": {
                "description": " <i>Domain</i> does not refer to an existing Active Directory Domain. ",
                "properties": {},
                "type": "object"
            },
            "Double": {
                "format": "double",
                "type": "number"
            },
            "DoubleOptional": {
                "format": "double",
                "type": "number"
            },
            "DoubleRange": {
                "description": "A range of double values.",
                "properties": {
                    "From": {
                        "description": "The minimum value in the range.",
                        "format": "double",
                        "type": "number"
                    },
                    "To": {
                        "description": "The maximum value in the range.",
                        "format": "double",
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "DoubleRangeList": {
                "items": {
                    "description": "A range of double values.",
                    "properties": {
                        "From": {
                            "description": "The minimum value in the range.",
                            "format": "double",
                            "type": "number"
                        },
                        "To": {
                            "description": "The maximum value in the range.",
                            "format": "double",
                            "type": "number"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "Endpoint": {
                "description": "<p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>CreateDBInstance</a> </p> </li> <li> <p> <a>DescribeDBInstances</a> </p> </li> <li> <p> <a>DeleteDBInstance</a> </p> </li> </ul>",
                "properties": {
                    "Address": {
                        "description": "Specifies the DNS address of the DB instance.",
                        "type": "string"
                    },
                    "HostedZoneId": {
                        "description": "Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.",
                        "type": "string"
                    },
                    "Port": {
                        "description": "Specifies the port that the database engine is listening on.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "EngineDefaults": {
                "description": " Contains the result of a successful invocation of the <a>DescribeEngineDefaultParameters</a> action. ",
                "properties": {
                    "DBParameterGroupFamily": {
                        "description": "Specifies the name of the DB parameter group family that the engine default parameters apply to.",
                        "type": "string"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous EngineDefaults request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> . ",
                        "type": "string"
                    },
                    "Parameters": {
                        "description": "Contains a list of engine default parameters.",
                        "items": {
                            "description": "<p> This data type is used as a request parameter in the <a>ModifyDBParameterGroup</a> and <a>ResetDBParameterGroup</a> actions. </p> <p>This data type is used as a response element in the <a>DescribeEngineDefaultParameters</a> and <a>DescribeDBParameters</a> actions.</p>",
                            "properties": {
                                "AllowedValues": {
                                    "description": "Specifies the valid range of values for the parameter.",
                                    "type": "string"
                                },
                                "ApplyMethod": {
                                    "description": "Indicates when to apply parameter updates.",
                                    "enum": [
                                        "immediate",
                                        "pending-reboot"
                                    ],
                                    "type": "string"
                                },
                                "ApplyType": {
                                    "description": "Specifies the engine specific parameters type.",
                                    "type": "string"
                                },
                                "DataType": {
                                    "description": "Specifies the valid data type for the parameter.",
                                    "type": "string"
                                },
                                "Description": {
                                    "description": "Provides a description of the parameter.",
                                    "type": "string"
                                },
                                "IsModifiable": {
                                    "description": " Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed. ",
                                    "type": "boolean"
                                },
                                "MinimumEngineVersion": {
                                    "description": "The earliest engine version to which the parameter can apply.",
                                    "type": "string"
                                },
                                "ParameterName": {
                                    "description": "Specifies the name of the parameter.",
                                    "type": "string"
                                },
                                "ParameterValue": {
                                    "description": "Specifies the value of the parameter.",
                                    "type": "string"
                                },
                                "Source": {
                                    "description": "Indicates the source of the parameter value.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Event": {
                "description": " This data type is used as a response element in the <a>DescribeEvents</a> action. ",
                "properties": {
                    "Date": {
                        "description": "Specifies the date and time of the event.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "EventCategories": {
                        "description": "Specifies the category for the event.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "Message": {
                        "description": "Provides the text of this event.",
                        "type": "string"
                    },
                    "SourceArn": {
                        "description": "The Amazon Resource Name (ARN) for the event.",
                        "type": "string"
                    },
                    "SourceIdentifier": {
                        "description": "Provides the identifier for the source of the event.",
                        "type": "string"
                    },
                    "SourceType": {
                        "description": "Specifies the source type for this event.",
                        "enum": [
                            "db-instance",
                            "db-parameter-group",
                            "db-security-group",
                            "db-snapshot",
                            "db-cluster",
                            "db-cluster-snapshot"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EventCategoriesList": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "EventCategoriesMap": {
                "description": "Contains the results of a successful invocation of the <a>DescribeEventCategories</a> action.",
                "properties": {
                    "EventCategories": {
                        "description": "The event categories for the specified source type",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "SourceType": {
                        "description": "The source type that the returned categories belong to",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EventCategoriesMapList": {
                "items": {
                    "description": "Contains the results of a successful invocation of the <a>DescribeEventCategories</a> action.",
                    "properties": {
                        "EventCategories": {
                            "description": "The event categories for the specified source type",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "SourceType": {
                            "description": "The source type that the returned categories belong to",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "EventCategoriesMessage": {
                "description": "Data returned from the <b>DescribeEventCategories</b> action.",
                "properties": {
                    "EventCategoriesMapList": {
                        "description": "A list of EventCategoriesMap data types.",
                        "items": {
                            "description": "Contains the results of a successful invocation of the <a>DescribeEventCategories</a> action.",
                            "properties": {
                                "EventCategories": {
                                    "description": "The event categories for the specified source type",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "SourceType": {
                                    "description": "The source type that the returned categories belong to",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "EventList": {
                "items": {
                    "description": " This data type is used as a response element in the <a>DescribeEvents</a> action. ",
                    "properties": {
                        "Date": {
                            "description": "Specifies the date and time of the event.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "EventCategories": {
                            "description": "Specifies the category for the event.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "Message": {
                            "description": "Provides the text of this event.",
                            "type": "string"
                        },
                        "SourceArn": {
                            "description": "The Amazon Resource Name (ARN) for the event.",
                            "type": "string"
                        },
                        "SourceIdentifier": {
                            "description": "Provides the identifier for the source of the event.",
                            "type": "string"
                        },
                        "SourceType": {
                            "description": "Specifies the source type for this event.",
                            "enum": [
                                "db-instance",
                                "db-parameter-group",
                                "db-security-group",
                                "db-snapshot",
                                "db-cluster",
                                "db-cluster-snapshot"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "EventSubscription": {
                "description": "Contains the results of a successful invocation of the <a>DescribeEventSubscriptions</a> action.",
                "properties": {
                    "CustSubscriptionId": {
                        "description": "The event notification subscription Id.",
                        "type": "string"
                    },
                    "CustomerAwsId": {
                        "description": "The AWS customer account associated with the event notification subscription.",
                        "type": "string"
                    },
                    "Enabled": {
                        "description": "A Boolean value indicating if the subscription is enabled. True indicates the subscription is enabled.",
                        "type": "boolean"
                    },
                    "EventCategoriesList": {
                        "description": "A list of event categories for the event notification subscription.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "EventSubscriptionArn": {
                        "description": "The Amazon Resource Name (ARN) for the event subscription.",
                        "type": "string"
                    },
                    "SnsTopicArn": {
                        "description": "The topic ARN of the event notification subscription.",
                        "type": "string"
                    },
                    "SourceIdsList": {
                        "description": "A list of source IDs for the event notification subscription.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "SourceType": {
                        "description": "The source type for the event notification subscription.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "<p>The status of the event notification subscription.</p> <p>Constraints:</p> <p>Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist</p> <p>The status \"no-permission\" indicates that Neptune no longer has permission to post to the SNS topic. The status \"topic-not-exist\" indicates that the topic was deleted after the subscription was created.</p>",
                        "type": "string"
                    },
                    "SubscriptionCreationTime": {
                        "description": "The time the event notification subscription was created.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EventSubscriptionQuotaExceededFault": {
                "properties": {},
                "type": "object"
            },
            "EventSubscriptionsList": {
                "items": {
                    "description": "Contains the results of a successful invocation of the <a>DescribeEventSubscriptions</a> action.",
                    "properties": {
                        "CustSubscriptionId": {
                            "description": "The event notification subscription Id.",
                            "type": "string"
                        },
                        "CustomerAwsId": {
                            "description": "The AWS customer account associated with the event notification subscription.",
                            "type": "string"
                        },
                        "Enabled": {
                            "description": "A Boolean value indicating if the subscription is enabled. True indicates the subscription is enabled.",
                            "type": "boolean"
                        },
                        "EventCategoriesList": {
                            "description": "A list of event categories for the event notification subscription.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "EventSubscriptionArn": {
                            "description": "The Amazon Resource Name (ARN) for the event subscription.",
                            "type": "string"
                        },
                        "SnsTopicArn": {
                            "description": "The topic ARN of the event notification subscription.",
                            "type": "string"
                        },
                        "SourceIdsList": {
                            "description": "A list of source IDs for the event notification subscription.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "SourceType": {
                            "description": "The source type for the event notification subscription.",
                            "type": "string"
                        },
                        "Status": {
                            "description": "<p>The status of the event notification subscription.</p> <p>Constraints:</p> <p>Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist</p> <p>The status \"no-permission\" indicates that Neptune no longer has permission to post to the SNS topic. The status \"topic-not-exist\" indicates that the topic was deleted after the subscription was created.</p>",
                            "type": "string"
                        },
                        "SubscriptionCreationTime": {
                            "description": "The time the event notification subscription was created.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "EventSubscriptionsMessage": {
                "description": "Data returned by the <b>DescribeEventSubscriptions</b> action.",
                "properties": {
                    "EventSubscriptionsList": {
                        "description": "A list of EventSubscriptions data types.",
                        "items": {
                            "description": "Contains the results of a successful invocation of the <a>DescribeEventSubscriptions</a> action.",
                            "properties": {
                                "CustSubscriptionId": {
                                    "description": "The event notification subscription Id.",
                                    "type": "string"
                                },
                                "CustomerAwsId": {
                                    "description": "The AWS customer account associated with the event notification subscription.",
                                    "type": "string"
                                },
                                "Enabled": {
                                    "description": "A Boolean value indicating if the subscription is enabled. True indicates the subscription is enabled.",
                                    "type": "boolean"
                                },
                                "EventCategoriesList": {
                                    "description": "A list of event categories for the event notification subscription.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "EventSubscriptionArn": {
                                    "description": "The Amazon Resource Name (ARN) for the event subscription.",
                                    "type": "string"
                                },
                                "SnsTopicArn": {
                                    "description": "The topic ARN of the event notification subscription.",
                                    "type": "string"
                                },
                                "SourceIdsList": {
                                    "description": "A list of source IDs for the event notification subscription.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "SourceType": {
                                    "description": "The source type for the event notification subscription.",
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "<p>The status of the event notification subscription.</p> <p>Constraints:</p> <p>Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist</p> <p>The status \"no-permission\" indicates that Neptune no longer has permission to post to the SNS topic. The status \"topic-not-exist\" indicates that the topic was deleted after the subscription was created.</p>",
                                    "type": "string"
                                },
                                "SubscriptionCreationTime": {
                                    "description": "The time the event notification subscription was created.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous DescribeOrderableDBInstanceOptions request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EventsMessage": {
                "description": " Contains the result of a successful invocation of the <a>DescribeEvents</a> action. ",
                "properties": {
                    "Events": {
                        "description": " A list of <a>Event</a> instances. ",
                        "items": {
                            "description": " This data type is used as a response element in the <a>DescribeEvents</a> action. ",
                            "properties": {
                                "Date": {
                                    "description": "Specifies the date and time of the event.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "EventCategories": {
                                    "description": "Specifies the category for the event.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "Message": {
                                    "description": "Provides the text of this event.",
                                    "type": "string"
                                },
                                "SourceArn": {
                                    "description": "The Amazon Resource Name (ARN) for the event.",
                                    "type": "string"
                                },
                                "SourceIdentifier": {
                                    "description": "Provides the identifier for the source of the event.",
                                    "type": "string"
                                },
                                "SourceType": {
                                    "description": "Specifies the source type for this event.",
                                    "enum": [
                                        "db-instance",
                                        "db-parameter-group",
                                        "db-security-group",
                                        "db-snapshot",
                                        "db-cluster",
                                        "db-cluster-snapshot"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": " An optional pagination token provided by a previous Events request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> . ",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "FailoverDBClusterMessage": {
                "description": "<p/>",
                "properties": {
                    "DBClusterIdentifier": {
                        "description": "<p>A DB cluster identifier to force a failover for. This parameter is not case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBCluster.</p> </li> </ul>",
                        "type": "string"
                    },
                    "TargetDBInstanceIdentifier": {
                        "description": "<p>The name of the instance to promote to the primary instance.</p> <p>You must specify the instance identifier for an Read Replica in the DB cluster. For example, <code>mydbcluster-replica1</code>.</p>",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "FailoverDBClusterResult": {
                "properties": {
                    "DBCluster": {
                        "description": "<p>Contains the details of an Amazon Neptune DB cluster. </p> <p>This data type is used as a response element in the <a>DescribeDBClusters</a> action. </p>",
                        "properties": {
                            "AllocatedStorage": {
                                "description": " <code>AllocatedStorage</code> always returns 1, because Neptune DB cluster storage size is not fixed, but instead automatically adjusts as needed.",
                                "type": "integer"
                            },
                            "AssociatedRoles": {
                                "description": "Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.",
                                "items": {
                                    "description": "Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.",
                                    "properties": {
                                        "RoleArn": {
                                            "description": "The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "<p>Describes the state of association between the IAM role and the DB cluster. The Status property returns one of the following values:</p> <ul> <li> <p> <code>ACTIVE</code> - the IAM role ARN is associated with the DB cluster and can be used to access other AWS services on your behalf.</p> </li> <li> <p> <code>PENDING</code> - the IAM role ARN is being associated with the DB cluster.</p> </li> <li> <p> <code>INVALID</code> - the IAM role ARN is associated with the DB cluster, but the DB cluster is unable to assume the IAM role in order to access other AWS services on your behalf.</p> </li> </ul>",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "AvailabilityZones": {
                                "description": "Provides the list of EC2 Availability Zones that instances in the DB cluster can be created in.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "BackupRetentionPeriod": {
                                "description": "Specifies the number of days for which automatic DB snapshots are retained.",
                                "type": "integer"
                            },
                            "CharacterSetName": {
                                "description": "If present, specifies the name of the character set that this cluster is associated with.",
                                "type": "string"
                            },
                            "CloneGroupId": {
                                "description": "Identifies the clone group to which the DB cluster is associated.",
                                "type": "string"
                            },
                            "ClusterCreateTime": {
                                "description": "Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).",
                                "format": "date-time",
                                "type": "string"
                            },
                            "DBClusterArn": {
                                "description": "The Amazon Resource Name (ARN) for the DB cluster.",
                                "type": "string"
                            },
                            "DBClusterIdentifier": {
                                "description": "Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.",
                                "type": "string"
                            },
                            "DBClusterMembers": {
                                "description": "Provides the list of instances that make up the DB cluster.",
                                "items": {
                                    "description": "Contains information about an instance that is part of a DB cluster.",
                                    "properties": {
                                        "DBClusterParameterGroupStatus": {
                                            "description": "Specifies the status of the DB cluster parameter group for this member of the DB cluster.",
                                            "type": "string"
                                        },
                                        "DBInstanceIdentifier": {
                                            "description": "Specifies the instance identifier for this member of the DB cluster.",
                                            "type": "string"
                                        },
                                        "IsClusterWriter": {
                                            "description": "Value that is <code>true</code> if the cluster member is the primary instance for the DB cluster and <code>false</code> otherwise.",
                                            "type": "boolean"
                                        },
                                        "PromotionTier": {
                                            "description": "A value that specifies the order in which a Read Replica is promoted to the primary instance after a failure of the existing primary instance. ",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "DBClusterOptionGroupMemberships": {
                                "description": "Provides the list of option group memberships for this DB cluster.",
                                "items": {
                                    "description": "Contains status information for a DB cluster option group.",
                                    "properties": {
                                        "DBClusterOptionGroupName": {
                                            "description": "Specifies the name of the DB cluster option group.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "Specifies the status of the DB cluster option group.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "DBClusterParameterGroup": {
                                "description": "Specifies the name of the DB cluster parameter group for the DB cluster.",
                                "type": "string"
                            },
                            "DBSubnetGroup": {
                                "description": "Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group.",
                                "type": "string"
                            },
                            "DatabaseName": {
                                "description": "Contains the name of the initial database of this DB cluster that was provided at create time, if one was specified when the DB cluster was created. This same name is returned for the life of the DB cluster.",
                                "type": "string"
                            },
                            "DbClusterResourceId": {
                                "description": "The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.",
                                "type": "string"
                            },
                            "EarliestRestorableTime": {
                                "description": "Specifies the earliest time to which a database can be restored with point-in-time restore.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "Endpoint": {
                                "description": "Specifies the connection endpoint for the primary instance of the DB cluster.",
                                "type": "string"
                            },
                            "Engine": {
                                "description": "Provides the name of the database engine to be used for this DB cluster.",
                                "type": "string"
                            },
                            "EngineVersion": {
                                "description": "Indicates the database engine version.",
                                "type": "string"
                            },
                            "HostedZoneId": {
                                "description": "Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.",
                                "type": "string"
                            },
                            "IAMDatabaseAuthenticationEnabled": {
                                "description": "True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.",
                                "type": "boolean"
                            },
                            "KmsKeyId": {
                                "description": "If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB cluster.",
                                "type": "string"
                            },
                            "LatestRestorableTime": {
                                "description": "Specifies the latest time to which a database can be restored with point-in-time restore.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "MasterUsername": {
                                "description": "Contains the master username for the DB cluster.",
                                "type": "string"
                            },
                            "MultiAZ": {
                                "description": "Specifies whether the DB cluster has instances in multiple Availability Zones.",
                                "type": "boolean"
                            },
                            "PercentProgress": {
                                "description": "Specifies the progress of the operation as a percentage.",
                                "type": "string"
                            },
                            "Port": {
                                "description": "Specifies the port that the database engine is listening on.",
                                "type": "integer"
                            },
                            "PreferredBackupWindow": {
                                "description": "Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. ",
                                "type": "string"
                            },
                            "PreferredMaintenanceWindow": {
                                "description": "Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
                                "type": "string"
                            },
                            "ReadReplicaIdentifiers": {
                                "description": "Contains one or more identifiers of the Read Replicas associated with this DB cluster.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "ReaderEndpoint": {
                                "description": "<p>The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances connections across the Read Replicas that are available in a DB cluster. As clients request new connections to the reader endpoint, Neptune distributes the connection requests among the Read Replicas in the DB cluster. This functionality can help balance your read workload across multiple Read Replicas in your DB cluster. </p> <p>If a failover occurs, and the Read Replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Read Replicas in the cluster, you can then reconnect to the reader endpoint.</p>",
                                "type": "string"
                            },
                            "ReplicationSourceIdentifier": {
                                "description": "Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.",
                                "type": "string"
                            },
                            "Status": {
                                "description": "Specifies the current state of this DB cluster.",
                                "type": "string"
                            },
                            "StorageEncrypted": {
                                "description": "Specifies whether the DB cluster is encrypted.",
                                "type": "boolean"
                            },
                            "VpcSecurityGroups": {
                                "description": "Provides a list of VPC security groups that the DB cluster belongs to.",
                                "items": {
                                    "description": "This data type is used as a response element for queries on VPC security group membership.",
                                    "properties": {
                                        "Status": {
                                            "description": "The status of the VPC security group.",
                                            "type": "string"
                                        },
                                        "VpcSecurityGroupId": {
                                            "description": "The name of the VPC security group.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Filter": {
                "description": "This type is not currently supported.",
                "properties": {
                    "Name": {
                        "description": "This parameter is not currently supported.",
                        "type": "string"
                    },
                    "Values": {
                        "description": "This parameter is not currently supported.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Name",
                    "Values"
                ],
                "type": "object"
            },
            "FilterList": {
                "items": {
                    "description": "This type is not currently supported.",
                    "properties": {
                        "Name": {
                            "description": "This parameter is not currently supported.",
                            "type": "string"
                        },
                        "Values": {
                            "description": "This parameter is not currently supported.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "Name",
                        "Values"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "FilterValueList": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "InstanceQuotaExceededFault": {
                "description": "Request would result in user exceeding the allowed number of DB instances.",
                "properties": {},
                "type": "object"
            },
            "InsufficientDBClusterCapacityFault": {
                "description": "The DB cluster does not have enough capacity for the current operation.",
                "properties": {},
                "type": "object"
            },
            "InsufficientDBInstanceCapacityFault": {
                "description": "Specified DB instance class is not available in the specified Availability Zone.",
                "properties": {},
                "type": "object"
            },
            "InsufficientStorageClusterCapacityFault": {
                "description": "There is insufficient storage available for the current action. You may be able to resolve this error by updating your subnet group to use different Availability Zones that have more storage available.",
                "properties": {},
                "type": "object"
            },
            "Integer": {
                "type": "integer"
            },
            "IntegerOptional": {
                "type": "integer"
            },
            "InvalidDBClusterSnapshotStateFault": {
                "description": "The supplied value is not a valid DB cluster snapshot state.",
                "properties": {},
                "type": "object"
            },
            "InvalidDBClusterStateFault": {
                "description": "The DB cluster is not in a valid state.",
                "properties": {},
                "type": "object"
            },
            "InvalidDBInstanceStateFault": {
                "description": " The specified DB instance is not in the <i>available</i> state. ",
                "properties": {},
                "type": "object"
            },
            "InvalidDBParameterGroupStateFault": {
                "description": "The DB parameter group is in use or is in an invalid state. If you are attempting to delete the parameter group, you cannot delete it when the parameter group is in this state.",
                "properties": {},
                "type": "object"
            },
            "InvalidDBSecurityGroupStateFault": {
                "description": "The state of the DB security group does not allow deletion.",
                "properties": {},
                "type": "object"
            },
            "InvalidDBSnapshotStateFault": {
                "description": "The state of the DB snapshot does not allow deletion.",
                "properties": {},
                "type": "object"
            },
            "InvalidDBSubnetGroupStateFault": {
                "description": "The DB subnet group cannot be deleted because it is in use.",
                "properties": {},
                "type": "object"
            },
            "InvalidDBSubnetStateFault": {
                "description": " The DB subnet is not in the <i>available</i> state. ",
                "properties": {},
                "type": "object"
            },
            "InvalidEventSubscriptionStateFault": {
                "properties": {},
                "type": "object"
            },
            "InvalidRestoreFault": {
                "description": "Cannot restore from vpc backup to non-vpc DB instance.",
                "properties": {},
                "type": "object"
            },
            "InvalidSubnet": {
                "description": "The requested subnet is invalid, or multiple subnets were requested that are not all in a common VPC.",
                "properties": {},
                "type": "object"
            },
            "InvalidVPCNetworkStateFault": {
                "description": "DB subnet group does not cover all Availability Zones after it is created because users' change.",
                "properties": {},
                "type": "object"
            },
            "KMSKeyNotAccessibleFault": {
                "description": "Error accessing KMS key.",
                "properties": {},
                "type": "object"
            },
            "KeyList": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "ListTagsForResourceMessage": {
                "description": "<p/>",
                "properties": {
                    "Filters": {
                        "description": "This parameter is not currently supported.",
                        "items": {
                            "description": "This type is not currently supported.",
                            "properties": {
                                "Name": {
                                    "description": "This parameter is not currently supported.",
                                    "type": "string"
                                },
                                "Values": {
                                    "description": "This parameter is not currently supported.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "Name",
                                "Values"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "ResourceName": {
                        "description": "The Amazon Neptune resource with tags to be listed. This value is an Amazon Resource Name (ARN). For information about creating an ARN, see <a href=\"http://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing\"> Constructing an Amazon Resource Name (ARN)</a>.",
                        "type": "string"
                    }
                },
                "required": [
                    "ResourceName"
                ],
                "type": "object"
            },
            "LogTypeList": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "ModifyDBClusterMessage": {
                "description": "<p/>",
                "properties": {
                    "ApplyImmediately": {
                        "description": "<p>A value that specifies whether the modifications in this request and any pending modifications are asynchronously applied as soon as possible, regardless of the <code>PreferredMaintenanceWindow</code> setting for the DB cluster. If this parameter is set to <code>false</code>, changes to the DB cluster are applied during the next maintenance window.</p> <p>The <code>ApplyImmediately</code> parameter only affects the <code>NewDBClusterIdentifier</code> and <code>MasterUserPassword</code> values. If you set the <code>ApplyImmediately</code> parameter value to false, then changes to the <code>NewDBClusterIdentifier</code> and <code>MasterUserPassword</code> values are applied during the next maintenance window. All other changes are applied immediately, regardless of the value of the <code>ApplyImmediately</code> parameter.</p> <p>Default: <code>false</code> </p>",
                        "type": "boolean"
                    },
                    "BackupRetentionPeriod": {
                        "description": "<p>The number of days for which automated backups are retained. You must specify a minimum value of 1.</p> <p>Default: 1</p> <p>Constraints:</p> <ul> <li> <p>Must be a value from 1 to 35</p> </li> </ul>",
                        "type": "integer"
                    },
                    "DBClusterIdentifier": {
                        "description": "<p>The DB cluster identifier for the cluster being modified. This parameter is not case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBCluster.</p> </li> </ul>",
                        "type": "string"
                    },
                    "DBClusterParameterGroupName": {
                        "description": "The name of the DB cluster parameter group to use for the DB cluster.",
                        "type": "string"
                    },
                    "EnableIAMDatabaseAuthentication": {
                        "description": "<p>True to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts, and otherwise false.</p> <p>Default: <code>false</code> </p>",
                        "type": "boolean"
                    },
                    "EngineVersion": {
                        "description": "<p>The version number of the database engine to which you want to upgrade. Changing this parameter results in an outage. The change is applied during the next maintenance window unless the ApplyImmediately parameter is set to true.</p> <p>For a list of valid engine versions, see <a>CreateDBInstance</a>, or call <a>DescribeDBEngineVersions</a>.</p>",
                        "type": "string"
                    },
                    "MasterUserPassword": {
                        "description": "<p>The new password for the master database user. This password can contain any printable ASCII character except \"/\", \"\"\", or \"@\".</p> <p>Constraints: Must contain from 8 to 41 characters.</p>",
                        "type": "string"
                    },
                    "NewDBClusterIdentifier": {
                        "description": "<p>The new DB cluster identifier for the DB cluster when renaming a DB cluster. This value is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens</p> </li> <li> <p>The first character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-cluster2</code> </p>",
                        "type": "string"
                    },
                    "OptionGroupName": {
                        "description": "<p>A value that indicates that the DB cluster should be associated with the specified option group. Changing this parameter doesn't result in an outage except in the following case, and the change is applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is set to <code>true</code> for this request. If the parameter change results in an option group that enables OEM, this change can cause a brief (sub-second) period during which new connections are rejected but existing connections are not interrupted. </p> <p>Permanent options can't be removed from an option group. The option group can't be removed from a DB cluster once it is associated with a DB cluster.</p>",
                        "type": "string"
                    },
                    "Port": {
                        "description": "<p>The port number on which the DB cluster accepts connections.</p> <p>Constraints: Value must be <code>1150-65535</code> </p> <p>Default: The same port as the original DB cluster.</p>",
                        "type": "integer"
                    },
                    "PreferredBackupWindow": {
                        "description": "<p>The daily time range during which automated backups are created if automated backups are enabled, using the <code>BackupRetentionPeriod</code> parameter. </p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region. </p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred maintenance window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul>",
                        "type": "string"
                    },
                    "PreferredMaintenanceWindow": {
                        "description": "<p>The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).</p> <p>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region, occurring on a random day of the week. </p> <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</p> <p>Constraints: Minimum 30-minute window.</p>",
                        "type": "string"
                    },
                    "VpcSecurityGroupIds": {
                        "description": "A list of VPC security groups that the DB cluster will belong to.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "DBClusterIdentifier"
                ],
                "type": "object"
            },
            "ModifyDBClusterParameterGroupMessage": {
                "description": "<p/>",
                "properties": {
                    "DBClusterParameterGroupName": {
                        "description": "The name of the DB cluster parameter group to modify.",
                        "type": "string"
                    },
                    "Parameters": {
                        "description": "A list of parameters in the DB cluster parameter group to modify.",
                        "items": {
                            "description": "<p> This data type is used as a request parameter in the <a>ModifyDBParameterGroup</a> and <a>ResetDBParameterGroup</a> actions. </p> <p>This data type is used as a response element in the <a>DescribeEngineDefaultParameters</a> and <a>DescribeDBParameters</a> actions.</p>",
                            "properties": {
                                "AllowedValues": {
                                    "description": "Specifies the valid range of values for the parameter.",
                                    "type": "string"
                                },
                                "ApplyMethod": {
                                    "description": "Indicates when to apply parameter updates.",
                                    "enum": [
                                        "immediate",
                                        "pending-reboot"
                                    ],
                                    "type": "string"
                                },
                                "ApplyType": {
                                    "description": "Specifies the engine specific parameters type.",
                                    "type": "string"
                                },
                                "DataType": {
                                    "description": "Specifies the valid data type for the parameter.",
                                    "type": "string"
                                },
                                "Description": {
                                    "description": "Provides a description of the parameter.",
                                    "type": "string"
                                },
                                "IsModifiable": {
                                    "description": " Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed. ",
                                    "type": "boolean"
                                },
                                "MinimumEngineVersion": {
                                    "description": "The earliest engine version to which the parameter can apply.",
                                    "type": "string"
                                },
                                "ParameterName": {
                                    "description": "Specifies the name of the parameter.",
                                    "type": "string"
                                },
                                "ParameterValue": {
                                    "description": "Specifies the value of the parameter.",
                                    "type": "string"
                                },
                                "Source": {
                                    "description": "Indicates the source of the parameter value.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "DBClusterParameterGroupName",
                    "Parameters"
                ],
                "type": "object"
            },
            "ModifyDBClusterResult": {
                "properties": {
                    "DBCluster": {
                        "description": "<p>Contains the details of an Amazon Neptune DB cluster. </p> <p>This data type is used as a response element in the <a>DescribeDBClusters</a> action. </p>",
                        "properties": {
                            "AllocatedStorage": {
                                "description": " <code>AllocatedStorage</code> always returns 1, because Neptune DB cluster storage size is not fixed, but instead automatically adjusts as needed.",
                                "type": "integer"
                            },
                            "AssociatedRoles": {
                                "description": "Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.",
                                "items": {
                                    "description": "Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.",
                                    "properties": {
                                        "RoleArn": {
                                            "description": "The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "<p>Describes the state of association between the IAM role and the DB cluster. The Status property returns one of the following values:</p> <ul> <li> <p> <code>ACTIVE</code> - the IAM role ARN is associated with the DB cluster and can be used to access other AWS services on your behalf.</p> </li> <li> <p> <code>PENDING</code> - the IAM role ARN is being associated with the DB cluster.</p> </li> <li> <p> <code>INVALID</code> - the IAM role ARN is associated with the DB cluster, but the DB cluster is unable to assume the IAM role in order to access other AWS services on your behalf.</p> </li> </ul>",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "AvailabilityZones": {
                                "description": "Provides the list of EC2 Availability Zones that instances in the DB cluster can be created in.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "BackupRetentionPeriod": {
                                "description": "Specifies the number of days for which automatic DB snapshots are retained.",
                                "type": "integer"
                            },
                            "CharacterSetName": {
                                "description": "If present, specifies the name of the character set that this cluster is associated with.",
                                "type": "string"
                            },
                            "CloneGroupId": {
                                "description": "Identifies the clone group to which the DB cluster is associated.",
                                "type": "string"
                            },
                            "ClusterCreateTime": {
                                "description": "Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).",
                                "format": "date-time",
                                "type": "string"
                            },
                            "DBClusterArn": {
                                "description": "The Amazon Resource Name (ARN) for the DB cluster.",
                                "type": "string"
                            },
                            "DBClusterIdentifier": {
                                "description": "Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.",
                                "type": "string"
                            },
                            "DBClusterMembers": {
                                "description": "Provides the list of instances that make up the DB cluster.",
                                "items": {
                                    "description": "Contains information about an instance that is part of a DB cluster.",
                                    "properties": {
                                        "DBClusterParameterGroupStatus": {
                                            "description": "Specifies the status of the DB cluster parameter group for this member of the DB cluster.",
                                            "type": "string"
                                        },
                                        "DBInstanceIdentifier": {
                                            "description": "Specifies the instance identifier for this member of the DB cluster.",
                                            "type": "string"
                                        },
                                        "IsClusterWriter": {
                                            "description": "Value that is <code>true</code> if the cluster member is the primary instance for the DB cluster and <code>false</code> otherwise.",
                                            "type": "boolean"
                                        },
                                        "PromotionTier": {
                                            "description": "A value that specifies the order in which a Read Replica is promoted to the primary instance after a failure of the existing primary instance. ",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "DBClusterOptionGroupMemberships": {
                                "description": "Provides the list of option group memberships for this DB cluster.",
                                "items": {
                                    "description": "Contains status information for a DB cluster option group.",
                                    "properties": {
                                        "DBClusterOptionGroupName": {
                                            "description": "Specifies the name of the DB cluster option group.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "Specifies the status of the DB cluster option group.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "DBClusterParameterGroup": {
                                "description": "Specifies the name of the DB cluster parameter group for the DB cluster.",
                                "type": "string"
                            },
                            "DBSubnetGroup": {
                                "description": "Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group.",
                                "type": "string"
                            },
                            "DatabaseName": {
                                "description": "Contains the name of the initial database of this DB cluster that was provided at create time, if one was specified when the DB cluster was created. This same name is returned for the life of the DB cluster.",
                                "type": "string"
                            },
                            "DbClusterResourceId": {
                                "description": "The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.",
                                "type": "string"
                            },
                            "EarliestRestorableTime": {
                                "description": "Specifies the earliest time to which a database can be restored with point-in-time restore.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "Endpoint": {
                                "description": "Specifies the connection endpoint for the primary instance of the DB cluster.",
                                "type": "string"
                            },
                            "Engine": {
                                "description": "Provides the name of the database engine to be used for this DB cluster.",
                                "type": "string"
                            },
                            "EngineVersion": {
                                "description": "Indicates the database engine version.",
                                "type": "string"
                            },
                            "HostedZoneId": {
                                "description": "Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.",
                                "type": "string"
                            },
                            "IAMDatabaseAuthenticationEnabled": {
                                "description": "True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.",
                                "type": "boolean"
                            },
                            "KmsKeyId": {
                                "description": "If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB cluster.",
                                "type": "string"
                            },
                            "LatestRestorableTime": {
                                "description": "Specifies the latest time to which a database can be restored with point-in-time restore.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "MasterUsername": {
                                "description": "Contains the master username for the DB cluster.",
                                "type": "string"
                            },
                            "MultiAZ": {
                                "description": "Specifies whether the DB cluster has instances in multiple Availability Zones.",
                                "type": "boolean"
                            },
                            "PercentProgress": {
                                "description": "Specifies the progress of the operation as a percentage.",
                                "type": "string"
                            },
                            "Port": {
                                "description": "Specifies the port that the database engine is listening on.",
                                "type": "integer"
                            },
                            "PreferredBackupWindow": {
                                "description": "Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. ",
                                "type": "string"
                            },
                            "PreferredMaintenanceWindow": {
                                "description": "Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
                                "type": "string"
                            },
                            "ReadReplicaIdentifiers": {
                                "description": "Contains one or more identifiers of the Read Replicas associated with this DB cluster.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "ReaderEndpoint": {
                                "description": "<p>The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances connections across the Read Replicas that are available in a DB cluster. As clients request new connections to the reader endpoint, Neptune distributes the connection requests among the Read Replicas in the DB cluster. This functionality can help balance your read workload across multiple Read Replicas in your DB cluster. </p> <p>If a failover occurs, and the Read Replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Read Replicas in the cluster, you can then reconnect to the reader endpoint.</p>",
                                "type": "string"
                            },
                            "ReplicationSourceIdentifier": {
                                "description": "Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.",
                                "type": "string"
                            },
                            "Status": {
                                "description": "Specifies the current state of this DB cluster.",
                                "type": "string"
                            },
                            "StorageEncrypted": {
                                "description": "Specifies whether the DB cluster is encrypted.",
                                "type": "boolean"
                            },
                            "VpcSecurityGroups": {
                                "description": "Provides a list of VPC security groups that the DB cluster belongs to.",
                                "items": {
                                    "description": "This data type is used as a response element for queries on VPC security group membership.",
                                    "properties": {
                                        "Status": {
                                            "description": "The status of the VPC security group.",
                                            "type": "string"
                                        },
                                        "VpcSecurityGroupId": {
                                            "description": "The name of the VPC security group.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ModifyDBClusterSnapshotAttributeMessage": {
                "description": "<p/>",
                "properties": {
                    "AttributeName": {
                        "description": "<p>The name of the DB cluster snapshot attribute to modify.</p> <p>To manage authorization for other AWS accounts to copy or restore a manual DB cluster snapshot, set this value to <code>restore</code>.</p>",
                        "type": "string"
                    },
                    "DBClusterSnapshotIdentifier": {
                        "description": "The identifier for the DB cluster snapshot to modify the attributes for.",
                        "type": "string"
                    },
                    "ValuesToAdd": {
                        "description": "<p>A list of DB cluster snapshot attributes to add to the attribute specified by <code>AttributeName</code>.</p> <p>To authorize other AWS accounts to copy or restore a manual DB cluster snapshot, set this list to include one or more AWS account IDs, or <code>all</code> to make the manual DB cluster snapshot restorable by any AWS account. Do not add the <code>all</code> value for any manual DB cluster snapshots that contain private information that you don't want available to all AWS accounts.</p>",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "ValuesToRemove": {
                        "description": "<p>A list of DB cluster snapshot attributes to remove from the attribute specified by <code>AttributeName</code>.</p> <p>To remove authorization for other AWS accounts to copy or restore a manual DB cluster snapshot, set this list to include one or more AWS account identifiers, or <code>all</code> to remove authorization for any AWS account to copy or restore the DB cluster snapshot. If you specify <code>all</code>, an AWS account whose account ID is explicitly added to the <code>restore</code> attribute can still copy or restore a manual DB cluster snapshot.</p>",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "DBClusterSnapshotIdentifier",
                    "AttributeName"
                ],
                "type": "object"
            },
            "ModifyDBClusterSnapshotAttributeResult": {
                "properties": {
                    "DBClusterSnapshotAttributesResult": {
                        "description": "<p>Contains the results of a successful call to the <a>DescribeDBClusterSnapshotAttributes</a> API action.</p> <p>Manual DB cluster snapshot attributes are used to authorize other AWS accounts to copy or restore a manual DB cluster snapshot. For more information, see the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>",
                        "properties": {
                            "DBClusterSnapshotAttributes": {
                                "description": "The list of attributes and values for the manual DB cluster snapshot.",
                                "items": {
                                    "description": "<p>Contains the name and values of a manual DB cluster snapshot attribute.</p> <p>Manual DB cluster snapshot attributes are used to authorize other AWS accounts to restore a manual DB cluster snapshot. For more information, see the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>",
                                    "properties": {
                                        "AttributeName": {
                                            "description": "<p>The name of the manual DB cluster snapshot attribute.</p> <p>The attribute named <code>restore</code> refers to the list of AWS accounts that have permission to copy or restore the manual DB cluster snapshot. For more information, see the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>",
                                            "type": "string"
                                        },
                                        "AttributeValues": {
                                            "description": "<p>The value(s) for the manual DB cluster snapshot attribute.</p> <p>If the <code>AttributeName</code> field is set to <code>restore</code>, then this element returns a list of IDs of the AWS accounts that are authorized to copy or restore the manual DB cluster snapshot. If a value of <code>all</code> is in the list, then the manual DB cluster snapshot is public and available for any AWS account to copy or restore.</p>",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "DBClusterSnapshotIdentifier": {
                                "description": "The identifier of the manual DB cluster snapshot that the attributes apply to.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ModifyDBInstanceMessage": {
                "description": "<p/>",
                "properties": {
                    "AllocatedStorage": {
                        "description": "<p>The new amount of storage (in gibibytes) to allocate for the DB instance. </p> <p>Not applicable. Storage is managed by the DB Cluster.</p>",
                        "type": "integer"
                    },
                    "AllowMajorVersionUpgrade": {
                        "description": "<p>Indicates that major version upgrades are allowed. Changing this parameter doesn't result in an outage and the change is asynchronously applied as soon as possible.</p> <p>Constraints: This parameter must be set to true when specifying a value for the EngineVersion parameter that is a different major version than the DB instance's current version.</p>",
                        "type": "boolean"
                    },
                    "ApplyImmediately": {
                        "description": "<p>Specifies whether the modifications in this request and any pending modifications are asynchronously applied as soon as possible, regardless of the <code>PreferredMaintenanceWindow</code> setting for the DB instance. </p> <p> If this parameter is set to <code>false</code>, changes to the DB instance are applied during the next maintenance window. Some parameter changes can cause an outage and are applied on the next call to <a>RebootDBInstance</a>, or the next failure reboot. </p> <p>Default: <code>false</code> </p>",
                        "type": "boolean"
                    },
                    "AutoMinorVersionUpgrade": {
                        "description": " Indicates that minor version upgrades are applied automatically to the DB instance during the maintenance window. Changing this parameter doesn't result in an outage except in the following case and the change is asynchronously applied as soon as possible. An outage will result if this parameter is set to <code>true</code> during the maintenance window, and a newer minor version is available, and Neptune has enabled auto patching for that engine version. ",
                        "type": "boolean"
                    },
                    "BackupRetentionPeriod": {
                        "description": "<p>The number of days to retain automated backups. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups.</p> <p>Not applicable. The retention period for automated backups is managed by the DB cluster. For more information, see <a>ModifyDBCluster</a>.</p> <p>Default: Uses existing setting</p>",
                        "type": "integer"
                    },
                    "CACertificateIdentifier": {
                        "description": "Indicates the certificate that needs to be associated with the instance.",
                        "type": "string"
                    },
                    "CloudwatchLogsExportConfiguration": {
                        "description": "The configuration setting for the log types to be enabled for export to CloudWatch Logs for a specific DB instance or DB cluster.",
                        "properties": {
                            "DisableLogTypes": {
                                "description": "The list of log types to disable.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "EnableLogTypes": {
                                "description": "The list of log types to enable.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    "CopyTagsToSnapshot": {
                        "description": "True to copy all tags from the DB instance to snapshots of the DB instance, and otherwise false. The default is false.",
                        "type": "boolean"
                    },
                    "DBInstanceClass": {
                        "description": "<p>The new compute and memory capacity of the DB instance, for example, <code>db.m4.large</code>. Not all DB instance classes are available in all AWS Regions. </p> <p>If you modify the DB instance class, an outage occurs during the change. The change is applied during the next maintenance window, unless <code>ApplyImmediately</code> is specified as <code>true</code> for this request. </p> <p>Default: Uses existing setting</p>",
                        "type": "string"
                    },
                    "DBInstanceIdentifier": {
                        "description": "<p>The DB instance identifier. This value is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBInstance.</p> </li> </ul>",
                        "type": "string"
                    },
                    "DBParameterGroupName": {
                        "description": "<p>The name of the DB parameter group to apply to the DB instance. Changing this setting doesn't result in an outage. The parameter group name itself is changed immediately, but the actual parameter changes are not applied until you reboot the instance without failover. The db instance will NOT be rebooted automatically and the parameter changes will NOT be applied during the next maintenance window.</p> <p>Default: Uses existing setting</p> <p>Constraints: The DB parameter group must be in the same DB parameter group family as this DB instance.</p>",
                        "type": "string"
                    },
                    "DBPortNumber": {
                        "description": "<p>The port number on which the database accepts connections.</p> <p>The value of the <code>DBPortNumber</code> parameter must not match any of the port values specified for options in the option group for the DB instance.</p> <p>Your database will restart when you change the <code>DBPortNumber</code> value regardless of the value of the <code>ApplyImmediately</code> parameter.</p> <p> Default: <code>8182</code> </p>",
                        "type": "integer"
                    },
                    "DBSecurityGroups": {
                        "description": "<p>A list of DB security groups to authorize on this DB instance. Changing this setting doesn't result in an outage and the change is asynchronously applied as soon as possible.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match existing DBSecurityGroups.</p> </li> </ul>",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "DBSubnetGroupName": {
                        "description": "<p>The new DB subnet group for the DB instance. You can use this parameter to move your DB instance to a different VPC. </p> <p>Changing the subnet group causes an outage during the change. The change is applied during the next maintenance window, unless you specify <code>true</code> for the <code>ApplyImmediately</code> parameter. </p> <p>Constraints: If supplied, must match the name of an existing DBSubnetGroup.</p> <p>Example: <code>mySubnetGroup</code> </p>",
                        "type": "string"
                    },
                    "Domain": {
                        "description": "Not supported. ",
                        "type": "string"
                    },
                    "DomainIAMRoleName": {
                        "description": "Not supported",
                        "type": "string"
                    },
                    "EnableIAMDatabaseAuthentication": {
                        "description": "<p>True to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts, and otherwise false.</p> <p>You can enable IAM database authentication for the following database engines</p> <p>Not applicable. Mapping AWS IAM accounts to database accounts is managed by the DB cluster. For more information, see <a>ModifyDBCluster</a>.</p> <p>Default: <code>false</code> </p>",
                        "type": "boolean"
                    },
                    "EnablePerformanceInsights": {
                        "description": "True to enable Performance Insights for the DB instance, and otherwise false.",
                        "type": "boolean"
                    },
                    "EngineVersion": {
                        "description": "<p> The version number of the database engine to upgrade to. Changing this parameter results in an outage and the change is applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is set to <code>true</code> for this request. </p> <p>For major version upgrades, if a nondefault DB parameter group is currently in use, a new DB parameter group in the DB parameter group family for the new engine version must be specified. The new DB parameter group can be the default for that DB parameter group family.</p>",
                        "type": "string"
                    },
                    "Iops": {
                        "description": "<p>The new Provisioned IOPS (I/O operations per second) value for the instance. </p> <p>Changing this setting doesn't result in an outage and the change is applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is set to <code>true</code> for this request.</p> <p>Default: Uses existing setting</p>",
                        "type": "integer"
                    },
                    "LicenseModel": {
                        "description": "<p>The license model for the DB instance.</p> <p>Valid values: <code>license-included</code> | <code>bring-your-own-license</code> | <code>general-public-license</code> </p>",
                        "type": "string"
                    },
                    "MasterUserPassword": {
                        "description": "<p>The new password for the master user. The password can include any printable ASCII character except \"/\", \"\"\", or \"@\".</p> <p>Not applicable. </p> <p>Default: Uses existing setting</p>",
                        "type": "string"
                    },
                    "MonitoringInterval": {
                        "description": "<p>The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0.</p> <p>If <code>MonitoringRoleArn</code> is specified, then you must also set <code>MonitoringInterval</code> to a value other than 0.</p> <p>Valid Values: <code>0, 1, 5, 10, 15, 30, 60</code> </p>",
                        "type": "integer"
                    },
                    "MonitoringRoleArn": {
                        "description": "<p>The ARN for the IAM role that permits Neptune to send enhanced monitoring metrics to Amazon CloudWatch Logs. For example, <code>arn:aws:iam:123456789012:role/emaccess</code>. </p> <p>If <code>MonitoringInterval</code> is set to a value other than 0, then you must supply a <code>MonitoringRoleArn</code> value.</p>",
                        "type": "string"
                    },
                    "MultiAZ": {
                        "description": "Specifies if the DB instance is a Multi-AZ deployment. Changing this parameter doesn't result in an outage and the change is applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is set to <code>true</code> for this request. ",
                        "type": "boolean"
                    },
                    "NewDBInstanceIdentifier": {
                        "description": "<p> The new DB instance identifier for the DB instance when renaming a DB instance. When you change the DB instance identifier, an instance reboot will occur immediately if you set <code>Apply Immediately</code> to true, or will occur during the next maintenance window if <code>Apply Immediately</code> to false. This value is stored as a lowercase string. </p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>The first character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>mydbinstance</code> </p>",
                        "type": "string"
                    },
                    "OptionGroupName": {
                        "description": "<p> Indicates that the DB instance should be associated with the specified option group. Changing this parameter doesn't result in an outage except in the following case and the change is applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is set to <code>true</code> for this request. If the parameter change results in an option group that enables OEM, this change can cause a brief (sub-second) period during which new connections are rejected but existing connections are not interrupted. </p> <p>Permanent options, such as the TDE option for Oracle Advanced Security TDE, can't be removed from an option group, and that option group can't be removed from a DB instance once it is associated with a DB instance</p>",
                        "type": "string"
                    },
                    "PerformanceInsightsKMSKeyId": {
                        "description": "The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.",
                        "type": "string"
                    },
                    "PreferredBackupWindow": {
                        "description": "<p> The daily time range during which automated backups are created if automated backups are enabled. </p> <p>Not applicable. The daily time range for creating automated backups is managed by the DB cluster. For more information, see <a>ModifyDBCluster</a>.</p> <p>Constraints:</p> <ul> <li> <p>Must be in the format hh24:mi-hh24:mi</p> </li> <li> <p>Must be in Universal Time Coordinated (UTC)</p> </li> <li> <p>Must not conflict with the preferred maintenance window</p> </li> <li> <p>Must be at least 30 minutes</p> </li> </ul>",
                        "type": "string"
                    },
                    "PreferredMaintenanceWindow": {
                        "description": "<p>The weekly time range (in UTC) during which system maintenance can occur, which might result in an outage. Changing this parameter doesn't result in an outage, except in the following situation, and the change is asynchronously applied as soon as possible. If there are pending actions that cause a reboot, and the maintenance window is changed to include the current time, then changing this parameter will cause a reboot of the DB instance. If moving this window to the current time, there must be at least 30 minutes between the current time and end of the window to ensure pending changes are applied.</p> <p>Default: Uses existing setting</p> <p>Format: ddd:hh24:mi-ddd:hh24:mi</p> <p>Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun</p> <p>Constraints: Must be at least 30 minutes</p>",
                        "type": "string"
                    },
                    "PromotionTier": {
                        "description": "<p>A value that specifies the order in which a Read Replica is promoted to the primary instance after a failure of the existing primary instance. </p> <p>Default: 1</p> <p>Valid Values: 0 - 15</p>",
                        "type": "integer"
                    },
                    "PubliclyAccessible": {
                        "description": "This parameter is not supported.",
                        "type": "boolean"
                    },
                    "StorageType": {
                        "description": "<p>Specifies the storage type to be associated with the DB instance. </p> <p>If you specify Provisioned IOPS (<code>io1</code>), you must also include a value for the <code>Iops</code> parameter. </p> <p>If you choose to migrate your DB instance from using standard storage to using Provisioned IOPS, or from using Provisioned IOPS to using standard storage, the process can take time. The duration of the migration depends on several factors such as database load, storage size, storage type (standard or Provisioned IOPS), amount of IOPS provisioned (if any), and the number of prior scale storage operations. Typical migration times are under 24 hours, but the process can take up to several days in some cases. During the migration, the DB instance is available for use, but might experience performance degradation. While the migration takes place, nightly backups for the instance are suspended. No other Amazon Neptune operations can take place for the instance, including modifying the instance, rebooting the instance, deleting the instance, creating a Read Replica for the instance, and creating a DB snapshot of the instance. </p> <p> Valid values: <code>standard | gp2 | io1</code> </p> <p>Default: <code>io1</code> if the <code>Iops</code> parameter is specified, otherwise <code>standard</code> </p>",
                        "type": "string"
                    },
                    "TdeCredentialArn": {
                        "description": "The ARN from the key store with which to associate the instance for TDE encryption.",
                        "type": "string"
                    },
                    "TdeCredentialPassword": {
                        "description": "The password for the given ARN from the key store in order to access the device.",
                        "type": "string"
                    },
                    "VpcSecurityGroupIds": {
                        "description": "<p>A list of EC2 VPC security groups to authorize on this DB instance. This change is asynchronously applied as soon as possible.</p> <p>Not applicable. The associated list of EC2 VPC security groups is managed by the DB cluster. For more information, see <a>ModifyDBCluster</a>.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match existing VpcSecurityGroupIds.</p> </li> </ul>",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "DBInstanceIdentifier"
                ],
                "type": "object"
            },
            "ModifyDBInstanceResult": {
                "properties": {
                    "DBInstance": {
                        "description": "<p>Contains the details of an Amazon Neptune DB instance. </p> <p>This data type is used as a response element in the <a>DescribeDBInstances</a> action. </p>",
                        "properties": {
                            "AllocatedStorage": {
                                "description": "Specifies the allocated storage size specified in gibibytes.",
                                "type": "integer"
                            },
                            "AutoMinorVersionUpgrade": {
                                "description": "Indicates that minor version patches are applied automatically.",
                                "type": "boolean"
                            },
                            "AvailabilityZone": {
                                "description": "Specifies the name of the Availability Zone the DB instance is located in.",
                                "type": "string"
                            },
                            "BackupRetentionPeriod": {
                                "description": "Specifies the number of days for which automatic DB snapshots are retained.",
                                "type": "integer"
                            },
                            "CACertificateIdentifier": {
                                "description": "The identifier of the CA certificate for this DB instance.",
                                "type": "string"
                            },
                            "CharacterSetName": {
                                "description": "If present, specifies the name of the character set that this instance is associated with.",
                                "type": "string"
                            },
                            "CopyTagsToSnapshot": {
                                "description": "Specifies whether tags are copied from the DB instance to snapshots of the DB instance.",
                                "type": "boolean"
                            },
                            "DBClusterIdentifier": {
                                "description": "If the DB instance is a member of a DB cluster, contains the name of the DB cluster that the DB instance is a member of.",
                                "type": "string"
                            },
                            "DBInstanceArn": {
                                "description": "The Amazon Resource Name (ARN) for the DB instance.",
                                "type": "string"
                            },
                            "DBInstanceClass": {
                                "description": "Contains the name of the compute and memory capacity class of the DB instance.",
                                "type": "string"
                            },
                            "DBInstanceIdentifier": {
                                "description": "Contains a user-supplied database identifier. This identifier is the unique key that identifies a DB instance.",
                                "type": "string"
                            },
                            "DBInstanceStatus": {
                                "description": "Specifies the current state of this database.",
                                "type": "string"
                            },
                            "DBName": {
                                "description": "The database name.",
                                "type": "string"
                            },
                            "DBParameterGroups": {
                                "description": "Provides the list of DB parameter groups applied to this DB instance.",
                                "items": {
                                    "description": "<p>The status of the DB parameter group.</p> <p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>CreateDBInstance</a> </p> </li> <li> <p> <a>DeleteDBInstance</a> </p> </li> <li> <p> <a>ModifyDBInstance</a> </p> </li> <li> <p> <a>RebootDBInstance</a> </p> </li> </ul>",
                                    "properties": {
                                        "DBParameterGroupName": {
                                            "description": "The name of the DP parameter group.",
                                            "type": "string"
                                        },
                                        "ParameterApplyStatus": {
                                            "description": "The status of parameter updates.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "DBSecurityGroups": {
                                "description": " Provides List of DB security group elements containing only <code>DBSecurityGroup.Name</code> and <code>DBSecurityGroup.Status</code> subelements. ",
                                "items": {
                                    "description": "<p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>ModifyDBInstance</a> </p> </li> <li> <p> <a>RebootDBInstance</a> </p> </li> </ul>",
                                    "properties": {
                                        "DBSecurityGroupName": {
                                            "description": "The name of the DB security group.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of the DB security group.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "DBSubnetGroup": {
                                "description": "Specifies information on the subnet group associated with the DB instance, including the name, description, and subnets in the subnet group.",
                                "properties": {
                                    "DBSubnetGroupArn": {
                                        "description": "The Amazon Resource Name (ARN) for the DB subnet group.",
                                        "type": "string"
                                    },
                                    "DBSubnetGroupDescription": {
                                        "description": "Provides the description of the DB subnet group.",
                                        "type": "string"
                                    },
                                    "DBSubnetGroupName": {
                                        "description": "The name of the DB subnet group.",
                                        "type": "string"
                                    },
                                    "SubnetGroupStatus": {
                                        "description": "Provides the status of the DB subnet group.",
                                        "type": "string"
                                    },
                                    "Subnets": {
                                        "description": " Contains a list of <a>Subnet</a> elements. ",
                                        "items": {
                                            "description": " This data type is used as a response element in the <a>DescribeDBSubnetGroups</a> action. ",
                                            "properties": {
                                                "SubnetAvailabilityZone": {
                                                    "description": "<p>Contains Availability Zone information.</p> <p> This data type is used as an element in the following data type:</p> <ul> <li> <p> <a>OrderableDBInstanceOption</a> </p> </li> </ul>",
                                                    "properties": {
                                                        "Name": {
                                                            "description": "The name of the availability zone.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "SubnetIdentifier": {
                                                    "description": "Specifies the identifier of the subnet.",
                                                    "type": "string"
                                                },
                                                "SubnetStatus": {
                                                    "description": "Specifies the status of the subnet.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "VpcId": {
                                        "description": "Provides the VpcId of the DB subnet group.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "DbInstancePort": {
                                "description": "Specifies the port that the DB instance listens on. If the DB instance is part of a DB cluster, this can be a different port than the DB cluster port.",
                                "type": "integer"
                            },
                            "DbiResourceId": {
                                "description": "The AWS Region-unique, immutable identifier for the DB instance. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.",
                                "type": "string"
                            },
                            "DomainMemberships": {
                                "description": "Not supported",
                                "items": {
                                    "description": "An Active Directory Domain membership record associated with the DB instance.",
                                    "properties": {
                                        "Domain": {
                                            "description": "The identifier of the Active Directory Domain.",
                                            "type": "string"
                                        },
                                        "FQDN": {
                                            "description": "The fully qualified domain name of the Active Directory Domain.",
                                            "type": "string"
                                        },
                                        "IAMRoleName": {
                                            "description": "The name of the IAM role to be used when making API calls to the Directory Service.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of the DB instance's Active Directory Domain membership, such as joined, pending-join, failed etc).",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "EnabledCloudwatchLogsExports": {
                                "description": "A list of log types that this DB instance is configured to export to CloudWatch Logs.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "Endpoint": {
                                "description": "Specifies the connection endpoint.",
                                "properties": {
                                    "Address": {
                                        "description": "Specifies the DNS address of the DB instance.",
                                        "type": "string"
                                    },
                                    "HostedZoneId": {
                                        "description": "Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.",
                                        "type": "string"
                                    },
                                    "Port": {
                                        "description": "Specifies the port that the database engine is listening on.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "Engine": {
                                "description": "Provides the name of the database engine to be used for this DB instance.",
                                "type": "string"
                            },
                            "EngineVersion": {
                                "description": "Indicates the database engine version.",
                                "type": "string"
                            },
                            "EnhancedMonitoringResourceArn": {
                                "description": "The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the Enhanced Monitoring metrics data for the DB instance.",
                                "type": "string"
                            },
                            "IAMDatabaseAuthenticationEnabled": {
                                "description": "True if AWS Identity and Access Management (IAM) authentication is enabled, and otherwise false.",
                                "type": "boolean"
                            },
                            "InstanceCreateTime": {
                                "description": "Provides the date and time the DB instance was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "Iops": {
                                "description": "Specifies the Provisioned IOPS (I/O operations per second) value.",
                                "type": "integer"
                            },
                            "KmsKeyId": {
                                "description": " If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB instance. ",
                                "type": "string"
                            },
                            "LatestRestorableTime": {
                                "description": "Specifies the latest time to which a database can be restored with point-in-time restore.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "LicenseModel": {
                                "description": "License model information for this DB instance.",
                                "type": "string"
                            },
                            "MasterUsername": {
                                "description": "Contains the master username for the DB instance.",
                                "type": "string"
                            },
                            "MonitoringInterval": {
                                "description": "The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance.",
                                "type": "integer"
                            },
                            "MonitoringRoleArn": {
                                "description": "The ARN for the IAM role that permits Neptune to send Enhanced Monitoring metrics to Amazon CloudWatch Logs.",
                                "type": "string"
                            },
                            "MultiAZ": {
                                "description": "Specifies if the DB instance is a Multi-AZ deployment.",
                                "type": "boolean"
                            },
                            "OptionGroupMemberships": {
                                "description": "Provides the list of option group memberships for this DB instance.",
                                "items": {
                                    "description": "Provides information on the option groups the DB instance is a member of.",
                                    "properties": {
                                        "OptionGroupName": {
                                            "description": "The name of the option group that the instance belongs to.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of the DB instance's option group membership. Valid values are: <code>in-sync</code>, <code>pending-apply</code>, <code>pending-removal</code>, <code>pending-maintenance-apply</code>, <code>pending-maintenance-removal</code>, <code>applying</code>, <code>removing</code>, and <code>failed</code>. ",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "PendingModifiedValues": {
                                "description": "Specifies that changes to the DB instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements.",
                                "properties": {
                                    "AllocatedStorage": {
                                        "description": " Contains the new <code>AllocatedStorage</code> size for the DB instance that will be applied or is currently being applied. ",
                                        "type": "integer"
                                    },
                                    "BackupRetentionPeriod": {
                                        "description": "Specifies the pending number of days for which automated backups are retained.",
                                        "type": "integer"
                                    },
                                    "CACertificateIdentifier": {
                                        "description": "Specifies the identifier of the CA certificate for the DB instance.",
                                        "type": "string"
                                    },
                                    "DBInstanceClass": {
                                        "description": " Contains the new <code>DBInstanceClass</code> for the DB instance that will be applied or is currently being applied. ",
                                        "type": "string"
                                    },
                                    "DBInstanceIdentifier": {
                                        "description": " Contains the new <code>DBInstanceIdentifier</code> for the DB instance that will be applied or is currently being applied. ",
                                        "type": "string"
                                    },
                                    "DBSubnetGroupName": {
                                        "description": "The new DB subnet group for the DB instance. ",
                                        "type": "string"
                                    },
                                    "EngineVersion": {
                                        "description": "Indicates the database engine version.",
                                        "type": "string"
                                    },
                                    "Iops": {
                                        "description": "Specifies the new Provisioned IOPS value for the DB instance that will be applied or is currently being applied.",
                                        "type": "integer"
                                    },
                                    "LicenseModel": {
                                        "description": "<p>The license model for the DB instance.</p> <p>Valid values: <code>license-included</code> | <code>bring-your-own-license</code> | <code>general-public-license</code> </p>",
                                        "type": "string"
                                    },
                                    "MasterUserPassword": {
                                        "description": "Contains the pending or currently-in-progress change of the master credentials for the DB instance.",
                                        "type": "string"
                                    },
                                    "MultiAZ": {
                                        "description": "Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.",
                                        "type": "boolean"
                                    },
                                    "PendingCloudwatchLogsExports": {
                                        "description": "A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated.",
                                        "properties": {
                                            "LogTypesToDisable": {
                                                "description": "Log types that are in the process of being enabled. After they are enabled, these log types are exported to CloudWatch Logs.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "LogTypesToEnable": {
                                                "description": "Log types that are in the process of being deactivated. After they are deactivated, these log types aren't exported to CloudWatch Logs.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Port": {
                                        "description": "Specifies the pending port for the DB instance.",
                                        "type": "integer"
                                    },
                                    "StorageType": {
                                        "description": "Specifies the storage type to be associated with the DB instance.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "PerformanceInsightsEnabled": {
                                "description": "True if Performance Insights is enabled for the DB instance, and otherwise false.",
                                "type": "boolean"
                            },
                            "PerformanceInsightsKMSKeyId": {
                                "description": "The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.",
                                "type": "string"
                            },
                            "PreferredBackupWindow": {
                                "description": " Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. ",
                                "type": "string"
                            },
                            "PreferredMaintenanceWindow": {
                                "description": "Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
                                "type": "string"
                            },
                            "PromotionTier": {
                                "description": "A value that specifies the order in which a Read Replica is promoted to the primary instance after a failure of the existing primary instance. ",
                                "type": "integer"
                            },
                            "PubliclyAccessible": {
                                "description": "This parameter is not supported.",
                                "type": "boolean"
                            },
                            "ReadReplicaDBClusterIdentifiers": {
                                "description": "Contains one or more identifiers of DB clusters that are Read Replicas of this DB instance.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "ReadReplicaDBInstanceIdentifiers": {
                                "description": "Contains one or more identifiers of the Read Replicas associated with this DB instance.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "ReadReplicaSourceDBInstanceIdentifier": {
                                "description": "Contains the identifier of the source DB instance if this DB instance is a Read Replica.",
                                "type": "string"
                            },
                            "SecondaryAvailabilityZone": {
                                "description": "If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support.",
                                "type": "string"
                            },
                            "StatusInfos": {
                                "description": "The status of a Read Replica. If the instance is not a Read Replica, this is blank.",
                                "items": {
                                    "description": "Provides a list of status information for a DB instance.",
                                    "properties": {
                                        "Message": {
                                            "description": "Details of the error if there is an error for the instance. If the instance is not in an error state, this value is blank.",
                                            "type": "string"
                                        },
                                        "Normal": {
                                            "description": "Boolean value that is true if the instance is operating normally, or false if the instance is in an error state.",
                                            "type": "boolean"
                                        },
                                        "Status": {
                                            "description": "Status of the DB instance. For a StatusType of read replica, the values can be replicating, error, stopped, or terminated.",
                                            "type": "string"
                                        },
                                        "StatusType": {
                                            "description": "This value is currently \"read replication.\"",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "StorageEncrypted": {
                                "description": "Specifies whether the DB instance is encrypted.",
                                "type": "boolean"
                            },
                            "StorageType": {
                                "description": "Specifies the storage type associated with DB instance.",
                                "type": "string"
                            },
                            "TdeCredentialArn": {
                                "description": "The ARN from the key store with which the instance is associated for TDE encryption.",
                                "type": "string"
                            },
                            "Timezone": {
                                "description": "Not supported. ",
                                "type": "string"
                            },
                            "VpcSecurityGroups": {
                                "description": "Provides a list of VPC security group elements that the DB instance belongs to.",
                                "items": {
                                    "description": "This data type is used as a response element for queries on VPC security group membership.",
                                    "properties": {
                                        "Status": {
                                            "description": "The status of the VPC security group.",
                                            "type": "string"
                                        },
                                        "VpcSecurityGroupId": {
                                            "description": "The name of the VPC security group.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ModifyDBParameterGroupMessage": {
                "description": "<p/>",
                "properties": {
                    "DBParameterGroupName": {
                        "description": "<p>The name of the DB parameter group.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DBParameterGroup.</p> </li> </ul>",
                        "type": "string"
                    },
                    "Parameters": {
                        "description": "<p>An array of parameter names, values, and the apply method for the parameter update. At least one parameter name, value, and apply method must be supplied; subsequent arguments are optional. A maximum of 20 parameters can be modified in a single request.</p> <p>Valid Values (for the application method): <code>immediate | pending-reboot</code> </p> <note> <p>You can use the immediate value with dynamic parameters only. You can use the pending-reboot value for both dynamic and static parameters, and changes are applied when you reboot the DB instance without failover.</p> </note>",
                        "items": {
                            "description": "<p> This data type is used as a request parameter in the <a>ModifyDBParameterGroup</a> and <a>ResetDBParameterGroup</a> actions. </p> <p>This data type is used as a response element in the <a>DescribeEngineDefaultParameters</a> and <a>DescribeDBParameters</a> actions.</p>",
                            "properties": {
                                "AllowedValues": {
                                    "description": "Specifies the valid range of values for the parameter.",
                                    "type": "string"
                                },
                                "ApplyMethod": {
                                    "description": "Indicates when to apply parameter updates.",
                                    "enum": [
                                        "immediate",
                                        "pending-reboot"
                                    ],
                                    "type": "string"
                                },
                                "ApplyType": {
                                    "description": "Specifies the engine specific parameters type.",
                                    "type": "string"
                                },
                                "DataType": {
                                    "description": "Specifies the valid data type for the parameter.",
                                    "type": "string"
                                },
                                "Description": {
                                    "description": "Provides a description of the parameter.",
                                    "type": "string"
                                },
                                "IsModifiable": {
                                    "description": " Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed. ",
                                    "type": "boolean"
                                },
                                "MinimumEngineVersion": {
                                    "description": "The earliest engine version to which the parameter can apply.",
                                    "type": "string"
                                },
                                "ParameterName": {
                                    "description": "Specifies the name of the parameter.",
                                    "type": "string"
                                },
                                "ParameterValue": {
                                    "description": "Specifies the value of the parameter.",
                                    "type": "string"
                                },
                                "Source": {
                                    "description": "Indicates the source of the parameter value.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "DBParameterGroupName",
                    "Parameters"
                ],
                "type": "object"
            },
            "ModifyDBSubnetGroupMessage": {
                "description": "<p/>",
                "properties": {
                    "DBSubnetGroupDescription": {
                        "description": "The description for the DB subnet group.",
                        "type": "string"
                    },
                    "DBSubnetGroupName": {
                        "description": "<p>The name for the DB subnet group. This value is stored as a lowercase string. You can't modify the default subnet group. </p> <p>Constraints: Must match the name of an existing DBSubnetGroup. Must not be default.</p> <p>Example: <code>mySubnetgroup</code> </p>",
                        "type": "string"
                    },
                    "SubnetIds": {
                        "description": "The EC2 subnet IDs for the DB subnet group.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "DBSubnetGroupName",
                    "SubnetIds"
                ],
                "type": "object"
            },
            "ModifyDBSubnetGroupResult": {
                "properties": {
                    "DBSubnetGroup": {
                        "description": "<p>Contains the details of an Amazon Neptune DB subnet group. </p> <p>This data type is used as a response element in the <a>DescribeDBSubnetGroups</a> action. </p>",
                        "properties": {
                            "DBSubnetGroupArn": {
                                "description": "The Amazon Resource Name (ARN) for the DB subnet group.",
                                "type": "string"
                            },
                            "DBSubnetGroupDescription": {
                                "description": "Provides the description of the DB subnet group.",
                                "type": "string"
                            },
                            "DBSubnetGroupName": {
                                "description": "The name of the DB subnet group.",
                                "type": "string"
                            },
                            "SubnetGroupStatus": {
                                "description": "Provides the status of the DB subnet group.",
                                "type": "string"
                            },
                            "Subnets": {
                                "description": " Contains a list of <a>Subnet</a> elements. ",
                                "items": {
                                    "description": " This data type is used as a response element in the <a>DescribeDBSubnetGroups</a> action. ",
                                    "properties": {
                                        "SubnetAvailabilityZone": {
                                            "description": "<p>Contains Availability Zone information.</p> <p> This data type is used as an element in the following data type:</p> <ul> <li> <p> <a>OrderableDBInstanceOption</a> </p> </li> </ul>",
                                            "properties": {
                                                "Name": {
                                                    "description": "The name of the availability zone.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "SubnetIdentifier": {
                                            "description": "Specifies the identifier of the subnet.",
                                            "type": "string"
                                        },
                                        "SubnetStatus": {
                                            "description": "Specifies the status of the subnet.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "VpcId": {
                                "description": "Provides the VpcId of the DB subnet group.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ModifyEventSubscriptionMessage": {
                "description": "<p/>",
                "properties": {
                    "Enabled": {
                        "description": " A Boolean value; set to <b>true</b> to activate the subscription. ",
                        "type": "boolean"
                    },
                    "EventCategories": {
                        "description": " A list of event categories for a SourceType that you want to subscribe to. You can see a list of the categories for a given SourceType by using the <b>DescribeEventCategories</b> action. ",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "SnsTopicArn": {
                        "description": "The Amazon Resource Name (ARN) of the SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it.",
                        "type": "string"
                    },
                    "SourceType": {
                        "description": "<p>The type of source that is generating the events. For example, if you want to be notified of events generated by a DB instance, you would set this parameter to db-instance. if this value is not specified, all events are returned.</p> <p>Valid values: db-instance | db-parameter-group | db-security-group | db-snapshot</p>",
                        "type": "string"
                    },
                    "SubscriptionName": {
                        "description": "The name of the event notification subscription.",
                        "type": "string"
                    }
                },
                "required": [
                    "SubscriptionName"
                ],
                "type": "object"
            },
            "ModifyEventSubscriptionResult": {
                "properties": {
                    "EventSubscription": {
                        "description": "Contains the results of a successful invocation of the <a>DescribeEventSubscriptions</a> action.",
                        "properties": {
                            "CustSubscriptionId": {
                                "description": "The event notification subscription Id.",
                                "type": "string"
                            },
                            "CustomerAwsId": {
                                "description": "The AWS customer account associated with the event notification subscription.",
                                "type": "string"
                            },
                            "Enabled": {
                                "description": "A Boolean value indicating if the subscription is enabled. True indicates the subscription is enabled.",
                                "type": "boolean"
                            },
                            "EventCategoriesList": {
                                "description": "A list of event categories for the event notification subscription.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "EventSubscriptionArn": {
                                "description": "The Amazon Resource Name (ARN) for the event subscription.",
                                "type": "string"
                            },
                            "SnsTopicArn": {
                                "description": "The topic ARN of the event notification subscription.",
                                "type": "string"
                            },
                            "SourceIdsList": {
                                "description": "A list of source IDs for the event notification subscription.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "SourceType": {
                                "description": "The source type for the event notification subscription.",
                                "type": "string"
                            },
                            "Status": {
                                "description": "<p>The status of the event notification subscription.</p> <p>Constraints:</p> <p>Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist</p> <p>The status \"no-permission\" indicates that Neptune no longer has permission to post to the SNS topic. The status \"topic-not-exist\" indicates that the topic was deleted after the subscription was created.</p>",
                                "type": "string"
                            },
                            "SubscriptionCreationTime": {
                                "description": "The time the event notification subscription was created.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "OptionGroupMembership": {
                "description": "Provides information on the option groups the DB instance is a member of.",
                "properties": {
                    "OptionGroupName": {
                        "description": "The name of the option group that the instance belongs to.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of the DB instance's option group membership. Valid values are: <code>in-sync</code>, <code>pending-apply</code>, <code>pending-removal</code>, <code>pending-maintenance-apply</code>, <code>pending-maintenance-removal</code>, <code>applying</code>, <code>removing</code>, and <code>failed</code>. ",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "OptionGroupMembershipList": {
                "items": {
                    "description": "Provides information on the option groups the DB instance is a member of.",
                    "properties": {
                        "OptionGroupName": {
                            "description": "The name of the option group that the instance belongs to.",
                            "type": "string"
                        },
                        "Status": {
                            "description": "The status of the DB instance's option group membership. Valid values are: <code>in-sync</code>, <code>pending-apply</code>, <code>pending-removal</code>, <code>pending-maintenance-apply</code>, <code>pending-maintenance-removal</code>, <code>applying</code>, <code>removing</code>, and <code>failed</code>. ",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "OptionGroupNotFoundFault": {
                "properties": {},
                "type": "object"
            },
            "OrderableDBInstanceOption": {
                "description": "<p>Contains a list of available options for a DB instance.</p> <p> This data type is used as a response element in the <a>DescribeOrderableDBInstanceOptions</a> action. </p>",
                "properties": {
                    "AvailabilityZones": {
                        "description": "A list of Availability Zones for a DB instance.",
                        "items": {
                            "description": "<p>Contains Availability Zone information.</p> <p> This data type is used as an element in the following data type:</p> <ul> <li> <p> <a>OrderableDBInstanceOption</a> </p> </li> </ul>",
                            "properties": {
                                "Name": {
                                    "description": "The name of the availability zone.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "DBInstanceClass": {
                        "description": "The DB instance class for a DB instance.",
                        "type": "string"
                    },
                    "Engine": {
                        "description": "The engine type of a DB instance.",
                        "type": "string"
                    },
                    "EngineVersion": {
                        "description": "The engine version of a DB instance.",
                        "type": "string"
                    },
                    "LicenseModel": {
                        "description": "The license model for a DB instance.",
                        "type": "string"
                    },
                    "MaxIopsPerDbInstance": {
                        "description": "Maximum total provisioned IOPS for a DB instance.",
                        "type": "integer"
                    },
                    "MaxIopsPerGib": {
                        "description": "Maximum provisioned IOPS per GiB for a DB instance.",
                        "format": "double",
                        "type": "number"
                    },
                    "MaxStorageSize": {
                        "description": "Maximum storage size for a DB instance.",
                        "type": "integer"
                    },
                    "MinIopsPerDbInstance": {
                        "description": "Minimum total provisioned IOPS for a DB instance.",
                        "type": "integer"
                    },
                    "MinIopsPerGib": {
                        "description": "Minimum provisioned IOPS per GiB for a DB instance.",
                        "format": "double",
                        "type": "number"
                    },
                    "MinStorageSize": {
                        "description": "Minimum storage size for a DB instance.",
                        "type": "integer"
                    },
                    "MultiAZCapable": {
                        "description": "Indicates whether a DB instance is Multi-AZ capable.",
                        "type": "boolean"
                    },
                    "ReadReplicaCapable": {
                        "description": "Indicates whether a DB instance can have a Read Replica.",
                        "type": "boolean"
                    },
                    "StorageType": {
                        "description": "Indicates the storage type for a DB instance.",
                        "type": "string"
                    },
                    "SupportsEnhancedMonitoring": {
                        "description": "Indicates whether a DB instance supports Enhanced Monitoring at intervals from 1 to 60 seconds.",
                        "type": "boolean"
                    },
                    "SupportsIAMDatabaseAuthentication": {
                        "description": "Indicates whether a DB instance supports IAM database authentication.",
                        "type": "boolean"
                    },
                    "SupportsIops": {
                        "description": "Indicates whether a DB instance supports provisioned IOPS.",
                        "type": "boolean"
                    },
                    "SupportsPerformanceInsights": {
                        "description": "True if a DB instance supports Performance Insights, otherwise false.",
                        "type": "boolean"
                    },
                    "SupportsStorageEncryption": {
                        "description": "Indicates whether a DB instance supports encrypted storage.",
                        "type": "boolean"
                    },
                    "Vpc": {
                        "description": "Indicates whether a DB instance is in a VPC.",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "OrderableDBInstanceOptionsList": {
                "items": {
                    "description": "<p>Contains a list of available options for a DB instance.</p> <p> This data type is used as a response element in the <a>DescribeOrderableDBInstanceOptions</a> action. </p>",
                    "properties": {
                        "AvailabilityZones": {
                            "description": "A list of Availability Zones for a DB instance.",
                            "items": {
                                "description": "<p>Contains Availability Zone information.</p> <p> This data type is used as an element in the following data type:</p> <ul> <li> <p> <a>OrderableDBInstanceOption</a> </p> </li> </ul>",
                                "properties": {
                                    "Name": {
                                        "description": "The name of the availability zone.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "DBInstanceClass": {
                            "description": "The DB instance class for a DB instance.",
                            "type": "string"
                        },
                        "Engine": {
                            "description": "The engine type of a DB instance.",
                            "type": "string"
                        },
                        "EngineVersion": {
                            "description": "The engine version of a DB instance.",
                            "type": "string"
                        },
                        "LicenseModel": {
                            "description": "The license model for a DB instance.",
                            "type": "string"
                        },
                        "MaxIopsPerDbInstance": {
                            "description": "Maximum total provisioned IOPS for a DB instance.",
                            "type": "integer"
                        },
                        "MaxIopsPerGib": {
                            "description": "Maximum provisioned IOPS per GiB for a DB instance.",
                            "format": "double",
                            "type": "number"
                        },
                        "MaxStorageSize": {
                            "description": "Maximum storage size for a DB instance.",
                            "type": "integer"
                        },
                        "MinIopsPerDbInstance": {
                            "description": "Minimum total provisioned IOPS for a DB instance.",
                            "type": "integer"
                        },
                        "MinIopsPerGib": {
                            "description": "Minimum provisioned IOPS per GiB for a DB instance.",
                            "format": "double",
                            "type": "number"
                        },
                        "MinStorageSize": {
                            "description": "Minimum storage size for a DB instance.",
                            "type": "integer"
                        },
                        "MultiAZCapable": {
                            "description": "Indicates whether a DB instance is Multi-AZ capable.",
                            "type": "boolean"
                        },
                        "ReadReplicaCapable": {
                            "description": "Indicates whether a DB instance can have a Read Replica.",
                            "type": "boolean"
                        },
                        "StorageType": {
                            "description": "Indicates the storage type for a DB instance.",
                            "type": "string"
                        },
                        "SupportsEnhancedMonitoring": {
                            "description": "Indicates whether a DB instance supports Enhanced Monitoring at intervals from 1 to 60 seconds.",
                            "type": "boolean"
                        },
                        "SupportsIAMDatabaseAuthentication": {
                            "description": "Indicates whether a DB instance supports IAM database authentication.",
                            "type": "boolean"
                        },
                        "SupportsIops": {
                            "description": "Indicates whether a DB instance supports provisioned IOPS.",
                            "type": "boolean"
                        },
                        "SupportsPerformanceInsights": {
                            "description": "True if a DB instance supports Performance Insights, otherwise false.",
                            "type": "boolean"
                        },
                        "SupportsStorageEncryption": {
                            "description": "Indicates whether a DB instance supports encrypted storage.",
                            "type": "boolean"
                        },
                        "Vpc": {
                            "description": "Indicates whether a DB instance is in a VPC.",
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "OrderableDBInstanceOptionsMessage": {
                "description": " Contains the result of a successful invocation of the <a>DescribeOrderableDBInstanceOptions</a> action. ",
                "properties": {
                    "Marker": {
                        "description": " An optional pagination token provided by a previous OrderableDBInstanceOptions request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> . ",
                        "type": "string"
                    },
                    "OrderableDBInstanceOptions": {
                        "description": "An <a>OrderableDBInstanceOption</a> structure containing information about orderable options for the DB instance.",
                        "items": {
                            "description": "<p>Contains a list of available options for a DB instance.</p> <p> This data type is used as a response element in the <a>DescribeOrderableDBInstanceOptions</a> action. </p>",
                            "properties": {
                                "AvailabilityZones": {
                                    "description": "A list of Availability Zones for a DB instance.",
                                    "items": {
                                        "description": "<p>Contains Availability Zone information.</p> <p> This data type is used as an element in the following data type:</p> <ul> <li> <p> <a>OrderableDBInstanceOption</a> </p> </li> </ul>",
                                        "properties": {
                                            "Name": {
                                                "description": "The name of the availability zone.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "DBInstanceClass": {
                                    "description": "The DB instance class for a DB instance.",
                                    "type": "string"
                                },
                                "Engine": {
                                    "description": "The engine type of a DB instance.",
                                    "type": "string"
                                },
                                "EngineVersion": {
                                    "description": "The engine version of a DB instance.",
                                    "type": "string"
                                },
                                "LicenseModel": {
                                    "description": "The license model for a DB instance.",
                                    "type": "string"
                                },
                                "MaxIopsPerDbInstance": {
                                    "description": "Maximum total provisioned IOPS for a DB instance.",
                                    "type": "integer"
                                },
                                "MaxIopsPerGib": {
                                    "description": "Maximum provisioned IOPS per GiB for a DB instance.",
                                    "format": "double",
                                    "type": "number"
                                },
                                "MaxStorageSize": {
                                    "description": "Maximum storage size for a DB instance.",
                                    "type": "integer"
                                },
                                "MinIopsPerDbInstance": {
                                    "description": "Minimum total provisioned IOPS for a DB instance.",
                                    "type": "integer"
                                },
                                "MinIopsPerGib": {
                                    "description": "Minimum provisioned IOPS per GiB for a DB instance.",
                                    "format": "double",
                                    "type": "number"
                                },
                                "MinStorageSize": {
                                    "description": "Minimum storage size for a DB instance.",
                                    "type": "integer"
                                },
                                "MultiAZCapable": {
                                    "description": "Indicates whether a DB instance is Multi-AZ capable.",
                                    "type": "boolean"
                                },
                                "ReadReplicaCapable": {
                                    "description": "Indicates whether a DB instance can have a Read Replica.",
                                    "type": "boolean"
                                },
                                "StorageType": {
                                    "description": "Indicates the storage type for a DB instance.",
                                    "type": "string"
                                },
                                "SupportsEnhancedMonitoring": {
                                    "description": "Indicates whether a DB instance supports Enhanced Monitoring at intervals from 1 to 60 seconds.",
                                    "type": "boolean"
                                },
                                "SupportsIAMDatabaseAuthentication": {
                                    "description": "Indicates whether a DB instance supports IAM database authentication.",
                                    "type": "boolean"
                                },
                                "SupportsIops": {
                                    "description": "Indicates whether a DB instance supports provisioned IOPS.",
                                    "type": "boolean"
                                },
                                "SupportsPerformanceInsights": {
                                    "description": "True if a DB instance supports Performance Insights, otherwise false.",
                                    "type": "boolean"
                                },
                                "SupportsStorageEncryption": {
                                    "description": "Indicates whether a DB instance supports encrypted storage.",
                                    "type": "boolean"
                                },
                                "Vpc": {
                                    "description": "Indicates whether a DB instance is in a VPC.",
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Parameter": {
                "description": "<p> This data type is used as a request parameter in the <a>ModifyDBParameterGroup</a> and <a>ResetDBParameterGroup</a> actions. </p> <p>This data type is used as a response element in the <a>DescribeEngineDefaultParameters</a> and <a>DescribeDBParameters</a> actions.</p>",
                "properties": {
                    "AllowedValues": {
                        "description": "Specifies the valid range of values for the parameter.",
                        "type": "string"
                    },
                    "ApplyMethod": {
                        "description": "Indicates when to apply parameter updates.",
                        "enum": [
                            "immediate",
                            "pending-reboot"
                        ],
                        "type": "string"
                    },
                    "ApplyType": {
                        "description": "Specifies the engine specific parameters type.",
                        "type": "string"
                    },
                    "DataType": {
                        "description": "Specifies the valid data type for the parameter.",
                        "type": "string"
                    },
                    "Description": {
                        "description": "Provides a description of the parameter.",
                        "type": "string"
                    },
                    "IsModifiable": {
                        "description": " Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed. ",
                        "type": "boolean"
                    },
                    "MinimumEngineVersion": {
                        "description": "The earliest engine version to which the parameter can apply.",
                        "type": "string"
                    },
                    "ParameterName": {
                        "description": "Specifies the name of the parameter.",
                        "type": "string"
                    },
                    "ParameterValue": {
                        "description": "Specifies the value of the parameter.",
                        "type": "string"
                    },
                    "Source": {
                        "description": "Indicates the source of the parameter value.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ParametersList": {
                "items": {
                    "description": "<p> This data type is used as a request parameter in the <a>ModifyDBParameterGroup</a> and <a>ResetDBParameterGroup</a> actions. </p> <p>This data type is used as a response element in the <a>DescribeEngineDefaultParameters</a> and <a>DescribeDBParameters</a> actions.</p>",
                    "properties": {
                        "AllowedValues": {
                            "description": "Specifies the valid range of values for the parameter.",
                            "type": "string"
                        },
                        "ApplyMethod": {
                            "description": "Indicates when to apply parameter updates.",
                            "enum": [
                                "immediate",
                                "pending-reboot"
                            ],
                            "type": "string"
                        },
                        "ApplyType": {
                            "description": "Specifies the engine specific parameters type.",
                            "type": "string"
                        },
                        "DataType": {
                            "description": "Specifies the valid data type for the parameter.",
                            "type": "string"
                        },
                        "Description": {
                            "description": "Provides a description of the parameter.",
                            "type": "string"
                        },
                        "IsModifiable": {
                            "description": " Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed. ",
                            "type": "boolean"
                        },
                        "MinimumEngineVersion": {
                            "description": "The earliest engine version to which the parameter can apply.",
                            "type": "string"
                        },
                        "ParameterName": {
                            "description": "Specifies the name of the parameter.",
                            "type": "string"
                        },
                        "ParameterValue": {
                            "description": "Specifies the value of the parameter.",
                            "type": "string"
                        },
                        "Source": {
                            "description": "Indicates the source of the parameter value.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "PendingCloudwatchLogsExports": {
                "description": "A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated.",
                "properties": {
                    "LogTypesToDisable": {
                        "description": "Log types that are in the process of being enabled. After they are enabled, these log types are exported to CloudWatch Logs.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "LogTypesToEnable": {
                        "description": "Log types that are in the process of being deactivated. After they are deactivated, these log types aren't exported to CloudWatch Logs.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "PendingMaintenanceAction": {
                "description": "Provides information about a pending maintenance action for a resource.",
                "properties": {
                    "Action": {
                        "description": "The type of pending maintenance action that is available for the resource.",
                        "type": "string"
                    },
                    "AutoAppliedAfterDate": {
                        "description": "The date of the maintenance window when the action is applied. The maintenance action is applied to the resource during its first maintenance window after this date. If this date is specified, any <code>next-maintenance</code> opt-in requests are ignored.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "CurrentApplyDate": {
                        "description": "The effective date when the pending maintenance action is applied to the resource. This date takes into account opt-in requests received from the <a>ApplyPendingMaintenanceAction</a> API, the <code>AutoAppliedAfterDate</code>, and the <code>ForcedApplyDate</code>. This value is blank if an opt-in request has not been received and nothing has been specified as <code>AutoAppliedAfterDate</code> or <code>ForcedApplyDate</code>.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Description": {
                        "description": "A description providing more detail about the maintenance action.",
                        "type": "string"
                    },
                    "ForcedApplyDate": {
                        "description": "The date when the maintenance action is automatically applied. The maintenance action is applied to the resource on this date regardless of the maintenance window for the resource. If this date is specified, any <code>immediate</code> opt-in requests are ignored.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "OptInStatus": {
                        "description": "Indicates the type of opt-in request that has been received for the resource.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PendingMaintenanceActionDetails": {
                "items": {
                    "description": "Provides information about a pending maintenance action for a resource.",
                    "properties": {
                        "Action": {
                            "description": "The type of pending maintenance action that is available for the resource.",
                            "type": "string"
                        },
                        "AutoAppliedAfterDate": {
                            "description": "The date of the maintenance window when the action is applied. The maintenance action is applied to the resource during its first maintenance window after this date. If this date is specified, any <code>next-maintenance</code> opt-in requests are ignored.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "CurrentApplyDate": {
                            "description": "The effective date when the pending maintenance action is applied to the resource. This date takes into account opt-in requests received from the <a>ApplyPendingMaintenanceAction</a> API, the <code>AutoAppliedAfterDate</code>, and the <code>ForcedApplyDate</code>. This value is blank if an opt-in request has not been received and nothing has been specified as <code>AutoAppliedAfterDate</code> or <code>ForcedApplyDate</code>.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "Description": {
                            "description": "A description providing more detail about the maintenance action.",
                            "type": "string"
                        },
                        "ForcedApplyDate": {
                            "description": "The date when the maintenance action is automatically applied. The maintenance action is applied to the resource on this date regardless of the maintenance window for the resource. If this date is specified, any <code>immediate</code> opt-in requests are ignored.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "OptInStatus": {
                            "description": "Indicates the type of opt-in request that has been received for the resource.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "PendingMaintenanceActions": {
                "items": {
                    "description": "Describes the pending maintenance actions for a resource.",
                    "properties": {
                        "PendingMaintenanceActionDetails": {
                            "description": "A list that provides details about the pending maintenance actions for the resource.",
                            "items": {
                                "description": "Provides information about a pending maintenance action for a resource.",
                                "properties": {
                                    "Action": {
                                        "description": "The type of pending maintenance action that is available for the resource.",
                                        "type": "string"
                                    },
                                    "AutoAppliedAfterDate": {
                                        "description": "The date of the maintenance window when the action is applied. The maintenance action is applied to the resource during its first maintenance window after this date. If this date is specified, any <code>next-maintenance</code> opt-in requests are ignored.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "CurrentApplyDate": {
                                        "description": "The effective date when the pending maintenance action is applied to the resource. This date takes into account opt-in requests received from the <a>ApplyPendingMaintenanceAction</a> API, the <code>AutoAppliedAfterDate</code>, and the <code>ForcedApplyDate</code>. This value is blank if an opt-in request has not been received and nothing has been specified as <code>AutoAppliedAfterDate</code> or <code>ForcedApplyDate</code>.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Description": {
                                        "description": "A description providing more detail about the maintenance action.",
                                        "type": "string"
                                    },
                                    "ForcedApplyDate": {
                                        "description": "The date when the maintenance action is automatically applied. The maintenance action is applied to the resource on this date regardless of the maintenance window for the resource. If this date is specified, any <code>immediate</code> opt-in requests are ignored.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "OptInStatus": {
                                        "description": "Indicates the type of opt-in request that has been received for the resource.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "ResourceIdentifier": {
                            "description": "The ARN of the resource that has pending maintenance actions.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "PendingMaintenanceActionsMessage": {
                "description": "Data returned from the <b>DescribePendingMaintenanceActions</b> action.",
                "properties": {
                    "Marker": {
                        "description": " An optional pagination token provided by a previous <code>DescribePendingMaintenanceActions</code> request. If this parameter is specified, the response includes only records beyond the marker, up to a number of records specified by <code>MaxRecords</code>. ",
                        "type": "string"
                    },
                    "PendingMaintenanceActions": {
                        "description": "A list of the pending maintenance actions for the resource.",
                        "items": {
                            "description": "Describes the pending maintenance actions for a resource.",
                            "properties": {
                                "PendingMaintenanceActionDetails": {
                                    "description": "A list that provides details about the pending maintenance actions for the resource.",
                                    "items": {
                                        "description": "Provides information about a pending maintenance action for a resource.",
                                        "properties": {
                                            "Action": {
                                                "description": "The type of pending maintenance action that is available for the resource.",
                                                "type": "string"
                                            },
                                            "AutoAppliedAfterDate": {
                                                "description": "The date of the maintenance window when the action is applied. The maintenance action is applied to the resource during its first maintenance window after this date. If this date is specified, any <code>next-maintenance</code> opt-in requests are ignored.",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "CurrentApplyDate": {
                                                "description": "The effective date when the pending maintenance action is applied to the resource. This date takes into account opt-in requests received from the <a>ApplyPendingMaintenanceAction</a> API, the <code>AutoAppliedAfterDate</code>, and the <code>ForcedApplyDate</code>. This value is blank if an opt-in request has not been received and nothing has been specified as <code>AutoAppliedAfterDate</code> or <code>ForcedApplyDate</code>.",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "Description": {
                                                "description": "A description providing more detail about the maintenance action.",
                                                "type": "string"
                                            },
                                            "ForcedApplyDate": {
                                                "description": "The date when the maintenance action is automatically applied. The maintenance action is applied to the resource on this date regardless of the maintenance window for the resource. If this date is specified, any <code>immediate</code> opt-in requests are ignored.",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "OptInStatus": {
                                                "description": "Indicates the type of opt-in request that has been received for the resource.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "ResourceIdentifier": {
                                    "description": "The ARN of the resource that has pending maintenance actions.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "PendingModifiedValues": {
                "description": " This data type is used as a response element in the <a>ModifyDBInstance</a> action. ",
                "properties": {
                    "AllocatedStorage": {
                        "description": " Contains the new <code>AllocatedStorage</code> size for the DB instance that will be applied or is currently being applied. ",
                        "type": "integer"
                    },
                    "BackupRetentionPeriod": {
                        "description": "Specifies the pending number of days for which automated backups are retained.",
                        "type": "integer"
                    },
                    "CACertificateIdentifier": {
                        "description": "Specifies the identifier of the CA certificate for the DB instance.",
                        "type": "string"
                    },
                    "DBInstanceClass": {
                        "description": " Contains the new <code>DBInstanceClass</code> for the DB instance that will be applied or is currently being applied. ",
                        "type": "string"
                    },
                    "DBInstanceIdentifier": {
                        "description": " Contains the new <code>DBInstanceIdentifier</code> for the DB instance that will be applied or is currently being applied. ",
                        "type": "string"
                    },
                    "DBSubnetGroupName": {
                        "description": "The new DB subnet group for the DB instance. ",
                        "type": "string"
                    },
                    "EngineVersion": {
                        "description": "Indicates the database engine version.",
                        "type": "string"
                    },
                    "Iops": {
                        "description": "Specifies the new Provisioned IOPS value for the DB instance that will be applied or is currently being applied.",
                        "type": "integer"
                    },
                    "LicenseModel": {
                        "description": "<p>The license model for the DB instance.</p> <p>Valid values: <code>license-included</code> | <code>bring-your-own-license</code> | <code>general-public-license</code> </p>",
                        "type": "string"
                    },
                    "MasterUserPassword": {
                        "description": "Contains the pending or currently-in-progress change of the master credentials for the DB instance.",
                        "type": "string"
                    },
                    "MultiAZ": {
                        "description": "Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.",
                        "type": "boolean"
                    },
                    "PendingCloudwatchLogsExports": {
                        "description": "A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated.",
                        "properties": {
                            "LogTypesToDisable": {
                                "description": "Log types that are in the process of being enabled. After they are enabled, these log types are exported to CloudWatch Logs.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "LogTypesToEnable": {
                                "description": "Log types that are in the process of being deactivated. After they are deactivated, these log types aren't exported to CloudWatch Logs.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    "Port": {
                        "description": "Specifies the pending port for the DB instance.",
                        "type": "integer"
                    },
                    "StorageType": {
                        "description": "Specifies the storage type to be associated with the DB instance.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PromoteReadReplicaDBClusterMessage": {
                "description": "<p/>",
                "properties": {
                    "DBClusterIdentifier": {
                        "description": "<p>The identifier of the DB cluster Read Replica to promote. This parameter is not case-sensitive. </p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBCluster Read Replica.</p> </li> </ul> <p>Example: <code>my-cluster-replica1</code> </p>",
                        "type": "string"
                    }
                },
                "required": [
                    "DBClusterIdentifier"
                ],
                "type": "object"
            },
            "PromoteReadReplicaDBClusterResult": {
                "properties": {
                    "DBCluster": {
                        "description": "<p>Contains the details of an Amazon Neptune DB cluster. </p> <p>This data type is used as a response element in the <a>DescribeDBClusters</a> action. </p>",
                        "properties": {
                            "AllocatedStorage": {
                                "description": " <code>AllocatedStorage</code> always returns 1, because Neptune DB cluster storage size is not fixed, but instead automatically adjusts as needed.",
                                "type": "integer"
                            },
                            "AssociatedRoles": {
                                "description": "Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.",
                                "items": {
                                    "description": "Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.",
                                    "properties": {
                                        "RoleArn": {
                                            "description": "The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "<p>Describes the state of association between the IAM role and the DB cluster. The Status property returns one of the following values:</p> <ul> <li> <p> <code>ACTIVE</code> - the IAM role ARN is associated with the DB cluster and can be used to access other AWS services on your behalf.</p> </li> <li> <p> <code>PENDING</code> - the IAM role ARN is being associated with the DB cluster.</p> </li> <li> <p> <code>INVALID</code> - the IAM role ARN is associated with the DB cluster, but the DB cluster is unable to assume the IAM role in order to access other AWS services on your behalf.</p> </li> </ul>",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "AvailabilityZones": {
                                "description": "Provides the list of EC2 Availability Zones that instances in the DB cluster can be created in.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "BackupRetentionPeriod": {
                                "description": "Specifies the number of days for which automatic DB snapshots are retained.",
                                "type": "integer"
                            },
                            "CharacterSetName": {
                                "description": "If present, specifies the name of the character set that this cluster is associated with.",
                                "type": "string"
                            },
                            "CloneGroupId": {
                                "description": "Identifies the clone group to which the DB cluster is associated.",
                                "type": "string"
                            },
                            "ClusterCreateTime": {
                                "description": "Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).",
                                "format": "date-time",
                                "type": "string"
                            },
                            "DBClusterArn": {
                                "description": "The Amazon Resource Name (ARN) for the DB cluster.",
                                "type": "string"
                            },
                            "DBClusterIdentifier": {
                                "description": "Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.",
                                "type": "string"
                            },
                            "DBClusterMembers": {
                                "description": "Provides the list of instances that make up the DB cluster.",
                                "items": {
                                    "description": "Contains information about an instance that is part of a DB cluster.",
                                    "properties": {
                                        "DBClusterParameterGroupStatus": {
                                            "description": "Specifies the status of the DB cluster parameter group for this member of the DB cluster.",
                                            "type": "string"
                                        },
                                        "DBInstanceIdentifier": {
                                            "description": "Specifies the instance identifier for this member of the DB cluster.",
                                            "type": "string"
                                        },
                                        "IsClusterWriter": {
                                            "description": "Value that is <code>true</code> if the cluster member is the primary instance for the DB cluster and <code>false</code> otherwise.",
                                            "type": "boolean"
                                        },
                                        "PromotionTier": {
                                            "description": "A value that specifies the order in which a Read Replica is promoted to the primary instance after a failure of the existing primary instance. ",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "DBClusterOptionGroupMemberships": {
                                "description": "Provides the list of option group memberships for this DB cluster.",
                                "items": {
                                    "description": "Contains status information for a DB cluster option group.",
                                    "properties": {
                                        "DBClusterOptionGroupName": {
                                            "description": "Specifies the name of the DB cluster option group.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "Specifies the status of the DB cluster option group.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "DBClusterParameterGroup": {
                                "description": "Specifies the name of the DB cluster parameter group for the DB cluster.",
                                "type": "string"
                            },
                            "DBSubnetGroup": {
                                "description": "Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group.",
                                "type": "string"
                            },
                            "DatabaseName": {
                                "description": "Contains the name of the initial database of this DB cluster that was provided at create time, if one was specified when the DB cluster was created. This same name is returned for the life of the DB cluster.",
                                "type": "string"
                            },
                            "DbClusterResourceId": {
                                "description": "The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.",
                                "type": "string"
                            },
                            "EarliestRestorableTime": {
                                "description": "Specifies the earliest time to which a database can be restored with point-in-time restore.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "Endpoint": {
                                "description": "Specifies the connection endpoint for the primary instance of the DB cluster.",
                                "type": "string"
                            },
                            "Engine": {
                                "description": "Provides the name of the database engine to be used for this DB cluster.",
                                "type": "string"
                            },
                            "EngineVersion": {
                                "description": "Indicates the database engine version.",
                                "type": "string"
                            },
                            "HostedZoneId": {
                                "description": "Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.",
                                "type": "string"
                            },
                            "IAMDatabaseAuthenticationEnabled": {
                                "description": "True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.",
                                "type": "boolean"
                            },
                            "KmsKeyId": {
                                "description": "If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB cluster.",
                                "type": "string"
                            },
                            "LatestRestorableTime": {
                                "description": "Specifies the latest time to which a database can be restored with point-in-time restore.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "MasterUsername": {
                                "description": "Contains the master username for the DB cluster.",
                                "type": "string"
                            },
                            "MultiAZ": {
                                "description": "Specifies whether the DB cluster has instances in multiple Availability Zones.",
                                "type": "boolean"
                            },
                            "PercentProgress": {
                                "description": "Specifies the progress of the operation as a percentage.",
                                "type": "string"
                            },
                            "Port": {
                                "description": "Specifies the port that the database engine is listening on.",
                                "type": "integer"
                            },
                            "PreferredBackupWindow": {
                                "description": "Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. ",
                                "type": "string"
                            },
                            "PreferredMaintenanceWindow": {
                                "description": "Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
                                "type": "string"
                            },
                            "ReadReplicaIdentifiers": {
                                "description": "Contains one or more identifiers of the Read Replicas associated with this DB cluster.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "ReaderEndpoint": {
                                "description": "<p>The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances connections across the Read Replicas that are available in a DB cluster. As clients request new connections to the reader endpoint, Neptune distributes the connection requests among the Read Replicas in the DB cluster. This functionality can help balance your read workload across multiple Read Replicas in your DB cluster. </p> <p>If a failover occurs, and the Read Replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Read Replicas in the cluster, you can then reconnect to the reader endpoint.</p>",
                                "type": "string"
                            },
                            "ReplicationSourceIdentifier": {
                                "description": "Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.",
                                "type": "string"
                            },
                            "Status": {
                                "description": "Specifies the current state of this DB cluster.",
                                "type": "string"
                            },
                            "StorageEncrypted": {
                                "description": "Specifies whether the DB cluster is encrypted.",
                                "type": "boolean"
                            },
                            "VpcSecurityGroups": {
                                "description": "Provides a list of VPC security groups that the DB cluster belongs to.",
                                "items": {
                                    "description": "This data type is used as a response element for queries on VPC security group membership.",
                                    "properties": {
                                        "Status": {
                                            "description": "The status of the VPC security group.",
                                            "type": "string"
                                        },
                                        "VpcSecurityGroupId": {
                                            "description": "The name of the VPC security group.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ProvisionedIopsNotAvailableInAZFault": {
                "description": "Provisioned IOPS not available in the specified Availability Zone.",
                "properties": {},
                "type": "object"
            },
            "Range": {
                "description": "A range of integer values.",
                "properties": {
                    "From": {
                        "description": "The minimum value in the range.",
                        "type": "integer"
                    },
                    "Step": {
                        "description": "The step value for the range. For example, if you have a range of 5,000 to 10,000, with a step value of 1,000, the valid values start at 5,000 and step up by 1,000. Even though 7,500 is within the range, it isn't a valid value for the range. The valid values are 5,000, 6,000, 7,000, 8,000... ",
                        "type": "integer"
                    },
                    "To": {
                        "description": "The maximum value in the range.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "RangeList": {
                "items": {
                    "description": "A range of integer values.",
                    "properties": {
                        "From": {
                            "description": "The minimum value in the range.",
                            "type": "integer"
                        },
                        "Step": {
                            "description": "The step value for the range. For example, if you have a range of 5,000 to 10,000, with a step value of 1,000, the valid values start at 5,000 and step up by 1,000. Even though 7,500 is within the range, it isn't a valid value for the range. The valid values are 5,000, 6,000, 7,000, 8,000... ",
                            "type": "integer"
                        },
                        "To": {
                            "description": "The maximum value in the range.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "ReadReplicaDBClusterIdentifierList": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "ReadReplicaDBInstanceIdentifierList": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "ReadReplicaIdentifierList": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "RebootDBInstanceMessage": {
                "description": "<p/>",
                "properties": {
                    "DBInstanceIdentifier": {
                        "description": "<p>The DB instance identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBInstance.</p> </li> </ul>",
                        "type": "string"
                    },
                    "ForceFailover": {
                        "description": "<p> When <code>true</code>, the reboot is conducted through a MultiAZ failover. </p> <p>Constraint: You can't specify <code>true</code> if the instance is not configured for MultiAZ.</p>",
                        "type": "boolean"
                    }
                },
                "required": [
                    "DBInstanceIdentifier"
                ],
                "type": "object"
            },
            "RebootDBInstanceResult": {
                "properties": {
                    "DBInstance": {
                        "description": "<p>Contains the details of an Amazon Neptune DB instance. </p> <p>This data type is used as a response element in the <a>DescribeDBInstances</a> action. </p>",
                        "properties": {
                            "AllocatedStorage": {
                                "description": "Specifies the allocated storage size specified in gibibytes.",
                                "type": "integer"
                            },
                            "AutoMinorVersionUpgrade": {
                                "description": "Indicates that minor version patches are applied automatically.",
                                "type": "boolean"
                            },
                            "AvailabilityZone": {
                                "description": "Specifies the name of the Availability Zone the DB instance is located in.",
                                "type": "string"
                            },
                            "BackupRetentionPeriod": {
                                "description": "Specifies the number of days for which automatic DB snapshots are retained.",
                                "type": "integer"
                            },
                            "CACertificateIdentifier": {
                                "description": "The identifier of the CA certificate for this DB instance.",
                                "type": "string"
                            },
                            "CharacterSetName": {
                                "description": "If present, specifies the name of the character set that this instance is associated with.",
                                "type": "string"
                            },
                            "CopyTagsToSnapshot": {
                                "description": "Specifies whether tags are copied from the DB instance to snapshots of the DB instance.",
                                "type": "boolean"
                            },
                            "DBClusterIdentifier": {
                                "description": "If the DB instance is a member of a DB cluster, contains the name of the DB cluster that the DB instance is a member of.",
                                "type": "string"
                            },
                            "DBInstanceArn": {
                                "description": "The Amazon Resource Name (ARN) for the DB instance.",
                                "type": "string"
                            },
                            "DBInstanceClass": {
                                "description": "Contains the name of the compute and memory capacity class of the DB instance.",
                                "type": "string"
                            },
                            "DBInstanceIdentifier": {
                                "description": "Contains a user-supplied database identifier. This identifier is the unique key that identifies a DB instance.",
                                "type": "string"
                            },
                            "DBInstanceStatus": {
                                "description": "Specifies the current state of this database.",
                                "type": "string"
                            },
                            "DBName": {
                                "description": "The database name.",
                                "type": "string"
                            },
                            "DBParameterGroups": {
                                "description": "Provides the list of DB parameter groups applied to this DB instance.",
                                "items": {
                                    "description": "<p>The status of the DB parameter group.</p> <p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>CreateDBInstance</a> </p> </li> <li> <p> <a>DeleteDBInstance</a> </p> </li> <li> <p> <a>ModifyDBInstance</a> </p> </li> <li> <p> <a>RebootDBInstance</a> </p> </li> </ul>",
                                    "properties": {
                                        "DBParameterGroupName": {
                                            "description": "The name of the DP parameter group.",
                                            "type": "string"
                                        },
                                        "ParameterApplyStatus": {
                                            "description": "The status of parameter updates.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "DBSecurityGroups": {
                                "description": " Provides List of DB security group elements containing only <code>DBSecurityGroup.Name</code> and <code>DBSecurityGroup.Status</code> subelements. ",
                                "items": {
                                    "description": "<p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>ModifyDBInstance</a> </p> </li> <li> <p> <a>RebootDBInstance</a> </p> </li> </ul>",
                                    "properties": {
                                        "DBSecurityGroupName": {
                                            "description": "The name of the DB security group.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of the DB security group.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "DBSubnetGroup": {
                                "description": "Specifies information on the subnet group associated with the DB instance, including the name, description, and subnets in the subnet group.",
                                "properties": {
                                    "DBSubnetGroupArn": {
                                        "description": "The Amazon Resource Name (ARN) for the DB subnet group.",
                                        "type": "string"
                                    },
                                    "DBSubnetGroupDescription": {
                                        "description": "Provides the description of the DB subnet group.",
                                        "type": "string"
                                    },
                                    "DBSubnetGroupName": {
                                        "description": "The name of the DB subnet group.",
                                        "type": "string"
                                    },
                                    "SubnetGroupStatus": {
                                        "description": "Provides the status of the DB subnet group.",
                                        "type": "string"
                                    },
                                    "Subnets": {
                                        "description": " Contains a list of <a>Subnet</a> elements. ",
                                        "items": {
                                            "description": " This data type is used as a response element in the <a>DescribeDBSubnetGroups</a> action. ",
                                            "properties": {
                                                "SubnetAvailabilityZone": {
                                                    "description": "<p>Contains Availability Zone information.</p> <p> This data type is used as an element in the following data type:</p> <ul> <li> <p> <a>OrderableDBInstanceOption</a> </p> </li> </ul>",
                                                    "properties": {
                                                        "Name": {
                                                            "description": "The name of the availability zone.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "SubnetIdentifier": {
                                                    "description": "Specifies the identifier of the subnet.",
                                                    "type": "string"
                                                },
                                                "SubnetStatus": {
                                                    "description": "Specifies the status of the subnet.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "VpcId": {
                                        "description": "Provides the VpcId of the DB subnet group.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "DbInstancePort": {
                                "description": "Specifies the port that the DB instance listens on. If the DB instance is part of a DB cluster, this can be a different port than the DB cluster port.",
                                "type": "integer"
                            },
                            "DbiResourceId": {
                                "description": "The AWS Region-unique, immutable identifier for the DB instance. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.",
                                "type": "string"
                            },
                            "DomainMemberships": {
                                "description": "Not supported",
                                "items": {
                                    "description": "An Active Directory Domain membership record associated with the DB instance.",
                                    "properties": {
                                        "Domain": {
                                            "description": "The identifier of the Active Directory Domain.",
                                            "type": "string"
                                        },
                                        "FQDN": {
                                            "description": "The fully qualified domain name of the Active Directory Domain.",
                                            "type": "string"
                                        },
                                        "IAMRoleName": {
                                            "description": "The name of the IAM role to be used when making API calls to the Directory Service.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of the DB instance's Active Directory Domain membership, such as joined, pending-join, failed etc).",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "EnabledCloudwatchLogsExports": {
                                "description": "A list of log types that this DB instance is configured to export to CloudWatch Logs.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "Endpoint": {
                                "description": "Specifies the connection endpoint.",
                                "properties": {
                                    "Address": {
                                        "description": "Specifies the DNS address of the DB instance.",
                                        "type": "string"
                                    },
                                    "HostedZoneId": {
                                        "description": "Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.",
                                        "type": "string"
                                    },
                                    "Port": {
                                        "description": "Specifies the port that the database engine is listening on.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "Engine": {
                                "description": "Provides the name of the database engine to be used for this DB instance.",
                                "type": "string"
                            },
                            "EngineVersion": {
                                "description": "Indicates the database engine version.",
                                "type": "string"
                            },
                            "EnhancedMonitoringResourceArn": {
                                "description": "The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the Enhanced Monitoring metrics data for the DB instance.",
                                "type": "string"
                            },
                            "IAMDatabaseAuthenticationEnabled": {
                                "description": "True if AWS Identity and Access Management (IAM) authentication is enabled, and otherwise false.",
                                "type": "boolean"
                            },
                            "InstanceCreateTime": {
                                "description": "Provides the date and time the DB instance was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "Iops": {
                                "description": "Specifies the Provisioned IOPS (I/O operations per second) value.",
                                "type": "integer"
                            },
                            "KmsKeyId": {
                                "description": " If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB instance. ",
                                "type": "string"
                            },
                            "LatestRestorableTime": {
                                "description": "Specifies the latest time to which a database can be restored with point-in-time restore.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "LicenseModel": {
                                "description": "License model information for this DB instance.",
                                "type": "string"
                            },
                            "MasterUsername": {
                                "description": "Contains the master username for the DB instance.",
                                "type": "string"
                            },
                            "MonitoringInterval": {
                                "description": "The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance.",
                                "type": "integer"
                            },
                            "MonitoringRoleArn": {
                                "description": "The ARN for the IAM role that permits Neptune to send Enhanced Monitoring metrics to Amazon CloudWatch Logs.",
                                "type": "string"
                            },
                            "MultiAZ": {
                                "description": "Specifies if the DB instance is a Multi-AZ deployment.",
                                "type": "boolean"
                            },
                            "OptionGroupMemberships": {
                                "description": "Provides the list of option group memberships for this DB instance.",
                                "items": {
                                    "description": "Provides information on the option groups the DB instance is a member of.",
                                    "properties": {
                                        "OptionGroupName": {
                                            "description": "The name of the option group that the instance belongs to.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The status of the DB instance's option group membership. Valid values are: <code>in-sync</code>, <code>pending-apply</code>, <code>pending-removal</code>, <code>pending-maintenance-apply</code>, <code>pending-maintenance-removal</code>, <code>applying</code>, <code>removing</code>, and <code>failed</code>. ",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "PendingModifiedValues": {
                                "description": "Specifies that changes to the DB instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements.",
                                "properties": {
                                    "AllocatedStorage": {
                                        "description": " Contains the new <code>AllocatedStorage</code> size for the DB instance that will be applied or is currently being applied. ",
                                        "type": "integer"
                                    },
                                    "BackupRetentionPeriod": {
                                        "description": "Specifies the pending number of days for which automated backups are retained.",
                                        "type": "integer"
                                    },
                                    "CACertificateIdentifier": {
                                        "description": "Specifies the identifier of the CA certificate for the DB instance.",
                                        "type": "string"
                                    },
                                    "DBInstanceClass": {
                                        "description": " Contains the new <code>DBInstanceClass</code> for the DB instance that will be applied or is currently being applied. ",
                                        "type": "string"
                                    },
                                    "DBInstanceIdentifier": {
                                        "description": " Contains the new <code>DBInstanceIdentifier</code> for the DB instance that will be applied or is currently being applied. ",
                                        "type": "string"
                                    },
                                    "DBSubnetGroupName": {
                                        "description": "The new DB subnet group for the DB instance. ",
                                        "type": "string"
                                    },
                                    "EngineVersion": {
                                        "description": "Indicates the database engine version.",
                                        "type": "string"
                                    },
                                    "Iops": {
                                        "description": "Specifies the new Provisioned IOPS value for the DB instance that will be applied or is currently being applied.",
                                        "type": "integer"
                                    },
                                    "LicenseModel": {
                                        "description": "<p>The license model for the DB instance.</p> <p>Valid values: <code>license-included</code> | <code>bring-your-own-license</code> | <code>general-public-license</code> </p>",
                                        "type": "string"
                                    },
                                    "MasterUserPassword": {
                                        "description": "Contains the pending or currently-in-progress change of the master credentials for the DB instance.",
                                        "type": "string"
                                    },
                                    "MultiAZ": {
                                        "description": "Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.",
                                        "type": "boolean"
                                    },
                                    "PendingCloudwatchLogsExports": {
                                        "description": "A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated.",
                                        "properties": {
                                            "LogTypesToDisable": {
                                                "description": "Log types that are in the process of being enabled. After they are enabled, these log types are exported to CloudWatch Logs.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "LogTypesToEnable": {
                                                "description": "Log types that are in the process of being deactivated. After they are deactivated, these log types aren't exported to CloudWatch Logs.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Port": {
                                        "description": "Specifies the pending port for the DB instance.",
                                        "type": "integer"
                                    },
                                    "StorageType": {
                                        "description": "Specifies the storage type to be associated with the DB instance.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "PerformanceInsightsEnabled": {
                                "description": "True if Performance Insights is enabled for the DB instance, and otherwise false.",
                                "type": "boolean"
                            },
                            "PerformanceInsightsKMSKeyId": {
                                "description": "The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.",
                                "type": "string"
                            },
                            "PreferredBackupWindow": {
                                "description": " Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. ",
                                "type": "string"
                            },
                            "PreferredMaintenanceWindow": {
                                "description": "Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
                                "type": "string"
                            },
                            "PromotionTier": {
                                "description": "A value that specifies the order in which a Read Replica is promoted to the primary instance after a failure of the existing primary instance. ",
                                "type": "integer"
                            },
                            "PubliclyAccessible": {
                                "description": "This parameter is not supported.",
                                "type": "boolean"
                            },
                            "ReadReplicaDBClusterIdentifiers": {
                                "description": "Contains one or more identifiers of DB clusters that are Read Replicas of this DB instance.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "ReadReplicaDBInstanceIdentifiers": {
                                "description": "Contains one or more identifiers of the Read Replicas associated with this DB instance.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "ReadReplicaSourceDBInstanceIdentifier": {
                                "description": "Contains the identifier of the source DB instance if this DB instance is a Read Replica.",
                                "type": "string"
                            },
                            "SecondaryAvailabilityZone": {
                                "description": "If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support.",
                                "type": "string"
                            },
                            "StatusInfos": {
                                "description": "The status of a Read Replica. If the instance is not a Read Replica, this is blank.",
                                "items": {
                                    "description": "Provides a list of status information for a DB instance.",
                                    "properties": {
                                        "Message": {
                                            "description": "Details of the error if there is an error for the instance. If the instance is not in an error state, this value is blank.",
                                            "type": "string"
                                        },
                                        "Normal": {
                                            "description": "Boolean value that is true if the instance is operating normally, or false if the instance is in an error state.",
                                            "type": "boolean"
                                        },
                                        "Status": {
                                            "description": "Status of the DB instance. For a StatusType of read replica, the values can be replicating, error, stopped, or terminated.",
                                            "type": "string"
                                        },
                                        "StatusType": {
                                            "description": "This value is currently \"read replication.\"",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "StorageEncrypted": {
                                "description": "Specifies whether the DB instance is encrypted.",
                                "type": "boolean"
                            },
                            "StorageType": {
                                "description": "Specifies the storage type associated with DB instance.",
                                "type": "string"
                            },
                            "TdeCredentialArn": {
                                "description": "The ARN from the key store with which the instance is associated for TDE encryption.",
                                "type": "string"
                            },
                            "Timezone": {
                                "description": "Not supported. ",
                                "type": "string"
                            },
                            "VpcSecurityGroups": {
                                "description": "Provides a list of VPC security group elements that the DB instance belongs to.",
                                "items": {
                                    "description": "This data type is used as a response element for queries on VPC security group membership.",
                                    "properties": {
                                        "Status": {
                                            "description": "The status of the VPC security group.",
                                            "type": "string"
                                        },
                                        "VpcSecurityGroupId": {
                                            "description": "The name of the VPC security group.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "RemoveRoleFromDBClusterMessage": {
                "properties": {
                    "DBClusterIdentifier": {
                        "description": "The name of the DB cluster to disassociate the IAM role from.",
                        "type": "string"
                    },
                    "RoleArn": {
                        "description": "The Amazon Resource Name (ARN) of the IAM role to disassociate from the DB cluster, for example <code>arn:aws:iam::123456789012:role/NeptuneAccessRole</code>.",
                        "type": "string"
                    }
                },
                "required": [
                    "DBClusterIdentifier",
                    "RoleArn"
                ],
                "type": "object"
            },
            "RemoveSourceIdentifierFromSubscriptionMessage": {
                "description": "<p/>",
                "properties": {
                    "SourceIdentifier": {
                        "description": " The source identifier to be removed from the subscription, such as the <b>DB instance identifier</b> for a DB instance or the name of a security group. ",
                        "type": "string"
                    },
                    "SubscriptionName": {
                        "description": "The name of the event notification subscription you want to remove a source identifier from.",
                        "type": "string"
                    }
                },
                "required": [
                    "SubscriptionName",
                    "SourceIdentifier"
                ],
                "type": "object"
            },
            "RemoveSourceIdentifierFromSubscriptionResult": {
                "properties": {
                    "EventSubscription": {
                        "description": "Contains the results of a successful invocation of the <a>DescribeEventSubscriptions</a> action.",
                        "properties": {
                            "CustSubscriptionId": {
                                "description": "The event notification subscription Id.",
                                "type": "string"
                            },
                            "CustomerAwsId": {
                                "description": "The AWS customer account associated with the event notification subscription.",
                                "type": "string"
                            },
                            "Enabled": {
                                "description": "A Boolean value indicating if the subscription is enabled. True indicates the subscription is enabled.",
                                "type": "boolean"
                            },
                            "EventCategoriesList": {
                                "description": "A list of event categories for the event notification subscription.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "EventSubscriptionArn": {
                                "description": "The Amazon Resource Name (ARN) for the event subscription.",
                                "type": "string"
                            },
                            "SnsTopicArn": {
                                "description": "The topic ARN of the event notification subscription.",
                                "type": "string"
                            },
                            "SourceIdsList": {
                                "description": "A list of source IDs for the event notification subscription.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "SourceType": {
                                "description": "The source type for the event notification subscription.",
                                "type": "string"
                            },
                            "Status": {
                                "description": "<p>The status of the event notification subscription.</p> <p>Constraints:</p> <p>Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist</p> <p>The status \"no-permission\" indicates that Neptune no longer has permission to post to the SNS topic. The status \"topic-not-exist\" indicates that the topic was deleted after the subscription was created.</p>",
                                "type": "string"
                            },
                            "SubscriptionCreationTime": {
                                "description": "The time the event notification subscription was created.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "RemoveTagsFromResourceMessage": {
                "description": "<p/>",
                "properties": {
                    "ResourceName": {
                        "description": "The Amazon Neptune resource that the tags are removed from. This value is an Amazon Resource Name (ARN). For information about creating an ARN, see <a href=\"http://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing\"> Constructing an Amazon Resource Name (ARN)</a>.",
                        "type": "string"
                    },
                    "TagKeys": {
                        "description": "The tag key (name) of the tag to be removed.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "ResourceName",
                    "TagKeys"
                ],
                "type": "object"
            },
            "ResetDBClusterParameterGroupMessage": {
                "description": "<p/>",
                "properties": {
                    "DBClusterParameterGroupName": {
                        "description": "The name of the DB cluster parameter group to reset.",
                        "type": "string"
                    },
                    "Parameters": {
                        "description": "A list of parameter names in the DB cluster parameter group to reset to the default values. You can't use this parameter if the <code>ResetAllParameters</code> parameter is set to <code>true</code>.",
                        "items": {
                            "description": "<p> This data type is used as a request parameter in the <a>ModifyDBParameterGroup</a> and <a>ResetDBParameterGroup</a> actions. </p> <p>This data type is used as a response element in the <a>DescribeEngineDefaultParameters</a> and <a>DescribeDBParameters</a> actions.</p>",
                            "properties": {
                                "AllowedValues": {
                                    "description": "Specifies the valid range of values for the parameter.",
                                    "type": "string"
                                },
                                "ApplyMethod": {
                                    "description": "Indicates when to apply parameter updates.",
                                    "enum": [
                                        "immediate",
                                        "pending-reboot"
                                    ],
                                    "type": "string"
                                },
                                "ApplyType": {
                                    "description": "Specifies the engine specific parameters type.",
                                    "type": "string"
                                },
                                "DataType": {
                                    "description": "Specifies the valid data type for the parameter.",
                                    "type": "string"
                                },
                                "Description": {
                                    "description": "Provides a description of the parameter.",
                                    "type": "string"
                                },
                                "IsModifiable": {
                                    "description": " Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed. ",
                                    "type": "boolean"
                                },
                                "MinimumEngineVersion": {
                                    "description": "The earliest engine version to which the parameter can apply.",
                                    "type": "string"
                                },
                                "ParameterName": {
                                    "description": "Specifies the name of the parameter.",
                                    "type": "string"
                                },
                                "ParameterValue": {
                                    "description": "Specifies the value of the parameter.",
                                    "type": "string"
                                },
                                "Source": {
                                    "description": "Indicates the source of the parameter value.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "ResetAllParameters": {
                        "description": "A value that is set to <code>true</code> to reset all parameters in the DB cluster parameter group to their default values, and <code>false</code> otherwise. You can't use this parameter if there is a list of parameter names specified for the <code>Parameters</code> parameter.",
                        "type": "boolean"
                    }
                },
                "required": [
                    "DBClusterParameterGroupName"
                ],
                "type": "object"
            },
            "ResetDBParameterGroupMessage": {
                "description": "<p/>",
                "properties": {
                    "DBParameterGroupName": {
                        "description": "<p>The name of the DB parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must match the name of an existing DBParameterGroup.</p> </li> </ul>",
                        "type": "string"
                    },
                    "Parameters": {
                        "description": "<p>To reset the entire DB parameter group, specify the <code>DBParameterGroup</code> name and <code>ResetAllParameters</code> parameters. To reset specific parameters, provide a list of the following: <code>ParameterName</code> and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single request.</p> <p>Valid Values (for Apply method): <code>pending-reboot</code> </p>",
                        "items": {
                            "description": "<p> This data type is used as a request parameter in the <a>ModifyDBParameterGroup</a> and <a>ResetDBParameterGroup</a> actions. </p> <p>This data type is used as a response element in the <a>DescribeEngineDefaultParameters</a> and <a>DescribeDBParameters</a> actions.</p>",
                            "properties": {
                                "AllowedValues": {
                                    "description": "Specifies the valid range of values for the parameter.",
                                    "type": "string"
                                },
                                "ApplyMethod": {
                                    "description": "Indicates when to apply parameter updates.",
                                    "enum": [
                                        "immediate",
                                        "pending-reboot"
                                    ],
                                    "type": "string"
                                },
                                "ApplyType": {
                                    "description": "Specifies the engine specific parameters type.",
                                    "type": "string"
                                },
                                "DataType": {
                                    "description": "Specifies the valid data type for the parameter.",
                                    "type": "string"
                                },
                                "Description": {
                                    "description": "Provides a description of the parameter.",
                                    "type": "string"
                                },
                                "IsModifiable": {
                                    "description": " Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed. ",
                                    "type": "boolean"
                                },
                                "MinimumEngineVersion": {
                                    "description": "The earliest engine version to which the parameter can apply.",
                                    "type": "string"
                                },
                                "ParameterName": {
                                    "description": "Specifies the name of the parameter.",
                                    "type": "string"
                                },
                                "ParameterValue": {
                                    "description": "Specifies the value of the parameter.",
                                    "type": "string"
                                },
                                "Source": {
                                    "description": "Indicates the source of the parameter value.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "ResetAllParameters": {
                        "description": "<p> Specifies whether (<code>true</code>) or not (<code>false</code>) to reset all parameters in the DB parameter group to default values. </p> <p>Default: <code>true</code> </p>",
                        "type": "boolean"
                    }
                },
                "required": [
                    "DBParameterGroupName"
                ],
                "type": "object"
            },
            "ResourceNotFoundFault": {
                "description": "The specified resource ID was not found.",
                "properties": {},
                "type": "object"
            },
            "ResourcePendingMaintenanceActions": {
                "description": "Describes the pending maintenance actions for a resource.",
                "properties": {
                    "PendingMaintenanceActionDetails": {
                        "description": "A list that provides details about the pending maintenance actions for the resource.",
                        "items": {
                            "description": "Provides information about a pending maintenance action for a resource.",
                            "properties": {
                                "Action": {
                                    "description": "The type of pending maintenance action that is available for the resource.",
                                    "type": "string"
                                },
                                "AutoAppliedAfterDate": {
                                    "description": "The date of the maintenance window when the action is applied. The maintenance action is applied to the resource during its first maintenance window after this date. If this date is specified, any <code>next-maintenance</code> opt-in requests are ignored.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "CurrentApplyDate": {
                                    "description": "The effective date when the pending maintenance action is applied to the resource. This date takes into account opt-in requests received from the <a>ApplyPendingMaintenanceAction</a> API, the <code>AutoAppliedAfterDate</code>, and the <code>ForcedApplyDate</code>. This value is blank if an opt-in request has not been received and nothing has been specified as <code>AutoAppliedAfterDate</code> or <code>ForcedApplyDate</code>.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Description": {
                                    "description": "A description providing more detail about the maintenance action.",
                                    "type": "string"
                                },
                                "ForcedApplyDate": {
                                    "description": "The date when the maintenance action is automatically applied. The maintenance action is applied to the resource on this date regardless of the maintenance window for the resource. If this date is specified, any <code>immediate</code> opt-in requests are ignored.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "OptInStatus": {
                                    "description": "Indicates the type of opt-in request that has been received for the resource.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "ResourceIdentifier": {
                        "description": "The ARN of the resource that has pending maintenance actions.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RestoreDBClusterFromSnapshotMessage": {
                "description": "<p/>",
                "properties": {
                    "AvailabilityZones": {
                        "description": "Provides the list of EC2 Availability Zones that instances in the restored DB cluster can be created in.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "DBClusterIdentifier": {
                        "description": "<p>The name of the DB cluster to create from the DB snapshot or DB cluster snapshot. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-snapshot-id</code> </p>",
                        "type": "string"
                    },
                    "DBSubnetGroupName": {
                        "description": "<p>The name of the DB subnet group to use for the new DB cluster.</p> <p>Constraints: If supplied, must match the name of an existing DBSubnetGroup.</p> <p>Example: <code>mySubnetgroup</code> </p>",
                        "type": "string"
                    },
                    "DatabaseName": {
                        "description": "The database name for the restored DB cluster.",
                        "type": "string"
                    },
                    "EnableIAMDatabaseAuthentication": {
                        "description": "<p>True to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts, and otherwise false.</p> <p>Default: <code>false</code> </p>",
                        "type": "boolean"
                    },
                    "Engine": {
                        "description": "<p>The database engine to use for the new DB cluster.</p> <p>Default: The same as source</p> <p>Constraint: Must be compatible with the engine of the source</p>",
                        "type": "string"
                    },
                    "EngineVersion": {
                        "description": "The version of the database engine to use for the new DB cluster.",
                        "type": "string"
                    },
                    "KmsKeyId": {
                        "description": "<p>The AWS KMS key identifier to use when restoring an encrypted DB cluster from a DB snapshot or DB cluster snapshot.</p> <p>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are restoring a DB cluster with the same AWS account that owns the KMS encryption key used to encrypt the new DB cluster, then you can use the KMS key alias instead of the ARN for the KMS encryption key.</p> <p>If you do not specify a value for the <code>KmsKeyId</code> parameter, then the following will occur:</p> <ul> <li> <p>If the DB snapshot or DB cluster snapshot in <code>SnapshotIdentifier</code> is encrypted, then the restored DB cluster is encrypted using the KMS key that was used to encrypt the DB snapshot or DB cluster snapshot.</p> </li> <li> <p>If the DB snapshot or DB cluster snapshot in <code>SnapshotIdentifier</code> is not encrypted, then the restored DB cluster is not encrypted.</p> </li> </ul>",
                        "type": "string"
                    },
                    "OptionGroupName": {
                        "description": "The name of the option group to use for the restored DB cluster.",
                        "type": "string"
                    },
                    "Port": {
                        "description": "<p>The port number on which the new DB cluster accepts connections.</p> <p>Constraints: Value must be <code>1150-65535</code> </p> <p>Default: The same port as the original DB cluster.</p>",
                        "type": "integer"
                    },
                    "SnapshotIdentifier": {
                        "description": "<p>The identifier for the DB snapshot or DB cluster snapshot to restore from.</p> <p>You can use either the name or the Amazon Resource Name (ARN) to specify a DB cluster snapshot. However, you can use only the ARN to specify a DB snapshot.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing Snapshot.</p> </li> </ul>",
                        "type": "string"
                    },
                    "Tags": {
                        "description": "The tags to be assigned to the restored DB cluster.",
                        "items": {
                            "description": "Metadata assigned to an Amazon Neptune resource consisting of a key-value pair.",
                            "properties": {
                                "Key": {
                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "VpcSecurityGroupIds": {
                        "description": "A list of VPC security groups that the new DB cluster will belong to.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "DBClusterIdentifier",
                    "SnapshotIdentifier",
                    "Engine"
                ],
                "type": "object"
            },
            "RestoreDBClusterFromSnapshotResult": {
                "properties": {
                    "DBCluster": {
                        "description": "<p>Contains the details of an Amazon Neptune DB cluster. </p> <p>This data type is used as a response element in the <a>DescribeDBClusters</a> action. </p>",
                        "properties": {
                            "AllocatedStorage": {
                                "description": " <code>AllocatedStorage</code> always returns 1, because Neptune DB cluster storage size is not fixed, but instead automatically adjusts as needed.",
                                "type": "integer"
                            },
                            "AssociatedRoles": {
                                "description": "Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.",
                                "items": {
                                    "description": "Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.",
                                    "properties": {
                                        "RoleArn": {
                                            "description": "The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "<p>Describes the state of association between the IAM role and the DB cluster. The Status property returns one of the following values:</p> <ul> <li> <p> <code>ACTIVE</code> - the IAM role ARN is associated with the DB cluster and can be used to access other AWS services on your behalf.</p> </li> <li> <p> <code>PENDING</code> - the IAM role ARN is being associated with the DB cluster.</p> </li> <li> <p> <code>INVALID</code> - the IAM role ARN is associated with the DB cluster, but the DB cluster is unable to assume the IAM role in order to access other AWS services on your behalf.</p> </li> </ul>",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "AvailabilityZones": {
                                "description": "Provides the list of EC2 Availability Zones that instances in the DB cluster can be created in.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "BackupRetentionPeriod": {
                                "description": "Specifies the number of days for which automatic DB snapshots are retained.",
                                "type": "integer"
                            },
                            "CharacterSetName": {
                                "description": "If present, specifies the name of the character set that this cluster is associated with.",
                                "type": "string"
                            },
                            "CloneGroupId": {
                                "description": "Identifies the clone group to which the DB cluster is associated.",
                                "type": "string"
                            },
                            "ClusterCreateTime": {
                                "description": "Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).",
                                "format": "date-time",
                                "type": "string"
                            },
                            "DBClusterArn": {
                                "description": "The Amazon Resource Name (ARN) for the DB cluster.",
                                "type": "string"
                            },
                            "DBClusterIdentifier": {
                                "description": "Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.",
                                "type": "string"
                            },
                            "DBClusterMembers": {
                                "description": "Provides the list of instances that make up the DB cluster.",
                                "items": {
                                    "description": "Contains information about an instance that is part of a DB cluster.",
                                    "properties": {
                                        "DBClusterParameterGroupStatus": {
                                            "description": "Specifies the status of the DB cluster parameter group for this member of the DB cluster.",
                                            "type": "string"
                                        },
                                        "DBInstanceIdentifier": {
                                            "description": "Specifies the instance identifier for this member of the DB cluster.",
                                            "type": "string"
                                        },
                                        "IsClusterWriter": {
                                            "description": "Value that is <code>true</code> if the cluster member is the primary instance for the DB cluster and <code>false</code> otherwise.",
                                            "type": "boolean"
                                        },
                                        "PromotionTier": {
                                            "description": "A value that specifies the order in which a Read Replica is promoted to the primary instance after a failure of the existing primary instance. ",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "DBClusterOptionGroupMemberships": {
                                "description": "Provides the list of option group memberships for this DB cluster.",
                                "items": {
                                    "description": "Contains status information for a DB cluster option group.",
                                    "properties": {
                                        "DBClusterOptionGroupName": {
                                            "description": "Specifies the name of the DB cluster option group.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "Specifies the status of the DB cluster option group.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "DBClusterParameterGroup": {
                                "description": "Specifies the name of the DB cluster parameter group for the DB cluster.",
                                "type": "string"
                            },
                            "DBSubnetGroup": {
                                "description": "Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group.",
                                "type": "string"
                            },
                            "DatabaseName": {
                                "description": "Contains the name of the initial database of this DB cluster that was provided at create time, if one was specified when the DB cluster was created. This same name is returned for the life of the DB cluster.",
                                "type": "string"
                            },
                            "DbClusterResourceId": {
                                "description": "The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.",
                                "type": "string"
                            },
                            "EarliestRestorableTime": {
                                "description": "Specifies the earliest time to which a database can be restored with point-in-time restore.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "Endpoint": {
                                "description": "Specifies the connection endpoint for the primary instance of the DB cluster.",
                                "type": "string"
                            },
                            "Engine": {
                                "description": "Provides the name of the database engine to be used for this DB cluster.",
                                "type": "string"
                            },
                            "EngineVersion": {
                                "description": "Indicates the database engine version.",
                                "type": "string"
                            },
                            "HostedZoneId": {
                                "description": "Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.",
                                "type": "string"
                            },
                            "IAMDatabaseAuthenticationEnabled": {
                                "description": "True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.",
                                "type": "boolean"
                            },
                            "KmsKeyId": {
                                "description": "If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB cluster.",
                                "type": "string"
                            },
                            "LatestRestorableTime": {
                                "description": "Specifies the latest time to which a database can be restored with point-in-time restore.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "MasterUsername": {
                                "description": "Contains the master username for the DB cluster.",
                                "type": "string"
                            },
                            "MultiAZ": {
                                "description": "Specifies whether the DB cluster has instances in multiple Availability Zones.",
                                "type": "boolean"
                            },
                            "PercentProgress": {
                                "description": "Specifies the progress of the operation as a percentage.",
                                "type": "string"
                            },
                            "Port": {
                                "description": "Specifies the port that the database engine is listening on.",
                                "type": "integer"
                            },
                            "PreferredBackupWindow": {
                                "description": "Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. ",
                                "type": "string"
                            },
                            "PreferredMaintenanceWindow": {
                                "description": "Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
                                "type": "string"
                            },
                            "ReadReplicaIdentifiers": {
                                "description": "Contains one or more identifiers of the Read Replicas associated with this DB cluster.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "ReaderEndpoint": {
                                "description": "<p>The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances connections across the Read Replicas that are available in a DB cluster. As clients request new connections to the reader endpoint, Neptune distributes the connection requests among the Read Replicas in the DB cluster. This functionality can help balance your read workload across multiple Read Replicas in your DB cluster. </p> <p>If a failover occurs, and the Read Replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Read Replicas in the cluster, you can then reconnect to the reader endpoint.</p>",
                                "type": "string"
                            },
                            "ReplicationSourceIdentifier": {
                                "description": "Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.",
                                "type": "string"
                            },
                            "Status": {
                                "description": "Specifies the current state of this DB cluster.",
                                "type": "string"
                            },
                            "StorageEncrypted": {
                                "description": "Specifies whether the DB cluster is encrypted.",
                                "type": "boolean"
                            },
                            "VpcSecurityGroups": {
                                "description": "Provides a list of VPC security groups that the DB cluster belongs to.",
                                "items": {
                                    "description": "This data type is used as a response element for queries on VPC security group membership.",
                                    "properties": {
                                        "Status": {
                                            "description": "The status of the VPC security group.",
                                            "type": "string"
                                        },
                                        "VpcSecurityGroupId": {
                                            "description": "The name of the VPC security group.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "RestoreDBClusterToPointInTimeMessage": {
                "description": "<p/>",
                "properties": {
                    "DBClusterIdentifier": {
                        "description": "<p>The name of the new DB cluster to be created.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>",
                        "type": "string"
                    },
                    "DBSubnetGroupName": {
                        "description": "<p>The DB subnet group name to use for the new DB cluster.</p> <p>Constraints: If supplied, must match the name of an existing DBSubnetGroup.</p> <p>Example: <code>mySubnetgroup</code> </p>",
                        "type": "string"
                    },
                    "EnableIAMDatabaseAuthentication": {
                        "description": "<p>True to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts, and otherwise false.</p> <p>Default: <code>false</code> </p>",
                        "type": "boolean"
                    },
                    "KmsKeyId": {
                        "description": "<p>The AWS KMS key identifier to use when restoring an encrypted DB cluster from an encrypted DB cluster.</p> <p>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are restoring a DB cluster with the same AWS account that owns the KMS encryption key used to encrypt the new DB cluster, then you can use the KMS key alias instead of the ARN for the KMS encryption key.</p> <p>You can restore to a new DB cluster and encrypt the new DB cluster with a KMS key that is different than the KMS key used to encrypt the source DB cluster. The new DB cluster is encrypted with the KMS key identified by the <code>KmsKeyId</code> parameter.</p> <p>If you do not specify a value for the <code>KmsKeyId</code> parameter, then the following will occur:</p> <ul> <li> <p>If the DB cluster is encrypted, then the restored DB cluster is encrypted using the KMS key that was used to encrypt the source DB cluster.</p> </li> <li> <p>If the DB cluster is not encrypted, then the restored DB cluster is not encrypted.</p> </li> </ul> <p>If <code>DBClusterIdentifier</code> refers to a DB cluster that is not encrypted, then the restore request is rejected.</p>",
                        "type": "string"
                    },
                    "OptionGroupName": {
                        "description": "The name of the option group for the new DB cluster.",
                        "type": "string"
                    },
                    "Port": {
                        "description": "<p>The port number on which the new DB cluster accepts connections.</p> <p>Constraints: Value must be <code>1150-65535</code> </p> <p>Default: The same port as the original DB cluster.</p>",
                        "type": "integer"
                    },
                    "RestoreToTime": {
                        "description": "<p>The date and time to restore the DB cluster to.</p> <p>Valid Values: Value must be a time in Universal Coordinated Time (UTC) format</p> <p>Constraints:</p> <ul> <li> <p>Must be before the latest restorable time for the DB instance</p> </li> <li> <p>Must be specified if <code>UseLatestRestorableTime</code> parameter is not provided</p> </li> <li> <p>Cannot be specified if <code>UseLatestRestorableTime</code> parameter is true</p> </li> <li> <p>Cannot be specified if <code>RestoreType</code> parameter is <code>copy-on-write</code> </p> </li> </ul> <p>Example: <code>2015-03-07T23:45:00Z</code> </p>",
                        "format": "date-time",
                        "type": "string"
                    },
                    "RestoreType": {
                        "description": "<p>The type of restore to be performed. You can specify one of the following values:</p> <ul> <li> <p> <code>full-copy</code> - The new DB cluster is restored as a full copy of the source DB cluster.</p> </li> <li> <p> <code>copy-on-write</code> - The new DB cluster is restored as a clone of the source DB cluster.</p> </li> </ul> <p>Constraints: You can't specify <code>copy-on-write</code> if the engine version of the source DB cluster is earlier than 1.11.</p> <p>If you don't specify a <code>RestoreType</code> value, then the new DB cluster is restored as a full copy of the source DB cluster.</p>",
                        "type": "string"
                    },
                    "SourceDBClusterIdentifier": {
                        "description": "<p>The identifier of the source DB cluster from which to restore.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBCluster.</p> </li> </ul>",
                        "type": "string"
                    },
                    "Tags": {
                        "description": "A list of tags. For more information, see <a href=\"http://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html\">Tagging Amazon Neptune Resources</a>. ",
                        "items": {
                            "description": "Metadata assigned to an Amazon Neptune resource consisting of a key-value pair.",
                            "properties": {
                                "Key": {
                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "UseLatestRestorableTime": {
                        "description": "<p>A value that is set to <code>true</code> to restore the DB cluster to the latest restorable backup time, and <code>false</code> otherwise. </p> <p>Default: <code>false</code> </p> <p>Constraints: Cannot be specified if <code>RestoreToTime</code> parameter is provided.</p>",
                        "type": "boolean"
                    },
                    "VpcSecurityGroupIds": {
                        "description": "A list of VPC security groups that the new DB cluster belongs to.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "DBClusterIdentifier",
                    "SourceDBClusterIdentifier"
                ],
                "type": "object"
            },
            "RestoreDBClusterToPointInTimeResult": {
                "properties": {
                    "DBCluster": {
                        "description": "<p>Contains the details of an Amazon Neptune DB cluster. </p> <p>This data type is used as a response element in the <a>DescribeDBClusters</a> action. </p>",
                        "properties": {
                            "AllocatedStorage": {
                                "description": " <code>AllocatedStorage</code> always returns 1, because Neptune DB cluster storage size is not fixed, but instead automatically adjusts as needed.",
                                "type": "integer"
                            },
                            "AssociatedRoles": {
                                "description": "Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.",
                                "items": {
                                    "description": "Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.",
                                    "properties": {
                                        "RoleArn": {
                                            "description": "The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "<p>Describes the state of association between the IAM role and the DB cluster. The Status property returns one of the following values:</p> <ul> <li> <p> <code>ACTIVE</code> - the IAM role ARN is associated with the DB cluster and can be used to access other AWS services on your behalf.</p> </li> <li> <p> <code>PENDING</code> - the IAM role ARN is being associated with the DB cluster.</p> </li> <li> <p> <code>INVALID</code> - the IAM role ARN is associated with the DB cluster, but the DB cluster is unable to assume the IAM role in order to access other AWS services on your behalf.</p> </li> </ul>",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "AvailabilityZones": {
                                "description": "Provides the list of EC2 Availability Zones that instances in the DB cluster can be created in.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "BackupRetentionPeriod": {
                                "description": "Specifies the number of days for which automatic DB snapshots are retained.",
                                "type": "integer"
                            },
                            "CharacterSetName": {
                                "description": "If present, specifies the name of the character set that this cluster is associated with.",
                                "type": "string"
                            },
                            "CloneGroupId": {
                                "description": "Identifies the clone group to which the DB cluster is associated.",
                                "type": "string"
                            },
                            "ClusterCreateTime": {
                                "description": "Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).",
                                "format": "date-time",
                                "type": "string"
                            },
                            "DBClusterArn": {
                                "description": "The Amazon Resource Name (ARN) for the DB cluster.",
                                "type": "string"
                            },
                            "DBClusterIdentifier": {
                                "description": "Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.",
                                "type": "string"
                            },
                            "DBClusterMembers": {
                                "description": "Provides the list of instances that make up the DB cluster.",
                                "items": {
                                    "description": "Contains information about an instance that is part of a DB cluster.",
                                    "properties": {
                                        "DBClusterParameterGroupStatus": {
                                            "description": "Specifies the status of the DB cluster parameter group for this member of the DB cluster.",
                                            "type": "string"
                                        },
                                        "DBInstanceIdentifier": {
                                            "description": "Specifies the instance identifier for this member of the DB cluster.",
                                            "type": "string"
                                        },
                                        "IsClusterWriter": {
                                            "description": "Value that is <code>true</code> if the cluster member is the primary instance for the DB cluster and <code>false</code> otherwise.",
                                            "type": "boolean"
                                        },
                                        "PromotionTier": {
                                            "description": "A value that specifies the order in which a Read Replica is promoted to the primary instance after a failure of the existing primary instance. ",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "DBClusterOptionGroupMemberships": {
                                "description": "Provides the list of option group memberships for this DB cluster.",
                                "items": {
                                    "description": "Contains status information for a DB cluster option group.",
                                    "properties": {
                                        "DBClusterOptionGroupName": {
                                            "description": "Specifies the name of the DB cluster option group.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "Specifies the status of the DB cluster option group.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "DBClusterParameterGroup": {
                                "description": "Specifies the name of the DB cluster parameter group for the DB cluster.",
                                "type": "string"
                            },
                            "DBSubnetGroup": {
                                "description": "Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group.",
                                "type": "string"
                            },
                            "DatabaseName": {
                                "description": "Contains the name of the initial database of this DB cluster that was provided at create time, if one was specified when the DB cluster was created. This same name is returned for the life of the DB cluster.",
                                "type": "string"
                            },
                            "DbClusterResourceId": {
                                "description": "The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.",
                                "type": "string"
                            },
                            "EarliestRestorableTime": {
                                "description": "Specifies the earliest time to which a database can be restored with point-in-time restore.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "Endpoint": {
                                "description": "Specifies the connection endpoint for the primary instance of the DB cluster.",
                                "type": "string"
                            },
                            "Engine": {
                                "description": "Provides the name of the database engine to be used for this DB cluster.",
                                "type": "string"
                            },
                            "EngineVersion": {
                                "description": "Indicates the database engine version.",
                                "type": "string"
                            },
                            "HostedZoneId": {
                                "description": "Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.",
                                "type": "string"
                            },
                            "IAMDatabaseAuthenticationEnabled": {
                                "description": "True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.",
                                "type": "boolean"
                            },
                            "KmsKeyId": {
                                "description": "If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB cluster.",
                                "type": "string"
                            },
                            "LatestRestorableTime": {
                                "description": "Specifies the latest time to which a database can be restored with point-in-time restore.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "MasterUsername": {
                                "description": "Contains the master username for the DB cluster.",
                                "type": "string"
                            },
                            "MultiAZ": {
                                "description": "Specifies whether the DB cluster has instances in multiple Availability Zones.",
                                "type": "boolean"
                            },
                            "PercentProgress": {
                                "description": "Specifies the progress of the operation as a percentage.",
                                "type": "string"
                            },
                            "Port": {
                                "description": "Specifies the port that the database engine is listening on.",
                                "type": "integer"
                            },
                            "PreferredBackupWindow": {
                                "description": "Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. ",
                                "type": "string"
                            },
                            "PreferredMaintenanceWindow": {
                                "description": "Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
                                "type": "string"
                            },
                            "ReadReplicaIdentifiers": {
                                "description": "Contains one or more identifiers of the Read Replicas associated with this DB cluster.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "ReaderEndpoint": {
                                "description": "<p>The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances connections across the Read Replicas that are available in a DB cluster. As clients request new connections to the reader endpoint, Neptune distributes the connection requests among the Read Replicas in the DB cluster. This functionality can help balance your read workload across multiple Read Replicas in your DB cluster. </p> <p>If a failover occurs, and the Read Replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Read Replicas in the cluster, you can then reconnect to the reader endpoint.</p>",
                                "type": "string"
                            },
                            "ReplicationSourceIdentifier": {
                                "description": "Contains the identifier of the source DB cluster if this DB cluster is a Read Replica.",
                                "type": "string"
                            },
                            "Status": {
                                "description": "Specifies the current state of this DB cluster.",
                                "type": "string"
                            },
                            "StorageEncrypted": {
                                "description": "Specifies whether the DB cluster is encrypted.",
                                "type": "boolean"
                            },
                            "VpcSecurityGroups": {
                                "description": "Provides a list of VPC security groups that the DB cluster belongs to.",
                                "items": {
                                    "description": "This data type is used as a response element for queries on VPC security group membership.",
                                    "properties": {
                                        "Status": {
                                            "description": "The status of the VPC security group.",
                                            "type": "string"
                                        },
                                        "VpcSecurityGroupId": {
                                            "description": "The name of the VPC security group.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "SNSInvalidTopicFault": {
                "properties": {},
                "type": "object"
            },
            "SNSNoAuthorizationFault": {
                "properties": {},
                "type": "object"
            },
            "SNSTopicArnNotFoundFault": {
                "properties": {},
                "type": "object"
            },
            "SharedSnapshotQuotaExceededFault": {
                "description": "You have exceeded the maximum number of accounts that you can share a manual DB snapshot with.",
                "properties": {},
                "type": "object"
            },
            "SnapshotQuotaExceededFault": {
                "description": "Request would result in user exceeding the allowed number of DB snapshots.",
                "properties": {},
                "type": "object"
            },
            "SourceIdsList": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "SourceNotFoundFault": {
                "properties": {},
                "type": "object"
            },
            "SourceType": {
                "enum": [
                    "db-instance",
                    "db-parameter-group",
                    "db-security-group",
                    "db-snapshot",
                    "db-cluster",
                    "db-cluster-snapshot"
                ],
                "type": "string"
            },
            "StorageQuotaExceededFault": {
                "description": "Request would result in user exceeding the allowed amount of storage available across all DB instances.",
                "properties": {},
                "type": "object"
            },
            "StorageTypeNotSupportedFault": {
                "description": " <i>StorageType</i> specified cannot be associated with the DB Instance. ",
                "properties": {},
                "type": "object"
            },
            "String": {
                "type": "string"
            },
            "Subnet": {
                "description": " This data type is used as a response element in the <a>DescribeDBSubnetGroups</a> action. ",
                "properties": {
                    "SubnetAvailabilityZone": {
                        "description": "<p>Contains Availability Zone information.</p> <p> This data type is used as an element in the following data type:</p> <ul> <li> <p> <a>OrderableDBInstanceOption</a> </p> </li> </ul>",
                        "properties": {
                            "Name": {
                                "description": "The name of the availability zone.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "SubnetIdentifier": {
                        "description": "Specifies the identifier of the subnet.",
                        "type": "string"
                    },
                    "SubnetStatus": {
                        "description": "Specifies the status of the subnet.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SubnetAlreadyInUse": {
                "description": "The DB subnet is already in use in the Availability Zone.",
                "properties": {},
                "type": "object"
            },
            "SubnetIdentifierList": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "SubnetList": {
                "items": {
                    "description": " This data type is used as a response element in the <a>DescribeDBSubnetGroups</a> action. ",
                    "properties": {
                        "SubnetAvailabilityZone": {
                            "description": "<p>Contains Availability Zone information.</p> <p> This data type is used as an element in the following data type:</p> <ul> <li> <p> <a>OrderableDBInstanceOption</a> </p> </li> </ul>",
                            "properties": {
                                "Name": {
                                    "description": "The name of the availability zone.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "SubnetIdentifier": {
                            "description": "Specifies the identifier of the subnet.",
                            "type": "string"
                        },
                        "SubnetStatus": {
                            "description": "Specifies the status of the subnet.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "SubscriptionAlreadyExistFault": {
                "properties": {},
                "type": "object"
            },
            "SubscriptionCategoryNotFoundFault": {
                "properties": {},
                "type": "object"
            },
            "SubscriptionNotFoundFault": {
                "properties": {},
                "type": "object"
            },
            "SupportedCharacterSetsList": {
                "items": {
                    "description": " This data type is used as a response element in the action <a>DescribeDBEngineVersions</a>. ",
                    "properties": {
                        "CharacterSetDescription": {
                            "description": "The description of the character set.",
                            "type": "string"
                        },
                        "CharacterSetName": {
                            "description": "The name of the character set.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "SupportedTimezonesList": {
                "items": {
                    "description": "A time zone associated with a <a>DBInstance</a>. This data type is an element in the response to the <a>DescribeDBInstances</a>, and the <a>DescribeDBEngineVersions</a> actions. ",
                    "properties": {
                        "TimezoneName": {
                            "description": "The name of the time zone.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "TStamp": {
                "format": "date-time",
                "type": "string"
            },
            "Tag": {
                "description": "Metadata assigned to an Amazon Neptune resource consisting of a key-value pair.",
                "properties": {
                    "Key": {
                        "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                        "type": "string"
                    },
                    "Value": {
                        "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TagList": {
                "description": "A list of tags. For more information, see <a href=\"http://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html\">Tagging Amazon Neptune Resources</a>. ",
                "items": {
                    "description": "Metadata assigned to an Amazon Neptune resource consisting of a key-value pair.",
                    "properties": {
                        "Key": {
                            "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                            "type": "string"
                        },
                        "Value": {
                            "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "TagListMessage": {
                "description": "<p/>",
                "properties": {
                    "TagList": {
                        "description": "List of tags returned by the ListTagsForResource operation.",
                        "items": {
                            "description": "Metadata assigned to an Amazon Neptune resource consisting of a key-value pair.",
                            "properties": {
                                "Key": {
                                    "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Timezone": {
                "description": "A time zone associated with a <a>DBInstance</a>. This data type is an element in the response to the <a>DescribeDBInstances</a>, and the <a>DescribeDBEngineVersions</a> actions. ",
                "properties": {
                    "TimezoneName": {
                        "description": "The name of the time zone.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpgradeTarget": {
                "description": "The version of the database engine that a DB instance can be upgraded to.",
                "properties": {
                    "AutoUpgrade": {
                        "description": "A value that indicates whether the target version is applied to any source DB instances that have AutoMinorVersionUpgrade set to true.",
                        "type": "boolean"
                    },
                    "Description": {
                        "description": "The version of the database engine that a DB instance can be upgraded to.",
                        "type": "string"
                    },
                    "Engine": {
                        "description": "The name of the upgrade target database engine.",
                        "type": "string"
                    },
                    "EngineVersion": {
                        "description": "The version number of the upgrade target database engine.",
                        "type": "string"
                    },
                    "IsMajorVersionUpgrade": {
                        "description": "A value that indicates whether a database engine is upgraded to a major version.",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ValidDBInstanceModificationsMessage": {
                "description": "Information about valid modifications that you can make to your DB instance. Contains the result of a successful call to the <a>DescribeValidDBInstanceModifications</a> action. You can use this information when you call <a>ModifyDBInstance</a>. ",
                "properties": {
                    "Storage": {
                        "description": "Valid storage options for your DB instance. ",
                        "items": {
                            "description": "Information about valid modifications that you can make to your DB instance. Contains the result of a successful call to the <a>DescribeValidDBInstanceModifications</a> action. ",
                            "properties": {
                                "IopsToStorageRatio": {
                                    "description": "The valid range of Provisioned IOPS to gibibytes of storage multiplier. For example, 3-10, which means that provisioned IOPS can be between 3 and 10 times storage. ",
                                    "items": {
                                        "description": "A range of double values.",
                                        "properties": {
                                            "From": {
                                                "description": "The minimum value in the range.",
                                                "format": "double",
                                                "type": "number"
                                            },
                                            "To": {
                                                "description": "The maximum value in the range.",
                                                "format": "double",
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "ProvisionedIops": {
                                    "description": "The valid range of provisioned IOPS. For example, 1000-20000. ",
                                    "items": {
                                        "description": "A range of integer values.",
                                        "properties": {
                                            "From": {
                                                "description": "The minimum value in the range.",
                                                "type": "integer"
                                            },
                                            "Step": {
                                                "description": "The step value for the range. For example, if you have a range of 5,000 to 10,000, with a step value of 1,000, the valid values start at 5,000 and step up by 1,000. Even though 7,500 is within the range, it isn't a valid value for the range. The valid values are 5,000, 6,000, 7,000, 8,000... ",
                                                "type": "integer"
                                            },
                                            "To": {
                                                "description": "The maximum value in the range.",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "StorageSize": {
                                    "description": "The valid range of storage in gibibytes. For example, 100 to 16384. ",
                                    "items": {
                                        "description": "A range of integer values.",
                                        "properties": {
                                            "From": {
                                                "description": "The minimum value in the range.",
                                                "type": "integer"
                                            },
                                            "Step": {
                                                "description": "The step value for the range. For example, if you have a range of 5,000 to 10,000, with a step value of 1,000, the valid values start at 5,000 and step up by 1,000. Even though 7,500 is within the range, it isn't a valid value for the range. The valid values are 5,000, 6,000, 7,000, 8,000... ",
                                                "type": "integer"
                                            },
                                            "To": {
                                                "description": "The maximum value in the range.",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "StorageType": {
                                    "description": "The valid storage types for your DB instance. For example, gp2, io1. ",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ValidStorageOptions": {
                "description": "Information about valid modifications that you can make to your DB instance. Contains the result of a successful call to the <a>DescribeValidDBInstanceModifications</a> action. ",
                "properties": {
                    "IopsToStorageRatio": {
                        "description": "The valid range of Provisioned IOPS to gibibytes of storage multiplier. For example, 3-10, which means that provisioned IOPS can be between 3 and 10 times storage. ",
                        "items": {
                            "description": "A range of double values.",
                            "properties": {
                                "From": {
                                    "description": "The minimum value in the range.",
                                    "format": "double",
                                    "type": "number"
                                },
                                "To": {
                                    "description": "The maximum value in the range.",
                                    "format": "double",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "ProvisionedIops": {
                        "description": "The valid range of provisioned IOPS. For example, 1000-20000. ",
                        "items": {
                            "description": "A range of integer values.",
                            "properties": {
                                "From": {
                                    "description": "The minimum value in the range.",
                                    "type": "integer"
                                },
                                "Step": {
                                    "description": "The step value for the range. For example, if you have a range of 5,000 to 10,000, with a step value of 1,000, the valid values start at 5,000 and step up by 1,000. Even though 7,500 is within the range, it isn't a valid value for the range. The valid values are 5,000, 6,000, 7,000, 8,000... ",
                                    "type": "integer"
                                },
                                "To": {
                                    "description": "The maximum value in the range.",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "StorageSize": {
                        "description": "The valid range of storage in gibibytes. For example, 100 to 16384. ",
                        "items": {
                            "description": "A range of integer values.",
                            "properties": {
                                "From": {
                                    "description": "The minimum value in the range.",
                                    "type": "integer"
                                },
                                "Step": {
                                    "description": "The step value for the range. For example, if you have a range of 5,000 to 10,000, with a step value of 1,000, the valid values start at 5,000 and step up by 1,000. Even though 7,500 is within the range, it isn't a valid value for the range. The valid values are 5,000, 6,000, 7,000, 8,000... ",
                                    "type": "integer"
                                },
                                "To": {
                                    "description": "The maximum value in the range.",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "StorageType": {
                        "description": "The valid storage types for your DB instance. For example, gp2, io1. ",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ValidStorageOptionsList": {
                "items": {
                    "description": "Information about valid modifications that you can make to your DB instance. Contains the result of a successful call to the <a>DescribeValidDBInstanceModifications</a> action. ",
                    "properties": {
                        "IopsToStorageRatio": {
                            "description": "The valid range of Provisioned IOPS to gibibytes of storage multiplier. For example, 3-10, which means that provisioned IOPS can be between 3 and 10 times storage. ",
                            "items": {
                                "description": "A range of double values.",
                                "properties": {
                                    "From": {
                                        "description": "The minimum value in the range.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "To": {
                                        "description": "The maximum value in the range.",
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "ProvisionedIops": {
                            "description": "The valid range of provisioned IOPS. For example, 1000-20000. ",
                            "items": {
                                "description": "A range of integer values.",
                                "properties": {
                                    "From": {
                                        "description": "The minimum value in the range.",
                                        "type": "integer"
                                    },
                                    "Step": {
                                        "description": "The step value for the range. For example, if you have a range of 5,000 to 10,000, with a step value of 1,000, the valid values start at 5,000 and step up by 1,000. Even though 7,500 is within the range, it isn't a valid value for the range. The valid values are 5,000, 6,000, 7,000, 8,000... ",
                                        "type": "integer"
                                    },
                                    "To": {
                                        "description": "The maximum value in the range.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "StorageSize": {
                            "description": "The valid range of storage in gibibytes. For example, 100 to 16384. ",
                            "items": {
                                "description": "A range of integer values.",
                                "properties": {
                                    "From": {
                                        "description": "The minimum value in the range.",
                                        "type": "integer"
                                    },
                                    "Step": {
                                        "description": "The step value for the range. For example, if you have a range of 5,000 to 10,000, with a step value of 1,000, the valid values start at 5,000 and step up by 1,000. Even though 7,500 is within the range, it isn't a valid value for the range. The valid values are 5,000, 6,000, 7,000, 8,000... ",
                                        "type": "integer"
                                    },
                                    "To": {
                                        "description": "The maximum value in the range.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "StorageType": {
                            "description": "The valid storage types for your DB instance. For example, gp2, io1. ",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "ValidUpgradeTargetList": {
                "items": {
                    "description": "The version of the database engine that a DB instance can be upgraded to.",
                    "properties": {
                        "AutoUpgrade": {
                            "description": "A value that indicates whether the target version is applied to any source DB instances that have AutoMinorVersionUpgrade set to true.",
                            "type": "boolean"
                        },
                        "Description": {
                            "description": "The version of the database engine that a DB instance can be upgraded to.",
                            "type": "string"
                        },
                        "Engine": {
                            "description": "The name of the upgrade target database engine.",
                            "type": "string"
                        },
                        "EngineVersion": {
                            "description": "The version number of the upgrade target database engine.",
                            "type": "string"
                        },
                        "IsMajorVersionUpgrade": {
                            "description": "A value that indicates whether a database engine is upgraded to a major version.",
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "VpcSecurityGroupIdList": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "VpcSecurityGroupMembership": {
                "description": "This data type is used as a response element for queries on VPC security group membership.",
                "properties": {
                    "Status": {
                        "description": "The status of the VPC security group.",
                        "type": "string"
                    },
                    "VpcSecurityGroupId": {
                        "description": "The name of the VPC security group.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "VpcSecurityGroupMembershipList": {
                "items": {
                    "description": "This data type is used as a response element for queries on VPC security group membership.",
                    "properties": {
                        "Status": {
                            "description": "The status of the VPC security group.",
                            "type": "string"
                        },
                        "VpcSecurityGroupId": {
                            "description": "The name of the VPC security group.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            }
        },
        "parameters": {
            "Action": {
                "in": "query",
                "name": "Action",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "Version": {
                "in": "query",
                "name": "Version",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Algorithm": {
                "in": "header",
                "name": "X-Amz-Algorithm",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Content-Sha256": {
                "in": "header",
                "name": "X-Amz-Content-Sha256",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Credential": {
                "in": "header",
                "name": "X-Amz-Credential",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Date": {
                "in": "header",
                "name": "X-Amz-Date",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Security-Token": {
                "in": "header",
                "name": "X-Amz-Security-Token",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Signature": {
                "in": "header",
                "name": "X-Amz-Signature",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-SignedHeaders": {
                "in": "header",
                "name": "X-Amz-SignedHeaders",
                "required": false,
                "schema": {
                    "type": "string"
                }
            }
        },
        "securitySchemes": {
            "hmac": {
                "description": "Amazon Signature authorization v4",
                "in": "header",
                "name": "Authorization",
                "type": "apiKey",
                "x-amazon-apigateway-authtype": "awsSigv4"
            }
        }
    }
}
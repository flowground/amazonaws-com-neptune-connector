{
    "title": "Amazon Neptune",
    "description": "Amazon Neptune  \n\n Amazon Neptune is a fast, reliable, fully-managed graph database service that\nmakes it easy to build and run applications that work with highly connected\ndatasets. The core of Amazon Neptune is a purpose-built, high-performance graph\ndatabase engine optimized for storing billions of relationships and querying the\ngraph with milliseconds latency. Amazon Neptune supports popular graph models\nProperty Graph and W3C's RDF, and their respective query languages Apache\nTinkerPop Gremlin and SPARQL, allowing you to easily build queries that\nefficiently navigate highly connected datasets. Neptune powers graph use cases\nsuch as recommendation engines, fraud detection, knowledge graphs, drug\ndiscovery, and network security. \n\nThis interface reference for Amazon Neptune contains documentation for a\nprogramming or command line interface you can use to manage Amazon Neptune. Note\nthat Amazon Neptune is asynchronous, which means that some interfaces might\nrequire techniques such as polling or callback functions to determine when a\ncommand has been applied. In this reference, the parameter descriptions indicate\nwhether a command is applied immediately, on the next instance reboot, or during\nthe maintenance window. The reference structure is as follows, and we list\nfollowing some related topics from the user guide.\n\n Amazon Neptune API Reference",
    "docsUrl": "https://docs.aws.amazon.com/rds/",
    "url": "https://api.apis.guru/v2/specs/amazonaws.com/neptune/2014-10-31/swagger.json",
    "envVars": {},
    "credentials": {
        "fields": {
            "server": {
                "label": "Server",
                "viewClass": "SelectView",
                "model": [
                    "https://rds.amazonaws.com/",
                    "http://rds.amazonaws.com/",
                    "--- Custom URL"
                ],
                "required": true
            },
            "otherServer": {
                "label": "Custom Server URL",
                "viewClass": "TextFieldView"
            },
            "auth_hmac": {
                "label": "Authorization (hmac)",
                "viewClass": "TextFieldView",
                "note": "Amazon Signature authorization v4"
            }
        }
    },
    "triggers": {
        "startFlow": {
            "main": "./lib/triggers/startFlow.js",
            "type": "polling",
            "title": "Start Flow",
            "fields": {}
        }
    },
    "actions": {
        "AddRoleToDBCluster": {
            "main": "./lib/actions/AddRoleToDBCluster.js",
            "title": "AddRoleToDBCluster",
            "description": "Associates an Identity and Access Management (IAM) role from an Neptune DB cluster. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AddRoleToDBCluster.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AddSourceIdentifierToSubscription": {
            "main": "./lib/actions/AddSourceIdentifierToSubscription.js",
            "title": "AddSourceIdentifierToSubscription",
            "description": "Adds a source identifier to an existing event notification subscription.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AddSourceIdentifierToSubscription.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AddTagsToResource": {
            "main": "./lib/actions/AddTagsToResource.js",
            "title": "AddTagsToResource",
            "description": "Adds metadata tags to an Amazon Neptune resource. These tags can also be used with cost allocation reporting to track cost associated with Amazon Neptune resources, or used in a Condition statement in an IAM policy for Amazon Neptune.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AddTagsToResource.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ApplyPendingMaintenanceAction": {
            "main": "./lib/actions/ApplyPendingMaintenanceAction.js",
            "title": "ApplyPendingMaintenanceAction",
            "description": "Applies a pending maintenance action to a resource (for example, to a DB instance).",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ApplyPendingMaintenanceAction.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CopyDBClusterParameterGroup": {
            "main": "./lib/actions/CopyDBClusterParameterGroup.js",
            "title": "CopyDBClusterParameterGroup",
            "description": "Copies the specified DB cluster parameter group.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CopyDBClusterParameterGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CopyDBClusterSnapshot": {
            "main": "./lib/actions/CopyDBClusterSnapshot.js",
            "title": "CopyDBClusterSnapshot",
            "description": "Copies a snapshot of a DB cluster.\n\nTo copy a DB cluster snapshot from a shared manual DB cluster snapshot, \nSourceDBClusterSnapshotIdentifier must be the Amazon Resource Name (ARN) of the\nshared DB cluster snapshot.\n\nYou can copy an encrypted DB cluster snapshot from another AWS Region. In that\ncase, the AWS Region where you call the CopyDBClusterSnapshot action is the\ndestination AWS Region for the encrypted DB cluster snapshot to be copied to. To\ncopy an encrypted DB cluster snapshot from another AWS Region, you must provide\nthe following values:\n\n *   KmsKeyId - The AWS Key Management System (AWS KMS) key identifier for the\n   key to use to encrypt the copy of the DB cluster snapshot in the destination\n   AWS Region.\n   \n   \n *   PreSignedUrl - A URL that contains a Signature Version 4 signed request for\n   the CopyDBClusterSnapshot action to be called in the source AWS Region where\n   the DB cluster snapshot is copied from. The pre-signed URL must be a valid\n   request for the CopyDBClusterSnapshot API action that can be executed in the\n   source AWS Region that contains the encrypted DB cluster snapshot to be\n   copied.\n   \n   The pre-signed URL request must contain the following parameter values:\n   \n    *   KmsKeyId - The KMS key identifier for the key to use to encrypt the copy\n      of the DB cluster snapshot in the destination AWS Region. This is the same\n      identifier for both the CopyDBClusterSnapshot action that is called in the\n      destination AWS Region, and the action contained in the pre-signed URL.\n      \n      \n    *   DestinationRegion - The name of the AWS Region that the DB cluster\n      snapshot will be created in.\n      \n      \n    *   SourceDBClusterSnapshotIdentifier - The DB cluster snapshot identifier\n      for the encrypted DB cluster snapshot to be copied. This identifier must\n      be in the Amazon Resource Name (ARN) format for the source AWS Region. For\n      example, if you are copying an encrypted DB cluster snapshot from the\n      us-west-2 AWS Region, then your SourceDBClusterSnapshotIdentifier looks\n      like the following example: \n      arn:aws:rds:us-west-2:123456789012:cluster-snapshot:neptune-cluster1-snapshot-20161115\n      .\n      \n      \n   \n   To learn how to generate a Signature Version 4 signed request, see \n   Authenticating Requests: Using Query Parameters (AWS Signature Version 4)\n   [http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html] \n   and Signature Version 4 Signing Process\n   [http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html].\n   \n   \n *   TargetDBClusterSnapshotIdentifier - The identifier for the new copy of the\n   DB cluster snapshot in the destination AWS Region.\n   \n   \n *   SourceDBClusterSnapshotIdentifier - The DB cluster snapshot identifier for\n   the encrypted DB cluster snapshot to be copied. This identifier must be in\n   the ARN format for the source AWS Region and is the same value as the \n   SourceDBClusterSnapshotIdentifier in the pre-signed URL. \n   \n   \n\nTo cancel the copy operation once it is in progress, delete the target DB\ncluster snapshot identified by TargetDBClusterSnapshotIdentifier while that DB\ncluster snapshot is in \"copying\" status.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CopyDBClusterSnapshot.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CopyDBParameterGroup": {
            "main": "./lib/actions/CopyDBParameterGroup.js",
            "title": "CopyDBParameterGroup",
            "description": "Copies the specified DB parameter group.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CopyDBParameterGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateDBCluster": {
            "main": "./lib/actions/CreateDBCluster.js",
            "title": "CreateDBCluster",
            "description": "Creates a new Amazon Neptune DB cluster.\n\nYou can use the ReplicationSourceIdentifier parameter to create the DB cluster\nas a Read Replica of another DB cluster or Amazon Neptune DB instance. For\ncross-region replication where the DB cluster identified by \nReplicationSourceIdentifier is encrypted, you must also specify the PreSignedUrl \nparameter.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateDBCluster.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateDBClusterParameterGroup": {
            "main": "./lib/actions/CreateDBClusterParameterGroup.js",
            "title": "CreateDBClusterParameterGroup",
            "description": "Creates a new DB cluster parameter group.\n\nParameters in a DB cluster parameter group apply to all of the instances in a DB\ncluster.\n\n A DB cluster parameter group is initially created with the default parameters\nfor the database engine used by instances in the DB cluster. To provide custom\nvalues for any of the parameters, you must modify the group after creating it\nusing ModifyDBClusterParameterGroup. Once you've created a DB cluster parameter\ngroup, you need to associate it with your DB cluster using ModifyDBCluster. When\nyou associate a new DB cluster parameter group with a running DB cluster, you\nneed to reboot the DB instances in the DB cluster without failover for the new\nDB cluster parameter group and associated settings to take effect. \n\nAfter you create a DB cluster parameter group, you should wait at least 5\nminutes before creating your first DB cluster that uses that DB cluster\nparameter group as the default parameter group. This allows Amazon Neptune to\nfully complete the create action before the DB cluster parameter group is used\nas the default for a new DB cluster. This is especially important for parameters\nthat are critical when creating the default database for a DB cluster, such as\nthe character set for the default database defined by the character_set_database \nparameter. You can use the Parameter Groups option of the Amazon Neptune console\n[https://console.aws.amazon.com/rds/] or the DescribeDBClusterParameters command\nto verify that your DB cluster parameter group has been created or modified.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateDBClusterParameterGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateDBClusterSnapshot": {
            "main": "./lib/actions/CreateDBClusterSnapshot.js",
            "title": "CreateDBClusterSnapshot",
            "description": "Creates a snapshot of a DB cluster. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateDBClusterSnapshot.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateDBInstance": {
            "main": "./lib/actions/CreateDBInstance.js",
            "title": "CreateDBInstance",
            "description": "Creates a new DB instance.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateDBInstance.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateDBParameterGroup": {
            "main": "./lib/actions/CreateDBParameterGroup.js",
            "title": "CreateDBParameterGroup",
            "description": "Creates a new DB parameter group.\n\n A DB parameter group is initially created with the default parameters for the\ndatabase engine used by the DB instance. To provide custom values for any of the\nparameters, you must modify the group after creating it using \nModifyDBParameterGroup. Once you've created a DB parameter group, you need to\nassociate it with your DB instance using ModifyDBInstance. When you associate a\nnew DB parameter group with a running DB instance, you need to reboot the DB\ninstance without failover for the new DB parameter group and associated settings\nto take effect. \n\nAfter you create a DB parameter group, you should wait at least 5 minutes before\ncreating your first DB instance that uses that DB parameter group as the default\nparameter group. This allows Amazon Neptune to fully complete the create action\nbefore the parameter group is used as the default for a new DB instance. This is\nespecially important for parameters that are critical when creating the default\ndatabase for a DB instance, such as the character set for the default database\ndefined by the character_set_database parameter. You can use the Parameter\nGroups option of the Amazon Neptune console or the DescribeDBParameters command\nto verify that your DB parameter group has been created or modified.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateDBParameterGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateDBSubnetGroup": {
            "main": "./lib/actions/CreateDBSubnetGroup.js",
            "title": "CreateDBSubnetGroup",
            "description": "Creates a new DB subnet group. DB subnet groups must contain at least one subnet in at least two AZs in the AWS Region.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateDBSubnetGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateEventSubscription": {
            "main": "./lib/actions/CreateEventSubscription.js",
            "title": "CreateEventSubscription",
            "description": "Creates an event notification subscription. This action requires a topic ARN\n(Amazon Resource Name) created by either the Neptune console, the SNS console,\nor the SNS API. To obtain an ARN with SNS, you must create a topic in Amazon SNS\nand subscribe to the topic. The ARN is displayed in the SNS console.\n\nYou can specify the type of source (SourceType) you want to be notified of,\nprovide a list of Neptune sources (SourceIds) that triggers the events, and\nprovide a list of event categories (EventCategories) for events you want to be\nnotified of. For example, you can specify SourceType = db-instance, SourceIds =\nmydbinstance1, mydbinstance2 and EventCategories = Availability, Backup.\n\nIf you specify both the SourceType and SourceIds, such as SourceType =\ndb-instance and SourceIdentifier = myDBInstance1, you are notified of all the\ndb-instance events for the specified source. If you specify a SourceType but do\nnot specify a SourceIdentifier, you receive notice of the events for that source\ntype for all your Neptune sources. If you do not specify either the SourceType\nnor the SourceIdentifier, you are notified of events generated from all Neptune\nsources belonging to your customer account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateEventSubscription.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteDBCluster": {
            "main": "./lib/actions/DeleteDBCluster.js",
            "title": "DeleteDBCluster",
            "description": "The DeleteDBCluster action deletes a previously provisioned DB cluster. When you\ndelete a DB cluster, all automated backups for that DB cluster are deleted and\ncan't be recovered. Manual DB cluster snapshots of the specified DB cluster are\nnot deleted.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteDBCluster.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteDBClusterParameterGroup": {
            "main": "./lib/actions/DeleteDBClusterParameterGroup.js",
            "title": "DeleteDBClusterParameterGroup",
            "description": "Deletes a specified DB cluster parameter group. The DB cluster parameter group to be deleted can't be associated with any DB clusters.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteDBClusterParameterGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteDBClusterSnapshot": {
            "main": "./lib/actions/DeleteDBClusterSnapshot.js",
            "title": "DeleteDBClusterSnapshot",
            "description": "Deletes a DB cluster snapshot. If the snapshot is being copied, the copy\noperation is terminated.\n\nThe DB cluster snapshot must be in the available state to be deleted.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteDBClusterSnapshot.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteDBInstance": {
            "main": "./lib/actions/DeleteDBInstance.js",
            "title": "DeleteDBInstance",
            "description": "The DeleteDBInstance action deletes a previously provisioned DB instance. When\nyou delete a DB instance, all automated backups for that instance are deleted\nand can't be recovered. Manual DB snapshots of the DB instance to be deleted by \nDeleteDBInstance are not deleted.\n\n If you request a final DB snapshot the status of the Amazon Neptune DB instance\nis deleting until the DB snapshot is created. The API action DescribeDBInstance \nis used to monitor the status of this operation. The action can't be canceled or\nreverted once submitted. \n\nNote that when a DB instance is in a failure state and has a status of failed, \nincompatible-restore, or incompatible-network, you can only delete it when the \nSkipFinalSnapshot parameter is set to true.\n\nIf the specified DB instance is part of a DB cluster, you can't delete the DB\ninstance if both of the following conditions are true:\n\n *  The DB cluster is a Read Replica of another DB cluster.\n   \n   \n *  The DB instance is the only instance in the DB cluster.\n   \n   \n\nTo delete a DB instance in this case, first call the PromoteReadReplicaDBCluster \nAPI action to promote the DB cluster so it's no longer a Read Replica. After the\npromotion completes, then call the DeleteDBInstance API action to delete the\nfinal instance in the DB cluster.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteDBInstance.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteDBParameterGroup": {
            "main": "./lib/actions/DeleteDBParameterGroup.js",
            "title": "DeleteDBParameterGroup",
            "description": "Deletes a specified DBParameterGroup. The DBParameterGroup to be deleted can't be associated with any DB instances.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteDBParameterGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteDBSubnetGroup": {
            "main": "./lib/actions/DeleteDBSubnetGroup.js",
            "title": "DeleteDBSubnetGroup",
            "description": "Deletes a DB subnet group.\n\nThe specified database subnet group must not be associated with any DB\ninstances.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteDBSubnetGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteEventSubscription": {
            "main": "./lib/actions/DeleteEventSubscription.js",
            "title": "DeleteEventSubscription",
            "description": "Deletes an event notification subscription.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteEventSubscription.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeDBClusterParameterGroups": {
            "main": "./lib/actions/DescribeDBClusterParameterGroups.js",
            "title": "DescribeDBClusterParameterGroups",
            "description": " Returns a list of <code>DBClusterParameterGroup</code> descriptions. If a <code>DBClusterParameterGroupName</code> parameter is specified, the list will contain only the description of the specified DB cluster parameter group. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeDBClusterParameterGroups.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeDBClusterParameters": {
            "main": "./lib/actions/DescribeDBClusterParameters.js",
            "title": "DescribeDBClusterParameters",
            "description": "Returns the detailed parameter list for a particular DB cluster parameter group.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeDBClusterParameters.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeDBClusterSnapshotAttributes": {
            "main": "./lib/actions/DescribeDBClusterSnapshotAttributes.js",
            "title": "DescribeDBClusterSnapshotAttributes",
            "description": "Returns a list of DB cluster snapshot attribute names and values for a manual DB\ncluster snapshot.\n\nWhen sharing snapshots with other AWS accounts, \nDescribeDBClusterSnapshotAttributes returns the restore attribute and a list of\nIDs for the AWS accounts that are authorized to copy or restore the manual DB\ncluster snapshot. If all is included in the list of values for the restore \nattribute, then the manual DB cluster snapshot is public and can be copied or\nrestored by all AWS accounts.\n\nTo add or remove access for an AWS account to copy or restore a manual DB\ncluster snapshot, or to make the manual DB cluster snapshot public or private,\nuse the ModifyDBClusterSnapshotAttribute API action.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeDBClusterSnapshotAttributes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeDBClusterSnapshots": {
            "main": "./lib/actions/DescribeDBClusterSnapshots.js",
            "title": "DescribeDBClusterSnapshots",
            "description": "Returns information about DB cluster snapshots. This API action supports pagination.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeDBClusterSnapshots.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeDBClusters": {
            "main": "./lib/actions/DescribeDBClusters.js",
            "title": "DescribeDBClusters",
            "description": "Returns information about provisioned DB clusters. This API supports pagination.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeDBClusters.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeDBEngineVersions": {
            "main": "./lib/actions/DescribeDBEngineVersions.js",
            "title": "DescribeDBEngineVersions",
            "description": "Returns a list of the available DB engines.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeDBEngineVersions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeDBInstances": {
            "main": "./lib/actions/DescribeDBInstances.js",
            "title": "DescribeDBInstances",
            "description": "Returns information about provisioned instances. This API supports pagination.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeDBInstances.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeDBParameterGroups": {
            "main": "./lib/actions/DescribeDBParameterGroups.js",
            "title": "DescribeDBParameterGroups",
            "description": " Returns a list of <code>DBParameterGroup</code> descriptions. If a <code>DBParameterGroupName</code> is specified, the list will contain only the description of the specified DB parameter group. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeDBParameterGroups.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeDBParameters": {
            "main": "./lib/actions/DescribeDBParameters.js",
            "title": "DescribeDBParameters",
            "description": "Returns the detailed parameter list for a particular DB parameter group.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeDBParameters.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeDBSubnetGroups": {
            "main": "./lib/actions/DescribeDBSubnetGroups.js",
            "title": "DescribeDBSubnetGroups",
            "description": "Returns a list of DBSubnetGroup descriptions. If a DBSubnetGroupName is\nspecified, the list will contain only the descriptions of the specified\nDBSubnetGroup.\n\nFor an overview of CIDR ranges, go to the Wikipedia Tutorial\n[http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeDBSubnetGroups.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeEngineDefaultClusterParameters": {
            "main": "./lib/actions/DescribeEngineDefaultClusterParameters.js",
            "title": "DescribeEngineDefaultClusterParameters",
            "description": "Returns the default engine and system parameter information for the cluster database engine.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeEngineDefaultClusterParameters.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeEngineDefaultParameters": {
            "main": "./lib/actions/DescribeEngineDefaultParameters.js",
            "title": "DescribeEngineDefaultParameters",
            "description": "Returns the default engine and system parameter information for the specified database engine.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeEngineDefaultParameters.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeEventCategories": {
            "main": "./lib/actions/DescribeEventCategories.js",
            "title": "DescribeEventCategories",
            "description": "Displays a list of categories for all event source types, or, if specified, for a specified source type. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeEventCategories.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeEventSubscriptions": {
            "main": "./lib/actions/DescribeEventSubscriptions.js",
            "title": "DescribeEventSubscriptions",
            "description": "Lists all the subscription descriptions for a customer account. The description\nfor a subscription includes SubscriptionName, SNSTopicARN, CustomerID,\nSourceType, SourceID, CreationTime, and Status.\n\nIf you specify a SubscriptionName, lists the description for that subscription.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeEventSubscriptions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeEvents": {
            "main": "./lib/actions/DescribeEvents.js",
            "title": "DescribeEvents",
            "description": "Returns events related to DB instances, DB security groups, DB snapshots, and DB parameter groups for the past 14 days. Events specific to a particular DB instance, DB security group, database snapshot, or DB parameter group can be obtained by providing the name as a parameter. By default, the past hour of events are returned.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeEvents.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeOrderableDBInstanceOptions": {
            "main": "./lib/actions/DescribeOrderableDBInstanceOptions.js",
            "title": "DescribeOrderableDBInstanceOptions",
            "description": "Returns a list of orderable DB instance options for the specified engine.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeOrderableDBInstanceOptions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribePendingMaintenanceActions": {
            "main": "./lib/actions/DescribePendingMaintenanceActions.js",
            "title": "DescribePendingMaintenanceActions",
            "description": "Returns a list of resources (for example, DB instances) that have at least one pending maintenance action.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribePendingMaintenanceActions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeValidDBInstanceModifications": {
            "main": "./lib/actions/DescribeValidDBInstanceModifications.js",
            "title": "DescribeValidDBInstanceModifications",
            "description": "You can call <a>DescribeValidDBInstanceModifications</a> to learn what modifications you can make to your DB instance. You can use this information when you call <a>ModifyDBInstance</a>. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeValidDBInstanceModifications.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "FailoverDBCluster": {
            "main": "./lib/actions/FailoverDBCluster.js",
            "title": "FailoverDBCluster",
            "description": "Forces a failover for a DB cluster.\n\nA failover for a DB cluster promotes one of the Read Replicas (read-only\ninstances) in the DB cluster to be the primary instance (the cluster writer).\n\nAmazon Neptune will automatically fail over to a Read Replica, if one exists,\nwhen the primary instance fails. You can force a failover when you want to\nsimulate a failure of a primary instance for testing. Because each instance in a\nDB cluster has its own endpoint address, you will need to clean up and\nre-establish any existing connections that use those endpoint addresses when the\nfailover is complete.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/FailoverDBCluster.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListTagsForResource": {
            "main": "./lib/actions/ListTagsForResource.js",
            "title": "ListTagsForResource",
            "description": "Lists all tags on an Amazon Neptune resource.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListTagsForResource.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ModifyDBCluster": {
            "main": "./lib/actions/ModifyDBCluster.js",
            "title": "ModifyDBCluster",
            "description": "Modify a setting for a DB cluster. You can change one or more database configuration parameters by specifying these parameters and the new values in the request. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ModifyDBCluster.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ModifyDBClusterParameterGroup": {
            "main": "./lib/actions/ModifyDBClusterParameterGroup.js",
            "title": "ModifyDBClusterParameterGroup",
            "description": " Modifies the parameters of a DB cluster parameter group. To modify more than\none parameter, submit a list of the following: ParameterName, ParameterValue,\nand ApplyMethod. A maximum of 20 parameters can be modified in a single request. \n\nChanges to dynamic parameters are applied immediately. Changes to static\nparameters require a reboot without failover to the DB cluster associated with\nthe parameter group before the change can take effect.\n\nAfter you create a DB cluster parameter group, you should wait at least 5\nminutes before creating your first DB cluster that uses that DB cluster\nparameter group as the default parameter group. This allows Amazon Neptune to\nfully complete the create action before the parameter group is used as the\ndefault for a new DB cluster. This is especially important for parameters that\nare critical when creating the default database for a DB cluster, such as the\ncharacter set for the default database defined by the character_set_database \nparameter. You can use the Parameter Groups option of the Amazon Neptune console\nor the DescribeDBClusterParameters command to verify that your DB cluster\nparameter group has been created or modified.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ModifyDBClusterParameterGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ModifyDBClusterSnapshotAttribute": {
            "main": "./lib/actions/ModifyDBClusterSnapshotAttribute.js",
            "title": "ModifyDBClusterSnapshotAttribute",
            "description": "Adds an attribute and values to, or removes an attribute and values from, a\nmanual DB cluster snapshot.\n\nTo share a manual DB cluster snapshot with other AWS accounts, specify restore \nas the AttributeName and use the ValuesToAdd parameter to add a list of IDs of\nthe AWS accounts that are authorized to restore the manual DB cluster snapshot.\nUse the value all to make the manual DB cluster snapshot public, which means\nthat it can be copied or restored by all AWS accounts. Do not add the all value\nfor any manual DB cluster snapshots that contain private information that you\ndon't want available to all AWS accounts. If a manual DB cluster snapshot is\nencrypted, it can be shared, but only by specifying a list of authorized AWS\naccount IDs for the ValuesToAdd parameter. You can't use all as a value for that\nparameter in this case.\n\nTo view which AWS accounts have access to copy or restore a manual DB cluster\nsnapshot, or whether a manual DB cluster snapshot public or private, use the \nDescribeDBClusterSnapshotAttributes API action.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ModifyDBClusterSnapshotAttribute.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ModifyDBInstance": {
            "main": "./lib/actions/ModifyDBInstance.js",
            "title": "ModifyDBInstance",
            "description": "Modifies settings for a DB instance. You can change one or more database configuration parameters by specifying these parameters and the new values in the request. To learn what modifications you can make to your DB instance, call <a>DescribeValidDBInstanceModifications</a> before you call <a>ModifyDBInstance</a>. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ModifyDBInstance.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ModifyDBParameterGroup": {
            "main": "./lib/actions/ModifyDBParameterGroup.js",
            "title": "ModifyDBParameterGroup",
            "description": " Modifies the parameters of a DB parameter group. To modify more than one\nparameter, submit a list of the following: ParameterName, ParameterValue, and \nApplyMethod. A maximum of 20 parameters can be modified in a single request. \n\nChanges to dynamic parameters are applied immediately. Changes to static\nparameters require a reboot without failover to the DB instance associated with\nthe parameter group before the change can take effect.\n\nAfter you modify a DB parameter group, you should wait at least 5 minutes before\ncreating your first DB instance that uses that DB parameter group as the default\nparameter group. This allows Amazon Neptune to fully complete the modify action\nbefore the parameter group is used as the default for a new DB instance. This is\nespecially important for parameters that are critical when creating the default\ndatabase for a DB instance, such as the character set for the default database\ndefined by the character_set_database parameter. You can use the Parameter\nGroups option of the Amazon Neptune console or the DescribeDBParameters command\nto verify that your DB parameter group has been created or modified.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ModifyDBParameterGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ModifyDBSubnetGroup": {
            "main": "./lib/actions/ModifyDBSubnetGroup.js",
            "title": "ModifyDBSubnetGroup",
            "description": "Modifies an existing DB subnet group. DB subnet groups must contain at least one subnet in at least two AZs in the AWS Region.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ModifyDBSubnetGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ModifyEventSubscription": {
            "main": "./lib/actions/ModifyEventSubscription.js",
            "title": "ModifyEventSubscription",
            "description": "Modifies an existing event notification subscription. Note that you can't modify\nthe source identifiers using this call; to change source identifiers for a\nsubscription, use the AddSourceIdentifierToSubscription and \nRemoveSourceIdentifierFromSubscription calls.\n\nYou can see a list of the event categories for a given SourceType by using the \nDescribeEventCategories action.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ModifyEventSubscription.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PromoteReadReplicaDBCluster": {
            "main": "./lib/actions/PromoteReadReplicaDBCluster.js",
            "title": "PromoteReadReplicaDBCluster",
            "description": "Promotes a Read Replica DB cluster to a standalone DB cluster.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PromoteReadReplicaDBCluster.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "RebootDBInstance": {
            "main": "./lib/actions/RebootDBInstance.js",
            "title": "RebootDBInstance",
            "description": "You might need to reboot your DB instance, usually for maintenance reasons. For\nexample, if you make certain modifications, or if you change the DB parameter\ngroup associated with the DB instance, you must reboot the instance for the\nchanges to take effect. \n\nRebooting a DB instance restarts the database engine service. Rebooting a DB\ninstance results in a momentary outage, during which the DB instance status is\nset to rebooting.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/RebootDBInstance.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "RemoveRoleFromDBCluster": {
            "main": "./lib/actions/RemoveRoleFromDBCluster.js",
            "title": "RemoveRoleFromDBCluster",
            "description": "Disassociates an Identity and Access Management (IAM) role from a DB cluster. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/RemoveRoleFromDBCluster.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "RemoveSourceIdentifierFromSubscription": {
            "main": "./lib/actions/RemoveSourceIdentifierFromSubscription.js",
            "title": "RemoveSourceIdentifierFromSubscription",
            "description": "Removes a source identifier from an existing event notification subscription.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/RemoveSourceIdentifierFromSubscription.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "RemoveTagsFromResource": {
            "main": "./lib/actions/RemoveTagsFromResource.js",
            "title": "RemoveTagsFromResource",
            "description": "Removes metadata tags from an Amazon Neptune resource.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/RemoveTagsFromResource.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ResetDBClusterParameterGroup": {
            "main": "./lib/actions/ResetDBClusterParameterGroup.js",
            "title": "ResetDBClusterParameterGroup",
            "description": " Modifies the parameters of a DB cluster parameter group to the default value.\nTo reset specific parameters submit a list of the following: ParameterName and \nApplyMethod. To reset the entire DB cluster parameter group, specify the \nDBClusterParameterGroupName and ResetAllParameters parameters. \n\n When resetting the entire group, dynamic parameters are updated immediately and\nstatic parameters are set to pending-reboot to take effect on the next DB\ninstance restart or RebootDBInstance request. You must call RebootDBInstance for\nevery DB instance in your DB cluster that you want the updated static parameter\nto apply to.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ResetDBClusterParameterGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ResetDBParameterGroup": {
            "main": "./lib/actions/ResetDBParameterGroup.js",
            "title": "ResetDBParameterGroup",
            "description": "Modifies the parameters of a DB parameter group to the engine/system default value. To reset specific parameters, provide a list of the following: <code>ParameterName</code> and <code>ApplyMethod</code>. To reset the entire DB parameter group, specify the <code>DBParameterGroup</code> name and <code>ResetAllParameters</code> parameters. When resetting the entire group, dynamic parameters are updated immediately and static parameters are set to <code>pending-reboot</code> to take effect on the next DB instance restart or <code>RebootDBInstance</code> request. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ResetDBParameterGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "RestoreDBClusterFromSnapshot": {
            "main": "./lib/actions/RestoreDBClusterFromSnapshot.js",
            "title": "RestoreDBClusterFromSnapshot",
            "description": "Creates a new DB cluster from a DB snapshot or DB cluster snapshot.\n\nIf a DB snapshot is specified, the target DB cluster is created from the source\nDB snapshot with a default configuration and default security group.\n\nIf a DB cluster snapshot is specified, the target DB cluster is created from the\nsource DB cluster restore point with the same configuration as the original\nsource DB cluster, except that the new DB cluster is created with the default\nsecurity group.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/RestoreDBClusterFromSnapshot.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "RestoreDBClusterToPointInTime": {
            "main": "./lib/actions/RestoreDBClusterToPointInTime.js",
            "title": "RestoreDBClusterToPointInTime",
            "description": "Restores a DB cluster to an arbitrary point in time. Users can restore to any\npoint in time before LatestRestorableTime for up to BackupRetentionPeriod days.\nThe target DB cluster is created from the source DB cluster with the same\nconfiguration as the original DB cluster, except that the new DB cluster is\ncreated with the default DB security group. \n\nThis action only restores the DB cluster, not the DB instances for that DB\ncluster. You must invoke the CreateDBInstance action to create DB instances for\nthe restored DB cluster, specifying the identifier of the restored DB cluster in \nDBClusterIdentifier. You can create DB instances only after the \nRestoreDBClusterToPointInTime action has completed and the DB cluster is\navailable.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/RestoreDBClusterToPointInTime.in.json",
                "out": {
                    "type": "object"
                }
            }
        }
    }
}